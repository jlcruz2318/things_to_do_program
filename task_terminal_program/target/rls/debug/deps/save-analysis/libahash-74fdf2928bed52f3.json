{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3","program":"/home/check0ut/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ahash","--edition=2018","/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=74fdf2928bed52f3","-C","extra-filename=-74fdf2928bed52f3","--out-dir","/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps","-L","dependency=/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps","--extern","getrandom=/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps/libgetrandom-6169acab06947028.rmeta","--extern","once_cell=/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps/libonce_cell-36ca74419dab7fd0.rmeta","--cap-lints","allow","--cfg","feature=\"specialize\"","--cfg","feature=\"runtime-rng\"","--error-format=json","--sysroot","/home/check0ut/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps/libahash-74fdf2928bed52f3.rmeta"},"prelude":{"crate_id":{"name":"ahash","disambiguator":[14267862132344691911,4114382713944359352]},"crate_root":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src","external_crates":[{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15429624356446618517,8569649413289051645]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","num":2,"id":{"name":"core","disambiguator":[4815031162436372065,11706699389308624630]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4628913983776147606,4166494474098705015]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7174424503389257109,13219366384283905344]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17357329332601004886,8310488885758032040]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6979990046647763909,322311839660403258]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16154126209780285811,12247790275955945625]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[956108508964318028,11031814354832368758]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4733461622604769084,7282759344537789843]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7930410632304864395,6374345306481912453]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4465875723998724505,12406539844800460109]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[14729034667233650060,14598072801552865233]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[8670516990580881511,2629673046682140503]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[12083109337904666736,4328069237446597433]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[7450732207107213692,9225930641254710245]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17630689231379167505,5050206007867646341]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14992832896819005265,1613121632364623344]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","num":18,"id":{"name":"once_cell","disambiguator":[8034528785553424608,14126577533390473373]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","num":19,"id":{"name":"getrandom","disambiguator":[2130247435287414218,82805232012071531]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","num":20,"id":{"name":"cfg_if","disambiguator":[7841183052640537120,5700978676433312502]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","num":21,"id":{"name":"libc","disambiguator":[9214410705545263335,10278391066867773299]}}],"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":0,"byte_end":5918,"line_start":1,"line_end":194,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1134},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1990,"byte_end":1997,"line_start":55,"line_end":55,"column_start":31,"column_end":38},"alias_span":null,"name":"AHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1163},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":2028,"byte_end":2039,"line_start":56,"line_end":56,"column_start":30,"column_end":41},"alias_span":null,"name":"RandomState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":376},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":2069,"byte_end":2079,"line_start":58,"line_end":58,"column_start":28,"column_end":38},"alias_span":null,"name":"CallHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1143},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":2131,"byte_end":2139,"line_start":61,"line_end":61,"column_start":26,"column_end":34},"alias_span":null,"name":"AHashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1154},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":2190,"byte_end":2198,"line_start":63,"line_end":63,"column_start":26,"column_end":34},"alias_span":null,"name":"AHashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":0,"byte_end":5918,"line_start":1,"line_end":194,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":43},{"krate":0,"index":73},{"krate":0,"index":86},{"krate":0,"index":219},{"krate":0,"index":326},{"krate":0,"index":369},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":456}],"decl_id":null,"docs":" AHash is a hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.\n This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.\n It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.\n This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can\n induce a collision.","sig":null,"attributes":[{"value":"/ AHash is a hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":1,"column_start":1,"column_end":113}},{"value":"/ This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":113,"byte_end":212,"line_start":2,"line_end":2,"column_start":1,"column_end":100}},{"value":"/ It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":213,"byte_end":320,"line_start":3,"line_end":3,"column_start":1,"column_end":108}},{"value":"/ This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":321,"byte_end":429,"line_start":4,"line_end":4,"column_start":1,"column_end":109}},{"value":"/ induce a collision.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":430,"byte_end":453,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":454,"byte_end":457,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # How aHash works","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":458,"byte_end":479,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":480,"byte_end":483,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ aHash uses the hardware AES instruction on x86 processors to provide a keyed hash function.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":484,"byte_end":579,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ aHash is not a cryptographically secure hash.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":580,"byte_end":629,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":630,"byte_end":633,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":634,"byte_end":647,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":648,"byte_end":655,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use ahash::{AHasher, RandomState};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":656,"byte_end":694,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":695,"byte_end":729,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":730,"byte_end":733,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<i32, i32, RandomState> = HashMap::default();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":734,"byte_end":803,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ map.insert(12, 34);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":804,"byte_end":827,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":828,"byte_end":835,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ For convinence wrappers called `AHashMap` and `AHashSet` are also provided.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":836,"byte_end":915,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ These to the same thing with slightly less typing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":916,"byte_end":970,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/ ```ignore","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":971,"byte_end":984,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use ahash::AHashMap;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":985,"byte_end":1009,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut map: AHashMap<i32, i32> = AHashMap::with_capacity(4);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1014,"byte_end":1079,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ map.insert(12, 34);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1080,"byte_end":1103,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ map.insert(56, 78);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1104,"byte_end":1127,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1128,"byte_end":1135,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"deny(clippy :: correctness, clippy :: complexity, clippy :: perf)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1136,"byte_end":1199,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"allow(clippy :: pedantic, clippy :: cast_lossless, clippy ::\n        unreadable_literal)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1200,"byte_end":1278,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"feature(min_specialization)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":1374,"byte_end":1401,"line_start":32,"line_end":32,"column_start":37,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1134},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11929,"byte_end":11936,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"AHasher","qualname":"::fallback_hash::AHasher","value":"AHasher {  }","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137}],"decl_id":null,"docs":" A `Hasher` for hashing an arbitrary stream of bytes.","sig":null,"attributes":[{"value":"/ A `Hasher` for hashing an arbitrary stream of bytes.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11435,"byte_end":11491,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11492,"byte_end":11495,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances of [`AHasher`] represent state that is updated while hashing data.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11496,"byte_end":11576,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11577,"byte_end":11580,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Each method updates the internal state based on the new data provided. Once","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11581,"byte_end":11660,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ all of the data has been provided, the resulting hash can be obtained by calling","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11661,"byte_end":11745,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ `finish()`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11746,"byte_end":11760,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11761,"byte_end":11764,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [Clone] is also provided in case you wish to calculate hashes for two different items that","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11765,"byte_end":11859,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ start with the same data.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11860,"byte_end":11889,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":11890,"byte_end":11893,"line_start":23,"line_end":23,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":12166,"byte_end":12179,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<AHasher>::new_with_keys","value":"pub fn new_with_keys(u128, u128) -> AHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hasher keyed to the provided key.\n","sig":null,"attributes":[{"value":"/ Creates a new hasher keyed to the provided key.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":12018,"byte_end":12069,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":12074,"byte_end":12083,"line_start":33,"line_end":33,"column_start":5,"column_end":14}},{"value":"allow(dead_code)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":12088,"byte_end":12107,"line_start":34,"line_end":34,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30128,"byte_end":30136,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"AHashMap","qualname":"::hash_map::AHashMap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`HashMap`](std::collections::HashMap) using [`RandomState`](crate::RandomState) to hash the items.\n (Requires the `std` feature to be enabled.)\n","sig":null,"attributes":[{"value":"/ A [`HashMap`](std::collections::HashMap) using [`RandomState`](crate::RandomState) to hash the items.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":29946,"byte_end":30051,"line_start":17,"line_end":17,"column_start":1,"column_end":106}},{"value":"/ (Requires the `std` feature to be enabled.)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30052,"byte_end":30099,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30559,"byte_end":30562,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<AHashMap<K, V, RandomState>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30656,"byte_end":30669,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<AHashMap<K, V, RandomState>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30859,"byte_end":30870,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<AHashMap<K, V, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30969,"byte_end":30993,"line_start":50,"line_end":50,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<AHashMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31718,"byte_end":31721,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"get","qualname":"<AHashMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31204,"byte_end":31266,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31271,"byte_end":31274,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31279,"byte_end":31342,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31347,"byte_end":31414,"line_start":63,"line_end":63,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31419,"byte_end":31436,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31441,"byte_end":31444,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31449,"byte_end":31463,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31468,"byte_end":31471,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31476,"byte_end":31483,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31488,"byte_end":31522,"line_start":69,"line_end":69,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31527,"byte_end":31530,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31535,"byte_end":31568,"line_start":71,"line_end":71,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31573,"byte_end":31596,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31601,"byte_end":31641,"line_start":73,"line_end":73,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31646,"byte_end":31680,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31685,"byte_end":31692,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31697,"byte_end":31706,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32406,"byte_end":32419,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<AHashMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31854,"byte_end":31919,"line_start":85,"line_end":85,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31924,"byte_end":31927,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31932,"byte_end":32004,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32009,"byte_end":32076,"line_start":88,"line_end":88,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32081,"byte_end":32098,"line_start":89,"line_end":89,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32103,"byte_end":32106,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32111,"byte_end":32125,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32130,"byte_end":32133,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32138,"byte_end":32145,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32150,"byte_end":32184,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32189,"byte_end":32192,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32197,"byte_end":32230,"line_start":96,"line_end":96,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32235,"byte_end":32258,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32263,"byte_end":32319,"line_start":98,"line_end":98,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32324,"byte_end":32368,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32373,"byte_end":32380,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32385,"byte_end":32394,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33115,"byte_end":33122,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AHashMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32568,"byte_end":32638,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32643,"byte_end":32646,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32651,"byte_end":32714,"line_start":112,"line_end":112,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32719,"byte_end":32786,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32791,"byte_end":32808,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32813,"byte_end":32816,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32821,"byte_end":32835,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32840,"byte_end":32843,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32848,"byte_end":32855,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32860,"byte_end":32894,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32899,"byte_end":32902,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32907,"byte_end":32940,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32945,"byte_end":32968,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":32973,"byte_end":33011,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33016,"byte_end":33033,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33038,"byte_end":33043,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33048,"byte_end":33077,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33082,"byte_end":33089,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33094,"byte_end":33103,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34137,"byte_end":34143,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"insert","qualname":"<AHashMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33267,"byte_end":33309,"line_start":137,"line_end":137,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33314,"byte_end":33317,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33322,"byte_end":33389,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33394,"byte_end":33397,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33402,"byte_end":33477,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33482,"byte_end":33553,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [module-level","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33558,"byte_end":33631,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ documentation] for more.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33636,"byte_end":33664,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33669,"byte_end":33672,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [module-level documentation]: crate::collections#insert-and-complex-keys","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33677,"byte_end":33753,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33758,"byte_end":33761,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33766,"byte_end":33780,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33785,"byte_end":33788,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33793,"byte_end":33800,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33805,"byte_end":33839,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33844,"byte_end":33847,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33852,"byte_end":33885,"line_start":153,"line_end":153,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33890,"byte_end":33932,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33937,"byte_end":33975,"line_start":155,"line_end":155,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33980,"byte_end":33983,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":33988,"byte_end":34012,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34017,"byte_end":34064,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34069,"byte_end":34099,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34104,"byte_end":34111,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34116,"byte_end":34125,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34786,"byte_end":34792,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"remove","qualname":"<AHashMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34221,"byte_end":34294,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34299,"byte_end":34329,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34334,"byte_end":34337,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34342,"byte_end":34405,"line_start":169,"line_end":169,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34410,"byte_end":34477,"line_start":170,"line_end":170,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34482,"byte_end":34499,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34504,"byte_end":34507,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34512,"byte_end":34526,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34531,"byte_end":34534,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34539,"byte_end":34546,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34551,"byte_end":34585,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34590,"byte_end":34593,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34598,"byte_end":34631,"line_start":178,"line_end":178,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34636,"byte_end":34659,"line_start":179,"line_end":179,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34664,"byte_end":34706,"line_start":180,"line_end":180,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34711,"byte_end":34748,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34753,"byte_end":34760,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34765,"byte_end":34774,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39521,"byte_end":39529,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"AHashSet","qualname":"::hash_set::AHashSet","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`HashSet`](std::collections::HashSet) using [`RandomState`](crate::RandomState) to hash the items.\n (Requires the `std` feature to be enabled.)\n","sig":null,"attributes":[{"value":"/ A [`HashSet`](std::collections::HashSet) using [`RandomState`](crate::RandomState) to hash the items.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39339,"byte_end":39444,"line_start":15,"line_end":15,"column_start":1,"column_end":106}},{"value":"/ (Requires the `std` feature to be enabled.)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39445,"byte_end":39492,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39916,"byte_end":39919,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<AHashSet<T, RandomState>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40013,"byte_end":40026,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<AHashSet<T, RandomState>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40210,"byte_end":40221,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<AHashSet<T, S>>::with_hasher","value":"pub fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40320,"byte_end":40344,"line_start":48,"line_end":48,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<AHashSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1163},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":48900,"byte_end":48911,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"RandomState","qualname":"::random_state::RandomState","value":"RandomState {  }","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create\n [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","sig":null,"attributes":[{"value":"/ Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":48560,"byte_end":48645,"line_start":58,"line_end":58,"column_start":1,"column_end":86}},{"value":"/ [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":48646,"byte_end":48724,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":48725,"byte_end":48728,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [build_hasher]: ahash::","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":48729,"byte_end":48756,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":48757,"byte_end":48788,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":48789,"byte_end":48830,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":48831,"byte_end":48871,"line_start":64,"line_end":64,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":49235,"byte_end":49238,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<RandomState>::new","value":"pub fn new() -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Use randomly generated keys\n","sig":null,"attributes":[{"value":"/ Use randomly generated keys","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":49178,"byte_end":49209,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":49214,"byte_end":49223,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":50403,"byte_end":50416,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"generate_with","qualname":"<RandomState>::generate_with","value":"pub fn generate_with(u64, u64, u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for supplying seeds, but each time it is called the resulting state will be different.\n This is done using a static counter, so it can safely be used with a fixed keys.\n","sig":null,"attributes":[{"value":"/ Allows for supplying seeds, but each time it is called the resulting state will be different.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":50191,"byte_end":50288,"line_start":105,"line_end":105,"column_start":5,"column_end":102}},{"value":"/ This is done using a static counter, so it can safely be used with a fixed keys.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":50293,"byte_end":50377,"line_start":106,"line_end":106,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":50382,"byte_end":50391,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":51863,"byte_end":51873,"line_start":148,"line_end":148,"column_start":18,"column_end":28},"name":"with_seeds","qualname":"<RandomState>::with_seeds","value":"pub const fn with_seeds(u64, u64, u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for explicitly setting the seeds to used.\n","sig":null,"attributes":[{"value":"/ Allows for explicitly setting the seeds to used.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":51779,"byte_end":51831,"line_start":146,"line_end":146,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":51836,"byte_end":51845,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":376},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":55132,"byte_end":55142,"line_start":30,"line_end":30,"column_start":11,"column_end":21},"name":"CallHasher","qualname":"::specialize::CallHasher","value":"CallHasher","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" Provides a way to get an optimized hasher for a given data type.\n Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash\n for a specific type. So this may be faster for primitive types. It does however consume the hasher in the process.\n # Example\n ```\n use std::hash::BuildHasher;\n use ahash::RandomState;\n use ahash::CallHasher;","sig":null,"attributes":[{"value":"/ Provides a way to get an optimized hasher for a given data type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54558,"byte_end":54626,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54627,"byte_end":54741,"line_start":17,"line_end":17,"column_start":1,"column_end":115}},{"value":"/ for a specific type. So this may be faster for primitive types. It does however consume the hasher in the process.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54742,"byte_end":54860,"line_start":18,"line_end":18,"column_start":1,"column_end":119}},{"value":"/ # Example","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54861,"byte_end":54874,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54875,"byte_end":54882,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use std::hash::BuildHasher;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54883,"byte_end":54914,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ use ahash::RandomState;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54915,"byte_end":54942,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/ use ahash::CallHasher;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54943,"byte_end":54969,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54970,"byte_end":54973,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let hash_builder = RandomState::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":54974,"byte_end":55016,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/ //...","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":55017,"byte_end":55026,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ let value = 17;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":55027,"byte_end":55046,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ let hash = u32::get_hash(&value, hash_builder.build_hasher());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":55047,"byte_end":55113,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":55114,"byte_end":55121,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":55152,"byte_end":55160,"line_start":31,"line_end":31,"column_start":8,"column_end":16},"name":"get_hash","qualname":"::specialize::CallHasher::get_hash","value":"pub fn get_hash<H: Hasher>(&Self, H) -> u64","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":12,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":12004,"byte_end":12011,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":16807,"byte_end":16814,"line_start":110,"line_end":110,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":17216,"byte_end":17223,"line_start":126,"line_end":126,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30242,"byte_end":30250,"line_start":22,"line_end":22,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30409,"byte_end":30417,"line_start":28,"line_end":28,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30518,"byte_end":30526,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30806,"byte_end":30814,"line_start":44,"line_end":44,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31137,"byte_end":31145,"line_start":55,"line_end":55,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34953,"byte_end":34961,"line_start":193,"line_end":193,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35100,"byte_end":35108,"line_start":200,"line_end":200,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35229,"byte_end":35237,"line_start":206,"line_end":206,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35324,"byte_end":35332,"line_start":213,"line_end":213,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35518,"byte_end":35526,"line_start":224,"line_end":224,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35635,"byte_end":35643,"line_start":232,"line_end":232,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":36029,"byte_end":36037,"line_start":251,"line_end":251,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":36236,"byte_end":36244,"line_start":262,"line_end":262,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":36908,"byte_end":36916,"line_start":288,"line_end":288,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":37110,"byte_end":37118,"line_start":296,"line_end":296,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":37338,"byte_end":37346,"line_start":307,"line_end":307,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":37582,"byte_end":37590,"line_start":319,"line_end":319,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39623,"byte_end":39631,"line_start":20,"line_end":20,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39778,"byte_end":39786,"line_start":26,"line_end":26,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39878,"byte_end":39886,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40160,"byte_end":40168,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40495,"byte_end":40503,"line_start":53,"line_end":53,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40633,"byte_end":40641,"line_start":60,"line_end":60,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40755,"byte_end":40763,"line_start":66,"line_end":66,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40922,"byte_end":40930,"line_start":76,"line_end":76,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":44233,"byte_end":44241,"line_start":211,"line_end":211,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":44419,"byte_end":44427,"line_start":221,"line_end":221,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":44853,"byte_end":44861,"line_start":240,"line_end":240,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":45036,"byte_end":45044,"line_start":248,"line_end":248,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":45244,"byte_end":45252,"line_start":259,"line_end":259,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":45455,"byte_end":45463,"line_start":270,"line_end":270,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":49033,"byte_end":49044,"line_start":73,"line_end":73,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":49160,"byte_end":49171,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":51992,"byte_end":52003,"line_start":153,"line_end":153,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":52097,"byte_end":52108,"line_start":160,"line_end":160,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":55495,"byte_end":55496,"line_start":47,"line_end":47,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":58610,"byte_end":58613,"line_start":174,"line_end":174,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":60069,"byte_end":60075,"line_start":237,"line_end":237,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":3034,"byte_end":3041,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":4330,"byte_end":4331,"line_start":128,"line_end":128,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":12004,"byte_end":12011,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":16807,"byte_end":16814,"line_start":110,"line_end":110,"column_start":20,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1134},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/fallback_hash.rs","byte_start":17216,"byte_end":17223,"line_start":126,"line_end":126,"column_start":17,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1134},"to":{"krate":2,"index":6506}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30242,"byte_end":30250,"line_start":22,"line_end":22,"column_start":56,"column_end":64},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30409,"byte_end":30417,"line_start":28,"line_end":28,"column_start":56,"column_end":64},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":1881}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30518,"byte_end":30526,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":30806,"byte_end":30814,"line_start":44,"line_end":44,"column_start":15,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":31137,"byte_end":31145,"line_start":55,"line_end":55,"column_start":15,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":34953,"byte_end":34961,"line_start":193,"line_end":193,"column_start":25,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":2137}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35100,"byte_end":35108,"line_start":200,"line_end":200,"column_start":28,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":2150}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35229,"byte_end":35237,"line_start":206,"line_end":206,"column_start":30,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1143},"to":{"krate":1,"index":3798}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35324,"byte_end":35332,"line_start":213,"line_end":213,"column_start":29,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":1692}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35518,"byte_end":35526,"line_start":224,"line_end":224,"column_start":22,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":35635,"byte_end":35643,"line_start":232,"line_end":232,"column_start":40,"column_end":48},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":2218}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":36029,"byte_end":36037,"line_start":251,"line_end":251,"column_start":25,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":6310}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":36236,"byte_end":36244,"line_start":262,"line_end":262,"column_start":40,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":4940}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":36908,"byte_end":36916,"line_start":288,"line_end":288,"column_start":32,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":37110,"byte_end":37118,"line_start":296,"line_end":296,"column_start":34,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":4953}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":37338,"byte_end":37346,"line_start":307,"line_end":307,"column_start":46,"column_end":54},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":4953}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_map.rs","byte_start":37582,"byte_end":37590,"line_start":319,"line_end":319,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39623,"byte_end":39631,"line_start":20,"line_end":20,"column_start":50,"column_end":58},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39778,"byte_end":39786,"line_start":26,"line_end":26,"column_start":50,"column_end":58},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":1881}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":39878,"byte_end":39886,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40160,"byte_end":40168,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40495,"byte_end":40503,"line_start":53,"line_end":53,"column_start":22,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":2137}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40633,"byte_end":40641,"line_start":60,"line_end":60,"column_start":25,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":2150}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40755,"byte_end":40763,"line_start":66,"line_end":66,"column_start":26,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":1692}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":40922,"byte_end":40930,"line_start":76,"line_end":76,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":44233,"byte_end":44241,"line_start":211,"line_end":211,"column_start":22,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":6310}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":44419,"byte_end":44427,"line_start":221,"line_end":221,"column_start":32,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":4940}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":44853,"byte_end":44861,"line_start":240,"line_end":240,"column_start":29,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":4944}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":45036,"byte_end":45044,"line_start":248,"line_end":248,"column_start":26,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":4953}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":45244,"byte_end":45252,"line_start":259,"line_end":259,"column_start":34,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":4953}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/hash_set.rs","byte_start":45455,"byte_end":45463,"line_start":270,"line_end":270,"column_start":21,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":49033,"byte_end":49044,"line_start":73,"line_end":73,"column_start":21,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1163},"to":{"krate":2,"index":6310}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":49160,"byte_end":49171,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":51992,"byte_end":52003,"line_start":153,"line_end":153,"column_start":18,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1163},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/random_state.rs","byte_start":52097,"byte_end":52108,"line_start":160,"line_end":160,"column_start":22,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1163},"to":{"krate":2,"index":6537}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":55495,"byte_end":55496,"line_start":47,"line_end":47,"column_start":24,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":380},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":58610,"byte_end":58613,"line_start":174,"line_end":174,"column_start":21,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":5,"index":4364},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/specialize.rs","byte_start":60069,"byte_end":60075,"line_start":237,"line_end":237,"column_start":21,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":5,"index":5077},"to":{"krate":0,"index":376}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":3034,"byte_end":3041,"line_start":88,"line_end":88,"column_start":18,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1134},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":4172,"byte_end":4178,"line_start":120,"line_end":120,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":6506},"to":{"krate":0,"index":453}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.6.3/src/lib.rs","byte_start":4330,"byte_end":4331,"line_start":128,"line_end":128,"column_start":31,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":453}}]}