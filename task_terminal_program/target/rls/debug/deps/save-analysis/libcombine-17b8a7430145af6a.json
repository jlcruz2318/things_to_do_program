{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0","program":"/home/check0ut/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","combine","--edition=2018","/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"std\"","-C","metadata=17b8a7430145af6a","-C","extra-filename=-17b8a7430145af6a","--out-dir","/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps","-L","dependency=/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps","--extern","bytes=/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps/libbytes-0499367ef65e2e33.rmeta","--extern","memchr=/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps/libmemchr-a89d6ce110affb48.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/check0ut/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/check0ut/Projects/things_to_do_program/task_terminal_program/target/rls/debug/deps/libcombine-17b8a7430145af6a.rmeta"},"prelude":{"crate_id":{"name":"combine","disambiguator":[12893010188848946184,15838682076722299655]},"crate_root":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src","external_crates":[{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15429624356446618517,8569649413289051645]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","num":2,"id":{"name":"core","disambiguator":[4815031162436372065,11706699389308624630]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4628913983776147606,4166494474098705015]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7174424503389257109,13219366384283905344]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17357329332601004886,8310488885758032040]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6979990046647763909,322311839660403258]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16154126209780285811,12247790275955945625]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[956108508964318028,11031814354832368758]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4733461622604769084,7282759344537789843]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7930410632304864395,6374345306481912453]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[4465875723998724505,12406539844800460109]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[14729034667233650060,14598072801552865233]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[8670516990580881511,2629673046682140503]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[12083109337904666736,4328069237446597433]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[7450732207107213692,9225930641254710245]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17630689231379167505,5050206007867646341]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14992832896819005265,1613121632364623344]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","num":18,"id":{"name":"bytes","disambiguator":[11789816094166922707,16494267793015286413]}},{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","num":19,"id":{"name":"memchr","disambiguator":[8314654616316361832,15167335039823406373]}}],"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":0,"byte_end":35590,"line_start":1,"line_end":1006,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8356,"byte_end":8366,"line_start":199,"line_end":199,"column_start":24,"column_end":34},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3146},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8368,"byte_end":8379,"line_start":199,"line_end":199,"column_start":36,"column_end":47},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8381,"byte_end":8395,"line_start":199,"line_end":199,"column_start":49,"column_end":63},"alias_span":null,"name":"StdParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3016},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8461,"byte_end":8471,"line_start":203,"line_end":203,"column_start":24,"column_end":34},"alias_span":null,"name":"EasyParser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2946},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8512,"byte_end":8518,"line_start":206,"line_end":206,"column_start":24,"column_end":30},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1122},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8560,"byte_end":8570,"line_start":209,"line_end":209,"column_start":25,"column_end":35},"alias_span":null,"name":"Positioned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8572,"byte_end":8583,"line_start":209,"line_end":209,"column_start":37,"column_end":48},"alias_span":null,"name":"RangeStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8585,"byte_end":8600,"line_start":209,"line_end":209,"column_start":50,"column_end":65},"alias_span":null,"name":"RangeStreamOnce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1137},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8602,"byte_end":8608,"line_start":209,"line_end":209,"column_start":67,"column_end":73},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1126},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8610,"byte_end":8620,"line_start":209,"line_end":209,"column_start":75,"column_end":85},"alias_span":null,"name":"StreamOnce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1728},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8676,"byte_end":8684,"line_start":213,"line_end":213,"column_start":13,"column_end":21},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1784},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8703,"byte_end":8710,"line_start":214,"line_end":214,"column_start":18,"column_end":25},"alias_span":null,"name":"attempt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1794},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8712,"byte_end":8722,"line_start":214,"line_end":214,"column_start":27,"column_end":37},"alias_span":null,"name":"look_ahead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1770},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8724,"byte_end":8739,"line_start":214,"line_end":214,"column_start":39,"column_end":54},"alias_span":null,"name":"not_followed_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2136},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8754,"byte_end":8764,"line_start":215,"line_end":215,"column_start":13,"column_end":23},"alias_span":null,"name":"unexpected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2140},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8766,"byte_end":8780,"line_start":215,"line_end":215,"column_start":25,"column_end":39},"alias_span":null,"name":"unexpected_any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2204},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8797,"byte_end":8803,"line_start":216,"line_end":216,"column_start":15,"column_end":21},"alias_span":null,"name":"parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2597},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8827,"byte_end":8834,"line_start":218,"line_end":218,"column_start":9,"column_end":16},"alias_span":null,"name":"chainl1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2609},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8836,"byte_end":8843,"line_start":218,"line_end":218,"column_start":18,"column_end":25},"alias_span":null,"name":"chainr1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7141},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8845,"byte_end":8850,"line_start":218,"line_end":218,"column_start":27,"column_end":32},"alias_span":null,"name":"count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2437},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8852,"byte_end":8865,"line_start":218,"line_end":218,"column_start":34,"column_end":47},"alias_span":null,"name":"count_min_max","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2497},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8867,"byte_end":8871,"line_start":218,"line_end":218,"column_start":49,"column_end":53},"alias_span":null,"name":"many","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2511},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8873,"byte_end":8878,"line_start":218,"line_end":218,"column_start":55,"column_end":60},"alias_span":null,"name":"many1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2532},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8880,"byte_end":8886,"line_start":218,"line_end":218,"column_start":62,"column_end":68},"alias_span":null,"name":"sep_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2549},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8888,"byte_end":8895,"line_start":218,"line_end":218,"column_start":70,"column_end":77},"alias_span":null,"name":"sep_by1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2565},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8897,"byte_end":8907,"line_start":218,"line_end":218,"column_start":79,"column_end":89},"alias_span":null,"name":"sep_end_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2583},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8917,"byte_end":8928,"line_start":219,"line_end":219,"column_start":9,"column_end":20},"alias_span":null,"name":"sep_end_by1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7164},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8930,"byte_end":8940,"line_start":219,"line_end":219,"column_start":22,"column_end":32},"alias_span":null,"name":"skip_count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7204},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8942,"byte_end":8960,"line_start":219,"line_end":219,"column_start":34,"column_end":52},"alias_span":null,"name":"skip_count_min_max","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7260},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8962,"byte_end":8971,"line_start":219,"line_end":219,"column_start":54,"column_end":63},"alias_span":null,"name":"skip_many","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7279},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8973,"byte_end":8983,"line_start":219,"line_end":219,"column_start":65,"column_end":75},"alias_span":null,"name":"skip_many1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9206},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9006,"byte_end":9013,"line_start":221,"line_end":221,"column_start":15,"column_end":22},"alias_span":null,"name":"between","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2826},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9036,"byte_end":9039,"line_start":223,"line_end":223,"column_start":9,"column_end":12},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2944},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9041,"byte_end":9044,"line_start":223,"line_end":223,"column_start":14,"column_end":17},"alias_span":null,"name":"eof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2915},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9046,"byte_end":9053,"line_start":223,"line_end":223,"column_start":19,"column_end":26},"alias_span":null,"name":"none_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2904},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9055,"byte_end":9061,"line_start":223,"line_end":223,"column_start":28,"column_end":34},"alias_span":null,"name":"one_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2893},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9063,"byte_end":9071,"line_start":223,"line_end":223,"column_start":36,"column_end":44},"alias_span":null,"name":"position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2934},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9073,"byte_end":9080,"line_start":223,"line_end":223,"column_start":46,"column_end":53},"alias_span":null,"name":"produce","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2839},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9082,"byte_end":9089,"line_start":223,"line_end":223,"column_start":55,"column_end":62},"alias_span":null,"name":"satisfy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2849},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9091,"byte_end":9102,"line_start":223,"line_end":223,"column_start":64,"column_end":75},"alias_span":null,"name":"satisfy_map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2860},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9104,"byte_end":9109,"line_start":223,"line_end":223,"column_start":77,"column_end":82},"alias_span":null,"name":"token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2872},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9111,"byte_end":9117,"line_start":223,"line_end":223,"column_start":84,"column_end":90},"alias_span":null,"name":"tokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2924},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9119,"byte_end":9124,"line_start":223,"line_end":223,"column_start":92,"column_end":97},"alias_span":null,"name":"value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1704},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9183,"byte_end":9189,"line_start":228,"line_end":228,"column_start":32,"column_end":38},"alias_span":null,"name":"choice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6929},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9242,"byte_end":9250,"line_start":231,"line_end":231,"column_start":36,"column_end":44},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2884},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":9298,"byte_end":9308,"line_start":234,"line_end":234,"column_start":31,"column_end":41},"alias_span":null,"name":"tokens_cmp","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":12372,"byte_end":12373,"line_start":326,"line_end":326,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"convert, error, str, fmt, marker, borrow, cfg, mem, cmp","parent":{"krate":0,"index":60}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22743,"byte_end":22747,"line_start":609,"line_end":609,"column_start":24,"column_end":28},"alias_span":null,"name":"easy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3500},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":67349,"byte_end":67356,"line_start":27,"line_end":27,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":444}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":0,"byte_end":35590,"line_start":1,"line_end":1006,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":444},{"krate":0,"index":1443},{"krate":0,"index":9444},{"krate":0,"index":9460},{"krate":0,"index":9454},{"krate":0,"index":9450},{"krate":0,"index":9451},{"krate":0,"index":9448},{"krate":0,"index":9447}],"decl_id":null,"docs":" This crate contains parser combinators, roughly based on the Haskell libraries\n [parsec](http://hackage.haskell.org/package/parsec) and\n [attoparsec](https://hackage.haskell.org/package/attoparsec).","sig":null,"attributes":[{"value":"/ This crate contains parser combinators, roughly based on the Haskell libraries","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":0,"byte_end":82,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"/ [parsec](http://hackage.haskell.org/package/parsec) and","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":83,"byte_end":142,"line_start":2,"line_end":2,"column_start":1,"column_end":60}},{"value":"/ [attoparsec](https://hackage.haskell.org/package/attoparsec).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":143,"byte_end":208,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":209,"byte_end":212,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A parser in this library can be described as a function which takes some input and if it","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":213,"byte_end":305,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ is successful, returns a value together with the remaining input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":306,"byte_end":375,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ A parser combinator is a function which takes one or more parsers and returns a new parser.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":376,"byte_end":471,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ For instance the [`many`] parser can be used to convert a parser for single digits into one that","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":472,"byte_end":572,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ parses multiple digits. By modeling parsers in this way it becomes easy to compose complex","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":573,"byte_end":667,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ parsers in an almost declarative way.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":668,"byte_end":709,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":710,"byte_end":713,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":714,"byte_end":728,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":729,"byte_end":732,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `combine` limits itself to creating [LL(1) parsers](https://en.wikipedia.org/wiki/LL_parser)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":733,"byte_end":829,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ (it is possible to opt-in to LL(k) parsing using the [`attempt`] combinator) which makes the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":830,"byte_end":926,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ parsers easy to reason about in both function and performance while sacrificing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":927,"byte_end":1010,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/ some generality. In addition to you being able to reason better about the parsers you","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1011,"byte_end":1100,"line_start":17,"line_end":17,"column_start":1,"column_end":90}},{"value":"/ construct `combine` the library also takes the knowledge of being an LL parser and uses it to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1101,"byte_end":1198,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ automatically construct good error messages.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1199,"byte_end":1247,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1248,"byte_end":1251,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1252,"byte_end":1263,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1264,"byte_end":1289,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/ use combine::{Parser, EasyParser};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1290,"byte_end":1328,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ use combine::stream::position;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1329,"byte_end":1363,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ use combine::parser::char::{digit, letter};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1364,"byte_end":1411,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ const MSG: &'static str = r#\"Parse error at line: 1, column: 1","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1412,"byte_end":1478,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ Unexpected `|`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1479,"byte_end":1497,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/ Expected `digit` or `letter`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1498,"byte_end":1530,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ \"#;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1531,"byte_end":1538,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1539,"byte_end":1542,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1543,"byte_end":1558,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/     // Wrapping a `&str` with `State` provides automatic line and column tracking. If `State`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1559,"byte_end":1656,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/     // was not used the positions would instead only be pointers into the `&str`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1657,"byte_end":1741,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/     if let Err(err) = digit().or(letter()).easy_parse(position::Stream::new(\"|\")) {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1742,"byte_end":1829,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/         assert_eq!(MSG, format!(\"{}\", err));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1830,"byte_end":1878,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1879,"byte_end":1888,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1889,"byte_end":1894,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1895,"byte_end":1902,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1903,"byte_end":1906,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This library is currently split into a few core modules:","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1907,"byte_end":1967,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1968,"byte_end":1971,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * [`parser`][mod parser] is where you will find all the parsers that combine provides. It contains the core","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":1972,"byte_end":2083,"line_start":42,"line_end":42,"column_start":1,"column_end":112}},{"value":"/ [`Parser`] trait as well as several submodules such as `sequence` or `choice` which each","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2084,"byte_end":2176,"line_start":43,"line_end":43,"column_start":1,"column_end":93}},{"value":"/ contain several parsers aimed at a specific niche.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2177,"byte_end":2231,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2232,"byte_end":2235,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ * [`stream`] contains the second most important trait next to [`Parser`]. Streams represent the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2236,"byte_end":2335,"line_start":46,"line_end":46,"column_start":1,"column_end":100}},{"value":"/ data source which is being parsed such as `&[u8]`, `&str` or iterators.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2336,"byte_end":2411,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2412,"byte_end":2415,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * [`easy`] contains combine's default \"easy\" error and stream handling. If you use the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2416,"byte_end":2506,"line_start":49,"line_end":49,"column_start":1,"column_end":91}},{"value":"/ `easy_parse` method to start your parsing these are the types that are used.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2507,"byte_end":2587,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2588,"byte_end":2591,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ * [`error`] contains the types and traits that make up combine's error handling. Unless you","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2592,"byte_end":2687,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ need to customize the errors your parsers return you should not need to use this module much.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2688,"byte_end":2785,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2786,"byte_end":2789,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2790,"byte_end":2793,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2794,"byte_end":2808,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2809,"byte_end":2812,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2813,"byte_end":2820,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2821,"byte_end":2846,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/ use combine::parser::char::{spaces, digit, char};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2847,"byte_end":2900,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ use combine::{many1, sep_by, Parser, EasyParser};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2901,"byte_end":2954,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2955,"byte_end":2985,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2986,"byte_end":2989,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":2990,"byte_end":3005,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/     //Parse spaces first and use the with method to only keep the result of the next parser","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3006,"byte_end":3101,"line_start":65,"line_end":65,"column_start":1,"column_end":96}},{"value":"/     let integer = spaces()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3102,"byte_end":3132,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/         //parse a string of digits into an i32","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3133,"byte_end":3183,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/         .with(many1(digit()).map(|string: String| string.parse::<i32>().unwrap()));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3184,"byte_end":3271,"line_start":68,"line_end":68,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3272,"byte_end":3275,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     //Parse integers separated by commas, skipping whitespace","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3276,"byte_end":3341,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/     let mut integer_list = sep_by(integer, spaces().skip(char(',')));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3342,"byte_end":3415,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3416,"byte_end":3419,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     //Call parse with the input to execute the parser","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3420,"byte_end":3477,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/     let input = \"1234, 45,78\";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3478,"byte_end":3512,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     let result: Result<(Vec<i32>, &str), easy::ParseError<&str>> =","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3513,"byte_end":3583,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/         integer_list.easy_parse(input);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3584,"byte_end":3627,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/     match result {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3628,"byte_end":3650,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/         Ok((value, _remaining_input)) => println!(\"{:?}\", value),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3651,"byte_end":3720,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"/         Err(err) => println!(\"{}\", err)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3721,"byte_end":3764,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3765,"byte_end":3774,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3775,"byte_end":3780,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3781,"byte_end":3788,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3789,"byte_end":3792,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ If we need a parser that is mutually recursive or if we want to export a reusable parser the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3793,"byte_end":3889,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/ [`parser!`] macro can be used. In effect it makes it possible to return a parser without naming","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3890,"byte_end":3989,"line_start":85,"line_end":85,"column_start":1,"column_end":100}},{"value":"/ the type of the parser (which can be very large due to combine's trait based approach). While","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":3990,"byte_end":4087,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ it is possible to do avoid naming the type without the macro those solutions require either allocation","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4088,"byte_end":4194,"line_start":87,"line_end":87,"column_start":1,"column_end":107}},{"value":"/ (`Box<dyn Parser< Input, Output = O, PartialState = P>>`) or nightly rust via `impl Trait`. The","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4195,"byte_end":4294,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ macro thus threads the needle and makes it possible to have non-allocating, anonymous parsers","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4295,"byte_end":4392,"line_start":89,"line_end":89,"column_start":1,"column_end":98}},{"value":"/ on stable rust.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4393,"byte_end":4412,"line_start":90,"line_end":90,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4413,"byte_end":4416,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4417,"byte_end":4424,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4425,"byte_end":4441,"line_start":93,"line_end":93,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4442,"byte_end":4467,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/ use combine::parser::char::{char, letter, spaces};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4468,"byte_end":4522,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/ use combine::{between, choice, many1, parser, sep_by, Parser, EasyParser};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4523,"byte_end":4601,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ use combine::error::{ParseError, StdParseResult};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4602,"byte_end":4655,"line_start":97,"line_end":97,"column_start":1,"column_end":54}},{"value":"/ use combine::stream::{Stream, Positioned};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4656,"byte_end":4702,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/ use combine::stream::position;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4703,"byte_end":4737,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4738,"byte_end":4741,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4742,"byte_end":4773,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ pub enum Expr {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4774,"byte_end":4793,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/     Id(String),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4794,"byte_end":4813,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/     Array(Vec<Expr>),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4814,"byte_end":4839,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/     Pair(Box<Expr>, Box<Expr>)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4840,"byte_end":4874,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4875,"byte_end":4880,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4881,"byte_end":4884,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `impl Parser` can be used to create reusable parsers with zero overhead","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4885,"byte_end":4963,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/ fn expr_<Input>() -> impl Parser< Input, Output = Expr>","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":4964,"byte_end":5023,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/     where Input: Stream<Token = char>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5024,"byte_end":5066,"line_start":110,"line_end":110,"column_start":1,"column_end":43}},{"value":"/           // Necessary due to rust-lang/rust#24159","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5067,"byte_end":5121,"line_start":111,"line_end":111,"column_start":1,"column_end":55}},{"value":"/           Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5122,"byte_end":5206,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/ {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5207,"byte_end":5212,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/     let word = many1(letter());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5213,"byte_end":5248,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5249,"byte_end":5252,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     // A parser which skips past whitespace.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5253,"byte_end":5301,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/     // Since we aren't interested in knowing that our expression parser","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5302,"byte_end":5377,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/     // could have accepted additional whitespace between the tokens we also silence the error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5378,"byte_end":5476,"line_start":118,"line_end":118,"column_start":1,"column_end":99}},{"value":"/     let skip_spaces = || spaces().silent();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5477,"byte_end":5524,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5525,"byte_end":5528,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/     //Creates a parser which parses a char and skips any trailing whitespace","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5529,"byte_end":5609,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/     let lex_char = |c| char(c).skip(skip_spaces());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5610,"byte_end":5665,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5666,"byte_end":5669,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/     let comma_list = sep_by(expr(), lex_char(','));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5670,"byte_end":5725,"line_start":124,"line_end":124,"column_start":1,"column_end":56}},{"value":"/     let array = between(lex_char('['), lex_char(']'), comma_list);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5726,"byte_end":5796,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5797,"byte_end":5800,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/     //We can use tuples to run several parsers in sequence","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5801,"byte_end":5863,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"/     //The resulting type is a tuple containing each parsers output","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5864,"byte_end":5934,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/     let pair = (lex_char('('),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5935,"byte_end":5969,"line_start":129,"line_end":129,"column_start":1,"column_end":35}},{"value":"/                 expr(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5970,"byte_end":5997,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/                 lex_char(','),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":5998,"byte_end":6032,"line_start":131,"line_end":131,"column_start":1,"column_end":35}},{"value":"/                 expr(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6033,"byte_end":6060,"line_start":132,"line_end":132,"column_start":1,"column_end":28}},{"value":"/                 lex_char(')'))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6061,"byte_end":6095,"line_start":133,"line_end":133,"column_start":1,"column_end":35}},{"value":"/                    .map(|t| Expr::Pair(Box::new(t.1), Box::new(t.3)));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6096,"byte_end":6170,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6171,"byte_end":6174,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/     choice((","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6175,"byte_end":6191,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/         word.map(Expr::Id),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6192,"byte_end":6223,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/         array.map(Expr::Array),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6224,"byte_end":6259,"line_start":138,"line_end":138,"column_start":1,"column_end":36}},{"value":"/         pair,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6260,"byte_end":6277,"line_start":139,"line_end":139,"column_start":1,"column_end":18}},{"value":"/     ))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6278,"byte_end":6288,"line_start":140,"line_end":140,"column_start":1,"column_end":11}},{"value":"/         .skip(skip_spaces())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6289,"byte_end":6321,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6322,"byte_end":6327,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6328,"byte_end":6331,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ // As this expression parser needs to be able to call itself recursively `impl Parser` can't","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6332,"byte_end":6428,"line_start":144,"line_end":144,"column_start":1,"column_end":97}},{"value":"/ // be used on its own as that would cause an infinitely large type. We can avoid this by using","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6429,"byte_end":6527,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/ // the `parser!` macro which erases the inner type and the size of that type entirely which","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6528,"byte_end":6623,"line_start":146,"line_end":146,"column_start":1,"column_end":96}},{"value":"/ // lets it be used recursively.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6624,"byte_end":6659,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/ //","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6660,"byte_end":6666,"line_start":148,"line_end":148,"column_start":1,"column_end":7}},{"value":"/ // (This macro does not use `impl Trait` which means it can be used in rust < 1.26 as well to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6667,"byte_end":6764,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/ // emulate `impl Parser`)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6765,"byte_end":6794,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/ parser!{","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6795,"byte_end":6807,"line_start":151,"line_end":151,"column_start":1,"column_end":13}},{"value":"/     fn expr[Input]()(Input) -> Expr","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6808,"byte_end":6847,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"/     where [Input: Stream<Token = char>]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6848,"byte_end":6891,"line_start":153,"line_end":153,"column_start":1,"column_end":44}},{"value":"/     {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6892,"byte_end":6901,"line_start":154,"line_end":154,"column_start":1,"column_end":10}},{"value":"/         expr_()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6902,"byte_end":6921,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6922,"byte_end":6931,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6932,"byte_end":6937,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6938,"byte_end":6941,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6942,"byte_end":6957,"line_start":159,"line_end":159,"column_start":1,"column_end":16}},{"value":"/     let result = expr()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6958,"byte_end":6985,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/         .parse(\"[[], (hello, world), [rust]]\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":6986,"byte_end":7037,"line_start":161,"line_end":161,"column_start":1,"column_end":52}},{"value":"/     let expr = Expr::Array(vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7038,"byte_end":7074,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/           Expr::Array(Vec::new())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7075,"byte_end":7112,"line_start":163,"line_end":163,"column_start":1,"column_end":38}},{"value":"/         , Expr::Pair(Box::new(Expr::Id(\"hello\".to_string())),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7113,"byte_end":7178,"line_start":164,"line_end":164,"column_start":1,"column_end":66}},{"value":"/                      Box::new(Expr::Id(\"world\".to_string())))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7179,"byte_end":7244,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/         , Expr::Array(vec![Expr::Id(\"rust\".to_string())])","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7245,"byte_end":7306,"line_start":166,"line_end":166,"column_start":1,"column_end":62}},{"value":"/     ]);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7307,"byte_end":7318,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(result, Ok((expr, \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7319,"byte_end":7362,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7363,"byte_end":7368,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7369,"byte_end":7376,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7377,"byte_end":7380,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [`combinator`]: combinator/index.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7381,"byte_end":7422,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"/ [mod parser]: parser/index.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7423,"byte_end":7458,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"/ [`easy`]: easy/index.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7459,"byte_end":7488,"line_start":174,"line_end":174,"column_start":1,"column_end":30}},{"value":"/ [`error`]: error/index.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7489,"byte_end":7520,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/ [`char`]: parser/char/index.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7521,"byte_end":7557,"line_start":176,"line_end":176,"column_start":1,"column_end":37}},{"value":"/ [`byte`]: parser/byte/index.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7558,"byte_end":7594,"line_start":177,"line_end":177,"column_start":1,"column_end":37}},{"value":"/ [`range`]: parser/range/index.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7595,"byte_end":7633,"line_start":178,"line_end":178,"column_start":1,"column_end":39}},{"value":"/ [`many`]: parser/repeat/fn.many.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7634,"byte_end":7674,"line_start":179,"line_end":179,"column_start":1,"column_end":41}},{"value":"/ [`attempt`]: parser/combinator/fn.attempt.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7675,"byte_end":7725,"line_start":180,"line_end":180,"column_start":1,"column_end":51}},{"value":"/ [`satisfy`]: parser/token/fn.satisfy.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7726,"byte_end":7771,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ [`or`]: parser/trait.Parser.html#method.or","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7772,"byte_end":7818,"line_start":182,"line_end":182,"column_start":1,"column_end":47}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7819,"byte_end":7859,"line_start":183,"line_end":183,"column_start":1,"column_end":41}},{"value":"/ [`RangeStream`]: stream/trait.RangeStream.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7860,"byte_end":7910,"line_start":184,"line_end":184,"column_start":1,"column_end":51}},{"value":"/ [`Parser`]: parser/trait.Parser.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7911,"byte_end":7951,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [fn parser]: parser/function/fn.parser.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":7952,"byte_end":7999,"line_start":186,"line_end":186,"column_start":1,"column_end":48}},{"value":"/ [`parser!`]: macro.parser.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8000,"byte_end":8034,"line_start":187,"line_end":187,"column_start":1,"column_end":35}},{"value":"allow(clippy :: inline_always, clippy :: type_complexity, clippy ::\n        too_many_arguments, clippy :: match_like_matches_macro)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":8097,"byte_end":8234,"line_start":189,"line_end":194,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":60},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22569,"byte_end":22572,"line_start":599,"line_end":599,"column_start":9,"column_end":12},"name":"lib","qualname":"::lib","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":61}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":63},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":9562},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":79},{"krate":0,"index":85},{"krate":0,"index":3052},{"krate":0,"index":3073},{"krate":0,"index":3068},{"krate":0,"index":93},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":109},{"krate":0,"index":114},{"krate":0,"index":120},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":170},{"krate":0,"index":174},{"krate":0,"index":179},{"krate":0,"index":3078},{"krate":0,"index":3097},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3088},{"krate":0,"index":3086},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":250},{"krate":0,"index":276},{"krate":0,"index":285},{"krate":0,"index":3100},{"krate":0,"index":3111},{"krate":0,"index":3110},{"krate":0,"index":3108},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":318},{"krate":0,"index":333},{"krate":0,"index":342},{"krate":0,"index":3113},{"krate":0,"index":3126},{"krate":0,"index":3125},{"krate":0,"index":3123},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":377},{"krate":0,"index":392},{"krate":0,"index":401},{"krate":0,"index":3128},{"krate":0,"index":3143},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3134},{"krate":0,"index":3132},{"krate":0,"index":408},{"krate":0,"index":3146},{"krate":0,"index":3176},{"krate":0,"index":3168},{"krate":0,"index":3171},{"krate":0,"index":3164},{"krate":0,"index":3161},{"krate":0,"index":411},{"krate":0,"index":426},{"krate":0,"index":430},{"krate":0,"index":434},{"krate":0,"index":439}],"decl_id":null,"docs":" Error types and traits which define what kind of errors combine parsers may emit\n","sig":null,"attributes":[{"value":"/ Error types and traits which define what kind of errors combine parsers may emit","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22750,"byte_end":22834,"line_start":611,"line_end":611,"column_start":1,"column_end":85}},{"value":"macro_use","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22835,"byte_end":22847,"line_start":612,"line_end":612,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":79},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":36859,"byte_end":36868,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"name":"ErrorInfo","qualname":"::error::ErrorInfo","value":"ErrorInfo<'s, T, R>","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" Trait for types which can be used to construct error information.","sig":null,"attributes":[{"value":"/ Trait for types which can be used to construct error information.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":36628,"byte_end":36697,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":36698,"byte_end":36701,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ To call functions expecting this trait, use the wrapper types defined in this module","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":36702,"byte_end":36790,"line_start":42,"line_end":42,"column_start":1,"column_end":89}},{"value":"/ `Token`, `Range`, `Format` or `Static`/`&'static str`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":36791,"byte_end":36848,"line_start":43,"line_end":43,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":36890,"byte_end":36896,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::ErrorInfo::Format","value":"type Format: fmt::Display;","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":36919,"byte_end":36928,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"into_info","qualname":"::error::ErrorInfo::into_info","value":"pub fn into_info(&'s Self) -> Info<T, R, Self::Format>","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3056},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37251,"byte_end":37256,"line_start":61,"line_end":61,"column_start":5,"column_end":10},"name":"Token","qualname":"::error::Info::Token","value":"Info::Token(T)","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3059},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37265,"byte_end":37270,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"name":"Range","qualname":"::error::Info::Range","value":"Info::Range(R)","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3062},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37279,"byte_end":37285,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Static","qualname":"::error::Info::Static","value":"Info::Static(&'static str)","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3065},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37305,"byte_end":37311,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Info::Format","value":"Info::Format(F)","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3052},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37216,"byte_end":37220,"line_start":60,"line_end":60,"column_start":10,"column_end":14},"name":"Info","qualname":"::error::Info","value":"pub enum Info<T, R, F = &'static str> {\n    Token(T),\n    Range(R),\n    Static(&'static str),\n    Format(F),\n}","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":3065}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38714,"byte_end":38719,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"Token","qualname":"::error::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype which constructs an `Info::Token` through `ErrorInfo`\n","sig":null,"attributes":[{"value":"/ Newtype which constructs an `Info::Token` through `ErrorInfo`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38637,"byte_end":38702,"line_start":123,"line_end":123,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":131},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38723,"byte_end":38728,"line_start":124,"line_end":124,"column_start":21,"column_end":26},"name":"0","qualname":"::error::Token::0","value":"T","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39139,"byte_end":39144,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"Range","qualname":"::error::Range","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype which constructs an `Info::Range` through `ErrorInfo`\n","sig":null,"attributes":[{"value":"/ Newtype which constructs an `Info::Range` through `ErrorInfo`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39062,"byte_end":39127,"line_start":142,"line_end":142,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39148,"byte_end":39153,"line_start":143,"line_end":143,"column_start":21,"column_end":26},"name":"0","qualname":"::error::Range::0","value":"R","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39639,"byte_end":39645,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"Static","qualname":"::error::Static","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype which constructs an `Info::Static` through `ErrorInfo`\n A plain `&'static str` can also be used, this exists for consistency.\n","sig":null,"attributes":[{"value":"/ Newtype which constructs an `Info::Static` through `ErrorInfo`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39487,"byte_end":39553,"line_start":161,"line_end":161,"column_start":1,"column_end":67}},{"value":"/ A plain `&'static str` can also be used, this exists for consistency.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39554,"byte_end":39627,"line_start":162,"line_end":162,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40057,"byte_end":40063,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"Format","qualname":"::error::Format","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype which constructs an `Info::Format` through `ErrorInfo`\n","sig":null,"attributes":[{"value":"/ Newtype which constructs an `Info::Format` through `ErrorInfo`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39979,"byte_end":40045,"line_start":181,"line_end":181,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":173},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40067,"byte_end":40072,"line_start":182,"line_end":182,"column_start":22,"column_end":27},"name":"0","qualname":"::error::Format::0","value":"F","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3080},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41052,"byte_end":41058,"line_start":214,"line_end":214,"column_start":5,"column_end":11},"name":"Commit","qualname":"::error::Commit::Commit","value":"Commit::Commit(T)","parent":{"krate":0,"index":3078},"children":[],"decl_id":null,"docs":" Constructor indicating that the parser has committed to this parse. If a parser after this fails,\n other parser alternatives will not be attempted (`CommitErr` will be returned)\n","sig":null,"attributes":[{"value":"/ Constructor indicating that the parser has committed to this parse. If a parser after this fails,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40859,"byte_end":40960,"line_start":212,"line_end":212,"column_start":5,"column_end":106}},{"value":"/ other parser alternatives will not be attempted (`CommitErr` will be returned)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40965,"byte_end":41047,"line_start":213,"line_end":213,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3083},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41259,"byte_end":41263,"line_start":217,"line_end":217,"column_start":5,"column_end":9},"name":"Peek","qualname":"::error::Commit::Peek","value":"Commit::Peek(T)","parent":{"krate":0,"index":3078},"children":[],"decl_id":null,"docs":" Constructor indicating that the parser has not committed to this parse. If a parser after this fails,\n other parser alternatives will be attempted (`EmptyErr` will be returned)\n","sig":null,"attributes":[{"value":"/ Constructor indicating that the parser has not committed to this parse. If a parser after this fails,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41067,"byte_end":41172,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ other parser alternatives will be attempted (`EmptyErr` will be returned)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41177,"byte_end":41254,"line_start":216,"line_end":216,"column_start":5,"column_end":82}}]},{"kind":"Enum","id":{"krate":0,"index":3078},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40843,"byte_end":40849,"line_start":211,"line_end":211,"column_start":10,"column_end":16},"name":"Commit","qualname":"::error::Commit","value":"pub enum Commit<T> {\n\n    /// Constructor indicating that the parser has committed to this parse. If a parser after this fails,\n    /// other parser alternatives will not be attempted (`CommitErr` will be returned)\n    Commit(T),\n\n    /// Constructor indicating that the parser has not committed to this parse. If a parser after this fails,\n    /// other parser alternatives will be attempted (`EmptyErr` will be returned)\n    Peek(T),\n}","parent":null,"children":[{"krate":0,"index":3080},{"krate":0,"index":3083}],"decl_id":null,"docs":" Enum used to indicate if a parser committed any items of the stream it was given as an input.","sig":null,"attributes":[{"value":"/ Enum used to indicate if a parser committed any items of the stream it was given as an input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40457,"byte_end":40554,"line_start":205,"line_end":205,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40555,"byte_end":40558,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ This is used by parsers such as `or` and `choice` to determine if they should try to parse","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40559,"byte_end":40653,"line_start":207,"line_end":207,"column_start":1,"column_end":95}},{"value":"/ with another parser as they will only be able to provide good error reporting if the preceding","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40654,"byte_end":40752,"line_start":208,"line_end":208,"column_start":1,"column_end":99}},{"value":"/ parser did not commit to the parse.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40753,"byte_end":40792,"line_start":209,"line_end":209,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41688,"byte_end":41695,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"name":"is_peek","qualname":"<Commit<T>>::is_peek","value":"pub fn is_peek(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `self` is peek.\n","sig":null,"attributes":[{"value":"/ Returns true if `self` is peek.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41641,"byte_end":41676,"line_start":237,"line_end":237,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41878,"byte_end":41888,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Commit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the contained value.\n","sig":null,"attributes":[{"value":"/ Extracts the contained value.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41833,"byte_end":41866,"line_start":245,"line_end":245,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42054,"byte_end":42065,"line_start":253,"line_end":253,"column_start":12,"column_end":23},"name":"into_commit","qualname":"<Commit<T>>::into_commit","value":"pub fn into_commit(Self) -> Commit<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Commit` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Commit` state.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41998,"byte_end":42042,"line_start":252,"line_end":252,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42194,"byte_end":42203,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"into_peek","qualname":"<Commit<T>>::into_peek","value":"pub fn into_peek(Self) -> Commit<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into the `Peek` state.\n","sig":null,"attributes":[{"value":"/ Converts `self` into the `Peek` state.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42140,"byte_end":42182,"line_start":257,"line_end":257,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42359,"byte_end":42362,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"map","qualname":"<Commit<T>>::map","value":"pub fn map<F, U>(Self, F) -> Commit<U> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps over the contained value without changing the committed state.\n","sig":null,"attributes":[{"value":"/ Maps over the contained value without changing the committed state.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42276,"byte_end":42347,"line_start":262,"line_end":262,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42592,"byte_end":42597,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"merge","qualname":"<Commit<T>>::merge","value":"pub fn merge(&Self, Commit<T>) -> Commit<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44470,"byte_end":44477,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"combine","qualname":"<Commit<T>>::combine","value":"pub fn combine<F, U, E>(Self, F) -> StdParseResult2<U, E> where F: FnOnce(T)\n-> StdParseResult2<U, E>","parent":null,"children":[],"decl_id":null,"docs":" Combines the `Commit` flags from `self` and the result of `f`.","sig":null,"attributes":[{"value":"/ Combines the `Commit` flags from `self` and the result of `f`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42779,"byte_end":42845,"line_start":280,"line_end":280,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42850,"byte_end":42853,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42858,"byte_end":42869,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ Peek    <> Peek    -> Peek","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42874,"byte_end":42904,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/ Commit <> Peek    -> Commit","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42909,"byte_end":42940,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/ Peek    <> Commit -> Commit","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42945,"byte_end":42976,"line_start":285,"line_end":285,"column_start":5,"column_end":36}},{"value":"/ Commit <> Commit -> Commit","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":42981,"byte_end":43011,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43016,"byte_end":43023,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43028,"byte_end":43031,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43036,"byte_end":43043,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine as pc;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43048,"byte_end":43081,"line_start":290,"line_end":290,"column_start":5,"column_end":38}},{"value":"/ # use pc::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43086,"byte_end":43102,"line_start":291,"line_end":291,"column_start":5,"column_end":21}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43107,"byte_end":43124,"line_start":292,"line_end":292,"column_start":5,"column_end":22}},{"value":"/ //Parses a character of string literal and handles the escaped characters \\\\ and \\\" as \\","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43129,"byte_end":43221,"line_start":293,"line_end":293,"column_start":5,"column_end":97}},{"value":"/ //and \" respectively","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43226,"byte_end":43250,"line_start":294,"line_end":294,"column_start":5,"column_end":29}},{"value":"/ fn char<Input>(input: &mut Input) -> StdParseResult<char, Input>","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43255,"byte_end":43323,"line_start":295,"line_end":295,"column_start":5,"column_end":73}},{"value":"/     where Input: Stream<Token = char>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43328,"byte_end":43370,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/           Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43375,"byte_end":43459,"line_start":297,"line_end":297,"column_start":5,"column_end":89}},{"value":"/ {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43464,"byte_end":43469,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/     let (c, committed) = satisfy(|c| c != '\"').parse_stream(input).into_result()?;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43474,"byte_end":43560,"line_start":299,"line_end":299,"column_start":5,"column_end":91}},{"value":"/     match c {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43565,"byte_end":43582,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/         //Since the `char` parser has already committed some of the input `combine` is used","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43587,"byte_end":43682,"line_start":301,"line_end":301,"column_start":5,"column_end":100}},{"value":"/         //propagate the committed state to the next part of the parser","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43687,"byte_end":43761,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/         '\\\\' => committed.combine(|_| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43766,"byte_end":43809,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/             satisfy(|c| c == '\"' || c == '\\\\')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43814,"byte_end":43864,"line_start":304,"line_end":304,"column_start":5,"column_end":55}},{"value":"/                 .map(|c| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43869,"byte_end":43899,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/                     match c {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43904,"byte_end":43937,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/                         '\"' => '\"',","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43942,"byte_end":43981,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/                         '\\\\' => '\\\\',","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":43986,"byte_end":44027,"line_start":308,"line_end":308,"column_start":5,"column_end":46}},{"value":"/                         c => c","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44032,"byte_end":44066,"line_start":309,"line_end":309,"column_start":5,"column_end":39}},{"value":"/                     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44071,"byte_end":44096,"line_start":310,"line_end":310,"column_start":5,"column_end":30}},{"value":"/                 })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44101,"byte_end":44123,"line_start":311,"line_end":311,"column_start":5,"column_end":27}},{"value":"/                 .parse_stream(input)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44128,"byte_end":44168,"line_start":312,"line_end":312,"column_start":5,"column_end":45}},{"value":"/                 .into_result()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44173,"byte_end":44207,"line_start":313,"line_end":313,"column_start":5,"column_end":39}},{"value":"/             }),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44212,"byte_end":44231,"line_start":314,"line_end":314,"column_start":5,"column_end":24}},{"value":"/         _ => Ok((c, committed))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44236,"byte_end":44271,"line_start":315,"line_end":315,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44276,"byte_end":44285,"line_start":316,"line_end":316,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44290,"byte_end":44295,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ let result = many(parser(char))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44300,"byte_end":44335,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/     .easy_parse(r#\"abc\\\"\\\\\"#);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44340,"byte_end":44374,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result, Ok((r#\"abc\"\\\"#.to_string(), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44379,"byte_end":44436,"line_start":320,"line_end":320,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44441,"byte_end":44446,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44451,"byte_end":44458,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":44899,"byte_end":44913,"line_start":336,"line_end":336,"column_start":12,"column_end":26},"name":"combine_commit","qualname":"<Commit<T>>::combine_commit","value":"pub fn combine_commit<F, U, E>(Self, F) -> ParseResult<U, E> where\nF: FnOnce(T) -> ParseResult<U, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":211},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45542,"byte_end":45556,"line_start":357,"line_end":357,"column_start":10,"column_end":24},"name":"StdParseResult","qualname":"::error::StdParseResult","value":"Result<(O, Commit<()>), Commit<Tracked<<Input as StreamOnce>::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" A type alias over the specific `Result` type used by parsers to indicate whether they were\n successful or not.\n `O` is the type that is output on success.\n `Input` is the specific stream type used in the parser.\n","sig":null,"attributes":[{"value":"/ A type alias over the specific `Result` type used by parsers to indicate whether they were","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45308,"byte_end":45402,"line_start":353,"line_end":353,"column_start":1,"column_end":95}},{"value":"/ successful or not.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45403,"byte_end":45425,"line_start":354,"line_end":354,"column_start":1,"column_end":23}},{"value":"/ `O` is the type that is output on success.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45426,"byte_end":45472,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/ `Input` is the specific stream type used in the parser.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45473,"byte_end":45532,"line_start":356,"line_end":356,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45654,"byte_end":45669,"line_start":359,"line_end":359,"column_start":10,"column_end":25},"name":"StdParseResult2","qualname":"::error::StdParseResult2","value":"Result<(O, Commit<()>), Commit<Tracked<E>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":217},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45938,"byte_end":45949,"line_start":365,"line_end":365,"column_start":11,"column_end":22},"name":"StreamError","qualname":"::error::StreamError","value":"StreamError<Item, Range>: Sized","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" `StreamError` represents a single error returned from a `Stream` or a `Parser`.","sig":null,"attributes":[{"value":"/ `StreamError` represents a single error returned from a `Stream` or a `Parser`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45724,"byte_end":45807,"line_start":361,"line_end":361,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45808,"byte_end":45811,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ Usually multiple instances of `StreamError` is composed into a `ParseError` to build the final","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45812,"byte_end":45910,"line_start":363,"line_end":363,"column_start":1,"column_end":99}},{"value":"/ error value.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45911,"byte_end":45927,"line_start":364,"line_end":364,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45979,"byte_end":45995,"line_start":366,"line_end":366,"column_start":8,"column_end":24},"name":"unexpected_token","qualname":"::error::StreamError::unexpected_token","value":"pub fn unexpected_token(Item) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":46025,"byte_end":46041,"line_start":367,"line_end":367,"column_start":8,"column_end":24},"name":"unexpected_range","qualname":"::error::StreamError::unexpected_range","value":"pub fn unexpected_range(Range) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":46072,"byte_end":46089,"line_start":368,"line_end":368,"column_start":8,"column_end":25},"name":"unexpected_format","qualname":"::error::StreamError::unexpected_format","value":"pub fn unexpected_format<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":46151,"byte_end":46161,"line_start":371,"line_end":371,"column_start":8,"column_end":18},"name":"unexpected","qualname":"::error::StreamError::unexpected","value":"pub fn unexpected<E>(E) -> Self where E: for<'s> ErrorInfo","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":46541,"byte_end":46566,"line_start":382,"line_end":382,"column_start":8,"column_end":33},"name":"unexpected_static_message","qualname":"::error::StreamError::unexpected_static_message","value":"pub fn unexpected_static_message(&'static str) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":46647,"byte_end":46661,"line_start":386,"line_end":386,"column_start":8,"column_end":22},"name":"expected_token","qualname":"::error::StreamError::expected_token","value":"pub fn expected_token(Item) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":46691,"byte_end":46705,"line_start":387,"line_end":387,"column_start":8,"column_end":22},"name":"expected_range","qualname":"::error::StreamError::expected_range","value":"pub fn expected_range(Range) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":46736,"byte_end":46751,"line_start":388,"line_end":388,"column_start":8,"column_end":23},"name":"expected_format","qualname":"::error::StreamError::expected_format","value":"pub fn expected_format<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":46813,"byte_end":46821,"line_start":391,"line_end":391,"column_start":8,"column_end":16},"name":"expected","qualname":"::error::StreamError::expected","value":"pub fn expected<E>(E) -> Self where E: for<'s> ErrorInfo","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":47193,"byte_end":47216,"line_start":402,"line_end":402,"column_start":8,"column_end":31},"name":"expected_static_message","qualname":"::error::StreamError::expected_static_message","value":"pub fn expected_static_message(&'static str) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":47295,"byte_end":47308,"line_start":406,"line_end":406,"column_start":8,"column_end":21},"name":"message_token","qualname":"::error::StreamError::message_token","value":"pub fn message_token(Item) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":47338,"byte_end":47351,"line_start":407,"line_end":407,"column_start":8,"column_end":21},"name":"message_range","qualname":"::error::StreamError::message_range","value":"pub fn message_range(Range) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":47382,"byte_end":47396,"line_start":408,"line_end":408,"column_start":8,"column_end":22},"name":"message_format","qualname":"::error::StreamError::message_format","value":"pub fn message_format<T>(T) -> Self where T: fmt::Display","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":47458,"byte_end":47480,"line_start":411,"line_end":411,"column_start":8,"column_end":30},"name":"message_static_message","qualname":"::error::StreamError::message_static_message","value":"pub fn message_static_message(&'static str) -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":47557,"byte_end":47564,"line_start":414,"line_end":414,"column_start":8,"column_end":15},"name":"message","qualname":"::error::StreamError::message","value":"pub fn message<E>(E) -> Self where E: for<'s> ErrorInfo","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":47961,"byte_end":47966,"line_start":427,"line_end":427,"column_start":8,"column_end":13},"name":"other","qualname":"::error::StreamError::other","value":"pub fn other<E>(E) -> Self where E: StdError + Send + Sync + 'static","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":47930,"byte_end":47953,"line_start":426,"line_end":426,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48095,"byte_end":48107,"line_start":434,"line_end":434,"column_start":8,"column_end":20},"name":"end_of_input","qualname":"::error::StreamError::end_of_input","value":"pub fn end_of_input() -> Self","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48190,"byte_end":48216,"line_start":438,"line_end":438,"column_start":8,"column_end":34},"name":"is_unexpected_end_of_input","qualname":"::error::StreamError::is_unexpected_end_of_input","value":"pub fn is_unexpected_end_of_input(&Self) -> bool","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48540,"byte_end":48550,"line_start":445,"line_end":445,"column_start":8,"column_end":18},"name":"into_other","qualname":"::error::StreamError::into_other","value":"pub fn into_other<T>(Self) -> T where T: StreamError<Item, Range>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Converts `self` into a different `StreamError` type.","sig":null,"attributes":[{"value":"/ Converts `self` into a different `StreamError` type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48238,"byte_end":48294,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48299,"byte_end":48302,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This should aim to preserve as much information as possible into the returned `T` value but","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48307,"byte_end":48402,"line_start":442,"line_end":442,"column_start":5,"column_end":100}},{"value":"/ if `Self` ignores some information passed to it using one of the constructors that","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48407,"byte_end":48493,"line_start":443,"line_end":443,"column_start":5,"column_end":91}},{"value":"/ information is naturally lost.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48498,"byte_end":48532,"line_start":444,"line_end":444,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":250},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48815,"byte_end":48825,"line_start":454,"line_end":454,"column_start":11,"column_end":21},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError<Item, Range, Position>: Sized + PartialEq","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":" Trait which defines a combine parse error.","sig":null,"attributes":[{"value":"/ Trait which defines a combine parse error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48615,"byte_end":48661,"line_start":450,"line_end":450,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48662,"byte_end":48665,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ A parse error is composed of zero or more `StreamError` instances which gets added to it as","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48666,"byte_end":48761,"line_start":452,"line_end":452,"column_start":1,"column_end":96}},{"value":"/ errors are encountered during parsing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48762,"byte_end":48804,"line_start":453,"line_end":453,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":254},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48879,"byte_end":48890,"line_start":455,"line_end":455,"column_start":10,"column_end":21},"name":"StreamError","qualname":"::error::ParseError::StreamError","value":"type StreamError: StreamError<Item, Range>;","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49069,"byte_end":49074,"line_start":460,"line_end":460,"column_start":8,"column_end":13},"name":"empty","qualname":"::error::ParseError::empty","value":"pub fn empty(Position) -> Self","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Constructs an empty error.","sig":null,"attributes":[{"value":"/ Constructs an empty error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48923,"byte_end":48953,"line_start":457,"line_end":457,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48958,"byte_end":48961,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ An empty error is expected to be cheap to create as it is frequently created and discarded.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48966,"byte_end":49061,"line_start":459,"line_end":459,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49177,"byte_end":49187,"line_start":463,"line_end":463,"column_start":8,"column_end":18},"name":"from_error","qualname":"::error::ParseError::from_error","value":"pub fn from_error(Position, Self::StreamError) -> Self","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Creates a `ParseError` from a single `Self::StreamError`\n","sig":null,"attributes":[{"value":"/ Creates a `ParseError` from a single `Self::StreamError`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49109,"byte_end":49169,"line_start":462,"line_end":462,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49344,"byte_end":49352,"line_start":469,"line_end":469,"column_start":8,"column_end":16},"name":"position","qualname":"::error::ParseError::position","value":"pub fn position(&Self) -> Position","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49532,"byte_end":49544,"line_start":475,"line_end":475,"column_start":8,"column_end":20},"name":"set_position","qualname":"::error::ParseError::set_position","value":"pub fn set_position(&mut Self, Position)","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Sets the position of this `ParseError`\n","sig":null,"attributes":[{"value":"/ Sets the position of this `ParseError`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49482,"byte_end":49524,"line_start":474,"line_end":474,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49846,"byte_end":49851,"line_start":480,"line_end":480,"column_start":8,"column_end":13},"name":"merge","qualname":"::error::ParseError::merge","value":"pub fn merge(Self, Self) -> Self","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Merges two errors. If they exist at the same position the errors of `other` are\n added to `self` (using the semantics of `add`). If they are not at the same\n position the error furthest ahead are returned, ignoring the other `ParseError`.\n","sig":null,"attributes":[{"value":"/ Merges two errors. If they exist at the same position the errors of `other` are","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49582,"byte_end":49665,"line_start":477,"line_end":477,"column_start":5,"column_end":88}},{"value":"/ added to `self` (using the semantics of `add`). If they are not at the same","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49670,"byte_end":49749,"line_start":478,"line_end":478,"column_start":5,"column_end":84}},{"value":"/ position the error furthest ahead are returned, ignoring the other `ParseError`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49754,"byte_end":49838,"line_start":479,"line_end":479,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50141,"byte_end":50144,"line_start":488,"line_end":488,"column_start":8,"column_end":11},"name":"add","qualname":"::error::ParseError::add","value":"pub fn add(&mut Self, Self::StreamError)","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Adds a `StreamError` to `self`.","sig":null,"attributes":[{"value":"/ Adds a `StreamError` to `self`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49906,"byte_end":49941,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49946,"byte_end":49949,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ It is up to each individual error type to define what adding an error does, some may push","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":49954,"byte_end":50047,"line_start":486,"line_end":486,"column_start":5,"column_end":98}},{"value":"/ it to a vector while others may only keep `self` or `err` to avoid allocation","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50052,"byte_end":50133,"line_start":487,"line_end":487,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50189,"byte_end":50201,"line_start":490,"line_end":490,"column_start":8,"column_end":20},"name":"add_expected","qualname":"::error::ParseError::add_expected","value":"pub fn add_expected<E>(&mut Self, E) where E: for<'s> ErrorInfo","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50354,"byte_end":50368,"line_start":497,"line_end":497,"column_start":8,"column_end":22},"name":"add_unexpected","qualname":"::error::ParseError::add_unexpected","value":"pub fn add_unexpected<E>(&mut Self, E) where E: for<'s> ErrorInfo","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50523,"byte_end":50534,"line_start":504,"line_end":504,"column_start":8,"column_end":19},"name":"add_message","qualname":"::error::ParseError::add_message","value":"pub fn add_message<E>(&mut Self, E) where E: for<'s> ErrorInfo","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50747,"byte_end":50759,"line_start":512,"line_end":512,"column_start":8,"column_end":20},"name":"set_expected","qualname":"::error::ParseError::set_expected","value":"pub fn set_expected<F>(&mut Tracked<Self>, Self::StreamError, F) where\nF: FnOnce(&mut Tracked<Self>) -> ()","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Sets `info` as the *only* `Expected` error of `self`\n","sig":null,"attributes":[{"value":"/ Sets `info` as the *only* `Expected` error of `self`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50683,"byte_end":50739,"line_start":511,"line_end":511,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50934,"byte_end":50948,"line_start":517,"line_end":517,"column_start":8,"column_end":22},"name":"clear_expected","qualname":"::error::ParseError::clear_expected","value":"pub fn clear_expected(&mut Self)","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Removes any expected errors currently in `self`\n","sig":null,"attributes":[{"value":"/ Removes any expected errors currently in `self`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50875,"byte_end":50926,"line_start":516,"line_end":516,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":50971,"byte_end":50997,"line_start":519,"line_end":519,"column_start":8,"column_end":34},"name":"is_unexpected_end_of_input","qualname":"::error::ParseError::is_unexpected_end_of_input","value":"pub fn is_unexpected_end_of_input(&Self) -> bool","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51096,"byte_end":51106,"line_start":522,"line_end":522,"column_start":8,"column_end":18},"name":"into_other","qualname":"::error::ParseError::into_other","value":"pub fn into_other<T>(Self) -> T where T: ParseError<Item, Range, Position>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Does a best-effort conversion of `self` into another `ParseError`\n","sig":null,"attributes":[{"value":"/ Does a best-effort conversion of `self` into another `ParseError`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51019,"byte_end":51088,"line_start":521,"line_end":521,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":276},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51396,"byte_end":51410,"line_start":531,"line_end":531,"column_start":11,"column_end":25},"name":"ParseErrorInto","qualname":"::error::ParseErrorInto","value":"ParseErrorInto<Item, Range, Position>: Sized","parent":null,"children":[{"krate":0,"index":280}],"decl_id":null,"docs":" Defines a conversion between two parse error types.","sig":null,"attributes":[{"value":"/ Defines a conversion between two parse error types.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51180,"byte_end":51235,"line_start":527,"line_end":527,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51236,"byte_end":51239,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ Like `ParseError::into_other` but with a more general signature","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51240,"byte_end":51307,"line_start":529,"line_end":529,"column_start":1,"column_end":68}},{"value":"/ (This will take the place of `into_other` on breaking release of combine)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51308,"byte_end":51385,"line_start":530,"line_end":530,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51450,"byte_end":51466,"line_start":532,"line_end":532,"column_start":8,"column_end":24},"name":"into_other_error","qualname":"::error::ParseErrorInto::into_other_error","value":"pub fn into_other_error<T, Item2, Range2, Position2>(Self) -> T where\nT: ParseError<Item2, Range2, Position2>, Item2: From<Item>,\nRange2: From<Range>, Position2: From<Position>","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":285},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51878,"byte_end":51893,"line_start":544,"line_end":544,"column_start":11,"column_end":26},"name":"StreamErrorInto","qualname":"::error::StreamErrorInto","value":"StreamErrorInto<Item, Range>: Sized","parent":null,"children":[{"krate":0,"index":288}],"decl_id":null,"docs":" Defines a conversion between two stream error types.","sig":null,"attributes":[{"value":"/ Defines a conversion between two stream error types.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51660,"byte_end":51716,"line_start":540,"line_end":540,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51717,"byte_end":51720,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ Like `StreamError::into_other` but with a more general signature","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51721,"byte_end":51789,"line_start":542,"line_end":542,"column_start":1,"column_end":69}},{"value":"/ (This will take the place of `into_other` on breaking release of combine)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51790,"byte_end":51867,"line_start":543,"line_end":543,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51923,"byte_end":51939,"line_start":545,"line_end":545,"column_start":8,"column_end":24},"name":"into_other_error","qualname":"::error::StreamErrorInto::into_other_error","value":"pub fn into_other_error<T, Item2, Range2>(Self) -> T where\nT: StreamError<Item2, Range2>, Item2: From<Item>, Range2: From<Range>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3101},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52149,"byte_end":52152,"line_start":554,"line_end":554,"column_start":5,"column_end":8},"name":"Eoi","qualname":"::error::UnexpectedParse::Eoi","value":"UnexpectedParse::Eoi","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3103},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52158,"byte_end":52168,"line_start":555,"line_end":555,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::error::UnexpectedParse::Unexpected","value":"UnexpectedParse::Unexpected","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3100},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52127,"byte_end":52142,"line_start":553,"line_end":553,"column_start":10,"column_end":25},"name":"UnexpectedParse","qualname":"::error::UnexpectedParse","value":"pub enum UnexpectedParse { Eoi, Unexpected, }","parent":null,"children":[{"krate":0,"index":3101},{"krate":0,"index":3103}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3114},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56233,"byte_end":56248,"line_start":734,"line_end":734,"column_start":5,"column_end":20},"name":"UnexpectedParse","qualname":"::error::StringStreamError::UnexpectedParse","value":"StringStreamError::UnexpectedParse","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3116},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56254,"byte_end":56257,"line_start":735,"line_end":735,"column_start":5,"column_end":8},"name":"Eoi","qualname":"::error::StringStreamError::Eoi","value":"StringStreamError::Eoi","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3118},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56263,"byte_end":56280,"line_start":736,"line_end":736,"column_start":5,"column_end":22},"name":"CharacterBoundary","qualname":"::error::StringStreamError::CharacterBoundary","value":"StringStreamError::CharacterBoundary","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3113},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56209,"byte_end":56226,"line_start":733,"line_end":733,"column_start":10,"column_end":27},"name":"StringStreamError","qualname":"::error::StringStreamError","value":"pub enum StringStreamError { UnexpectedParse, Eoi, CharacterBoundary, }","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3116},{"krate":0,"index":3118}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3128},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61153,"byte_end":61160,"line_start":924,"line_end":924,"column_start":12,"column_end":19},"name":"Tracked","qualname":"::error::Tracked","value":"Tracked { error, offset }","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131}],"decl_id":null,"docs":" Error wrapper which lets parsers track which parser in a sequence of sub-parsers has emitted\n the error. `Tracked::from` can be used to construct this and it should otherwise be\n ignored outside of combine.\n","sig":null,"attributes":[{"value":"/ Error wrapper which lets parsers track which parser in a sequence of sub-parsers has emitted","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":60884,"byte_end":60980,"line_start":920,"line_end":920,"column_start":1,"column_end":97}},{"value":"/ the error. `Tracked::from` can be used to construct this and it should otherwise be","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":60981,"byte_end":61068,"line_start":921,"line_end":921,"column_start":1,"column_end":88}},{"value":"/ ignored outside of combine.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61069,"byte_end":61100,"line_start":922,"line_end":922,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3130},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61201,"byte_end":61206,"line_start":926,"line_end":926,"column_start":9,"column_end":14},"name":"error","qualname":"::error::Tracked::error","value":"E","parent":{"krate":0,"index":3128},"children":[],"decl_id":null,"docs":" The error returned\n","sig":null,"attributes":[{"value":"/ The error returned","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61170,"byte_end":61192,"line_start":925,"line_end":925,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3131},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61238,"byte_end":61244,"line_start":928,"line_end":928,"column_start":9,"column_end":15},"name":"offset","qualname":"::error::Tracked::offset","value":"ErrorOffset","parent":{"krate":0,"index":3128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3149},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61866,"byte_end":61874,"line_start":947,"line_end":947,"column_start":5,"column_end":13},"name":"CommitOk","qualname":"::error::ParseResult::CommitOk","value":"ParseResult::CommitOk(T)","parent":{"krate":0,"index":3146},"children":[],"decl_id":null,"docs":" The parser has succeeded and has committed to this parse. If a parser after this fails,\n other parser alternatives will not be attempted (`CommitErr` will be returned)\n","sig":null,"attributes":[{"value":"/ The parser has succeeded and has committed to this parse. If a parser after this fails,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61683,"byte_end":61774,"line_start":945,"line_end":945,"column_start":5,"column_end":96}},{"value":"/ other parser alternatives will not be attempted (`CommitErr` will be returned)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61779,"byte_end":61861,"line_start":946,"line_end":946,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3152},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62064,"byte_end":62070,"line_start":950,"line_end":950,"column_start":5,"column_end":11},"name":"PeekOk","qualname":"::error::ParseResult::PeekOk","value":"ParseResult::PeekOk(T)","parent":{"krate":0,"index":3146},"children":[],"decl_id":null,"docs":" The parser has succeeded and has not committed to this parse. If a parser after this fails,\n other parser alternatives will be attempted (`PeekErr` will be returned)\n","sig":null,"attributes":[{"value":"/ The parser has succeeded and has not committed to this parse. If a parser after this fails,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61883,"byte_end":61978,"line_start":948,"line_end":948,"column_start":5,"column_end":100}},{"value":"/ other parser alternatives will be attempted (`PeekErr` will be returned)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61983,"byte_end":62059,"line_start":949,"line_end":949,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3155},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62153,"byte_end":62162,"line_start":952,"line_end":952,"column_start":5,"column_end":14},"name":"CommitErr","qualname":"::error::ParseResult::CommitErr","value":"ParseResult::CommitErr(E)","parent":{"krate":0,"index":3146},"children":[],"decl_id":null,"docs":" The parser failed other parse alternatives will not be attempted.\n","sig":null,"attributes":[{"value":"/ The parser failed other parse alternatives will not be attempted.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62079,"byte_end":62148,"line_start":951,"line_end":951,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3158},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62244,"byte_end":62251,"line_start":954,"line_end":954,"column_start":5,"column_end":12},"name":"PeekErr","qualname":"::error::ParseResult::PeekErr","value":"ParseResult::PeekErr(Tracked<E>)","parent":{"krate":0,"index":3146},"children":[],"decl_id":null,"docs":" The parser failed but other parse alternatives may be attempted.\n","sig":null,"attributes":[{"value":"/ The parser failed but other parse alternatives may be attempted.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62171,"byte_end":62239,"line_start":953,"line_end":953,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":3146},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61659,"byte_end":61670,"line_start":944,"line_end":944,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::error::ParseResult","value":"pub enum ParseResult<T, E> {\n\n    /// The parser has succeeded and has committed to this parse. If a parser after this fails,\n    /// other parser alternatives will not be attempted (`CommitErr` will be returned)\n    CommitOk(T),\n\n    /// The parser has succeeded and has not committed to this parse. If a parser after this fails,\n    /// other parser alternatives will be attempted (`PeekErr` will be returned)\n    PeekOk(T),\n\n    /// The parser failed other parse alternatives will not be attempted.\n    CommitErr(E),\n\n    /// The parser failed but other parse alternatives may be attempted.\n    PeekErr(Tracked<E>),\n}","parent":null,"children":[{"krate":0,"index":3149},{"krate":0,"index":3152},{"krate":0,"index":3155},{"krate":0,"index":3158}],"decl_id":null,"docs":" A `Result` type which has the committed status flattened into the result.\n Conversions to and from `std::result::Result` can be done using `result.into()` or\n `From::from(result)`\n","sig":null,"attributes":[{"value":"/ A `Result` type which has the committed status flattened into the result.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61419,"byte_end":61496,"line_start":940,"line_end":940,"column_start":1,"column_end":78}},{"value":"/ Conversions to and from `std::result::Result` can be done using `result.into()` or","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61497,"byte_end":61583,"line_start":941,"line_end":941,"column_start":1,"column_end":87}},{"value":"/ `From::from(result)`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61584,"byte_end":61608,"line_start":942,"line_end":942,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62324,"byte_end":62329,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<ParseResult<T, E>>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62303,"byte_end":62312,"line_start":958,"line_end":958,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62504,"byte_end":62510,"line_start":967,"line_end":967,"column_start":12,"column_end":18},"name":"is_err","qualname":"<ParseResult<T, E>>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62483,"byte_end":62492,"line_start":966,"line_end":966,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62568,"byte_end":62574,"line_start":971,"line_end":971,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<ParseResult<T, E>>::as_ref","value":"pub fn as_ref(&Self) -> ParseResult<&T, &E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62918,"byte_end":62926,"line_start":983,"line_end":983,"column_start":12,"column_end":20},"name":"and_then","qualname":"<ParseResult<T, E>>::and_then","value":"pub fn and_then<F, T2>(Self, F) -> F::Output where F: FnOnce(T) ->\nParseResult<T2, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":63389,"byte_end":63396,"line_start":999,"line_end":999,"column_start":12,"column_end":19},"name":"map_err","qualname":"<ParseResult<T, E>>::map_err","value":"pub fn map_err<F, E2>(Self, F) -> ParseResult<T, F::Output> where F: FnOnce(E)\n-> E2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":63788,"byte_end":63791,"line_start":1014,"line_end":1014,"column_start":12,"column_end":15},"name":"map","qualname":"<ParseResult<T, E>>::map","value":"pub fn map<F, T2>(Self, F) -> ParseResult<F::Output, E> where F: FnOnce(T) ->\nT2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":64128,"byte_end":64139,"line_start":1028,"line_end":1028,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ParseResult<O, E>>::into_result","value":"pub fn into_result(Self) -> StdParseResult2<O, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":444},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":9568},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":517},{"krate":0,"index":546},{"krate":0,"index":771},{"krate":0,"index":914},{"krate":0,"index":979},{"krate":0,"index":1034},{"krate":0,"index":1072},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1133},{"krate":0,"index":3513},{"krate":0,"index":3518},{"krate":0,"index":3524},{"krate":0,"index":3530},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1180},{"krate":0,"index":1184},{"krate":0,"index":1190},{"krate":0,"index":1200},{"krate":0,"index":1204},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1218},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1235},{"krate":0,"index":1240},{"krate":0,"index":1250},{"krate":0,"index":1254},{"krate":0,"index":3535},{"krate":0,"index":3566},{"krate":0,"index":3563},{"krate":0,"index":3558},{"krate":0,"index":3560},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3549},{"krate":0,"index":3542},{"krate":0,"index":3539},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1273},{"krate":0,"index":1281},{"krate":0,"index":3568},{"krate":0,"index":3599},{"krate":0,"index":3596},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3585},{"krate":0,"index":3587},{"krate":0,"index":3582},{"krate":0,"index":3575},{"krate":0,"index":3572},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1305},{"krate":0,"index":1313},{"krate":0,"index":3601},{"krate":0,"index":3637},{"krate":0,"index":3634},{"krate":0,"index":3629},{"krate":0,"index":3631},{"krate":0,"index":3623},{"krate":0,"index":3625},{"krate":0,"index":3620},{"krate":0,"index":3609},{"krate":0,"index":3606},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1330},{"krate":0,"index":1338},{"krate":0,"index":3639},{"krate":0,"index":3675},{"krate":0,"index":3668},{"krate":0,"index":3671},{"krate":0,"index":3660},{"krate":0,"index":3663},{"krate":0,"index":3656},{"krate":0,"index":3648},{"krate":0,"index":3644},{"krate":0,"index":1347},{"krate":0,"index":1351},{"krate":0,"index":1355},{"krate":0,"index":1363},{"krate":0,"index":1368},{"krate":0,"index":3678},{"krate":0,"index":3688},{"krate":0,"index":3685},{"krate":0,"index":3682},{"krate":0,"index":1378},{"krate":0,"index":1382},{"krate":0,"index":1386},{"krate":0,"index":1393},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1434},{"krate":0,"index":1439}],"decl_id":null,"docs":"\n Streams are similar to the `Iterator` trait in that they represent some sequential set of items\n which can be retrieved one by one. Where `Stream`s differ is that they are allowed to return\n errors instead of just `None` and if they implement the `RangeStreamOnce` trait they are also\n capable of returning multiple items at the same time, usually in the form of a slice.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22863,"byte_end":22875,"line_start":614,"line_end":614,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66272,"byte_end":66275,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Streams are similar to the `Iterator` trait in that they represent some sequential set of items","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66276,"byte_end":66375,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ which can be retrieved one by one. Where `Stream`s differ is that they are allowed to return","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66376,"byte_end":66472,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ errors instead of just `None` and if they implement the `RangeStreamOnce` trait they are also","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66473,"byte_end":66570,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ capable of returning multiple items at the same time, usually in the form of a slice.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66571,"byte_end":66660,"line_start":7,"line_end":7,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66661,"byte_end":66664,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ In addition to he functionality above, a proper `Stream` usable by a `Parser` must also have a","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66665,"byte_end":66763,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ position (marked by the `Positioned` trait) and must also be resetable (marked by the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66764,"byte_end":66853,"line_start":10,"line_end":10,"column_start":1,"column_end":90}},{"value":"/ `ResetStream` trait). The former is used to ensure that errors at different points in the stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66854,"byte_end":66954,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"/ aren't combined and the latter is used in parsers such as `or` to try multiple alternative","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":66955,"byte_end":67049,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ parses.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":67050,"byte_end":67061,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":463},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf_reader","qualname":"::stream::buf_reader","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":3180},{"krate":0,"index":3184},{"krate":0,"index":472},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":487},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":496},{"krate":0,"index":3192},{"krate":0,"index":3194},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":513}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":67867,"byte_end":67890,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3180},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123220,"byte_end":123229,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::stream::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":3182},{"krate":0,"index":3183}],"decl_id":null,"docs":" `BufReader` used by `Decoder` when it is constructed with [`Decoder::new_bufferless`][]","sig":null,"attributes":[{"value":"cfg(not(feature = \"pin-project-lite\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":122968,"byte_end":123009,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ `BufReader` used by `Decoder` when it is constructed with [`Decoder::new_bufferless`][]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123010,"byte_end":123101,"line_start":45,"line_end":45,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123102,"byte_end":123105,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Decoder::new_bufferless`]: ../decoder/struct.Decoder.html#method.new_bufferless","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123106,"byte_end":123191,"line_start":47,"line_end":47,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123440,"byte_end":123443,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123298,"byte_end":123390,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123395,"byte_end":123428,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123593,"byte_end":123606,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123516,"byte_end":123581,"line_start":61,"line_end":61,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123874,"byte_end":123881,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123737,"byte_end":123783,"line_start":68,"line_end":68,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123788,"byte_end":123791,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123796,"byte_end":123862,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124073,"byte_end":124080,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123928,"byte_end":123982,"line_start":75,"line_end":75,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123987,"byte_end":123990,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123995,"byte_end":124061,"line_start":77,"line_end":77,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124574,"byte_end":124584,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying reader.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124423,"byte_end":124486,"line_start":90,"line_end":90,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124491,"byte_end":124494,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124499,"byte_end":124562,"line_start":92,"line_end":92,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124788,"byte_end":124794,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124628,"byte_end":124684,"line_start":97,"line_end":97,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124689,"byte_end":124692,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":124697,"byte_end":124776,"line_start":99,"line_end":99,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":481},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":125123,"byte_end":125129,"line_start":114,"line_end":114,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::stream::buf_reader::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":482},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":125161,"byte_end":125174,"line_start":118,"line_end":118,"column_start":11,"column_end":24},"name":"CombineBuffer","qualname":"::stream::buf_reader::CombineBuffer","value":"CombineBuffer<R>: sealed::Sealed","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":486}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":125203,"byte_end":125209,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"buffer","qualname":"::stream::buf_reader::CombineBuffer::buffer","value":"pub fn buffer<'a>(&'a Self, &'a R) -> &'a [u8]","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":125258,"byte_end":125265,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"advance","qualname":"::stream::buf_reader::CombineBuffer::advance","value":"pub fn advance(&mut Self, &mut R, usize)","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":487},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":125436,"byte_end":125451,"line_start":128,"line_end":128,"column_start":11,"column_end":26},"name":"CombineSyncRead","qualname":"::stream::buf_reader::CombineSyncRead","value":"CombineSyncRead<R>: CombineBuffer<R>","parent":null,"children":[{"krate":0,"index":489}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":125482,"byte_end":125497,"line_start":129,"line_end":129,"column_start":8,"column_end":23},"name":"extend_buf_sync","qualname":"::stream::buf_reader::CombineSyncRead::extend_buf_sync","value":"pub fn extend_buf_sync(&mut Self, &mut R) -> io::Result<usize>","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3187},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":126776,"byte_end":126782,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::stream::buf_reader::Buffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker used by `Decoder` for an internal buffer\n","sig":null,"attributes":[{"value":"/ Marker used by `Decoder` for an internal buffer","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":126694,"byte_end":126745,"line_start":178,"line_end":178,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3192},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":131415,"byte_end":131425,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"Bufferless","qualname":"::stream::buf_reader::Bufferless","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker used by `Decoder` for an external buffer\n","sig":null,"attributes":[{"value":"/ Marker used by `Decoder` for an external buffer","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":131333,"byte_end":131384,"line_start":354,"line_end":354,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":517},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffered","qualname":"::stream::buffered","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":3196},{"krate":0,"index":3208},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":527},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538}],"decl_id":null,"docs":" Stream wrapper which provides a `ResetStream` impl for `StreamOnce` impls which do not have\n one.\n","sig":null,"attributes":[{"value":"/ Stream wrapper which provides a `ResetStream` impl for `StreamOnce` impls which do not have","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":67958,"byte_end":68053,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ one.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68054,"byte_end":68062,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68063,"byte_end":68086,"line_start":55,"line_end":55,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3196},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150704,"byte_end":150710,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::buffered::Stream","value":"Stream {  }","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201}],"decl_id":null,"docs":" `Stream` which buffers items from an instance of `StreamOnce` into a ring buffer.\n Instances of `StreamOnce` which is not able to implement `ResetStream` (such as `ReadStream`) may\n use this as a way to implement `ResetStream` and become a full `Stream` instance.","sig":null,"attributes":[{"value":"/ `Stream` which buffers items from an instance of `StreamOnce` into a ring buffer.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":149672,"byte_end":149757,"line_start":8,"line_end":8,"column_start":1,"column_end":86}},{"value":"/ Instances of `StreamOnce` which is not able to implement `ResetStream` (such as `ReadStream`) may","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":149758,"byte_end":149859,"line_start":9,"line_end":9,"column_start":1,"column_end":102}},{"value":"/ use this as a way to implement `ResetStream` and become a full `Stream` instance.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":149860,"byte_end":149945,"line_start":10,"line_end":10,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":149946,"byte_end":149949,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The drawback is that the buffer only stores a limited number of items which limits how many","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":149950,"byte_end":150045,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ tokens that can be reset and replayed. If a `buffered::Stream` is reset past this limit an error","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150046,"byte_end":150146,"line_start":13,"line_end":13,"column_start":1,"column_end":101}},{"value":"/ will be returned when `uncons` is next called.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150147,"byte_end":150197,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150198,"byte_end":150201,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ NOTE: If this stream is used in conjunction with an error enhancing stream such as","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150202,"byte_end":150288,"line_start":16,"line_end":16,"column_start":1,"column_end":87}},{"value":"/ `easy::Stream` (also via the `easy_parser` method) it is recommended that the `buffered::Stream`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150289,"byte_end":150389,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ instance wraps the `easy::Stream` instance instead of the other way around.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150390,"byte_end":150469,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150470,"byte_end":150473,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150474,"byte_end":150487,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ // DO","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150488,"byte_end":150497,"line_start":21,"line_end":21,"column_start":1,"column_end":10}},{"value":"/ buffered::Stream::new(easy::Stream(..), ..)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150498,"byte_end":150545,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/ // DON'T","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150546,"byte_end":150558,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/ easy::Stream(buffered::Stream::new(.., ..))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150559,"byte_end":150606,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ parser.easy_parse(buffered::Stream::new(..));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150607,"byte_end":150656,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150657,"byte_end":150664,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":151802,"byte_end":151805,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<Stream<Input>>::new","value":"pub fn new(Input, usize) -> Stream<Input>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `BufferedStream` from a `StreamOnce` instance with a `lookahead`\n number of elements that can be stored in the buffer.\n","sig":null,"attributes":[{"value":"/ Constructs a new `BufferedStream` from a `StreamOnce` instance with a `lookahead`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":151644,"byte_end":151729,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"/ number of elements that can be stored in the buffer.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":151734,"byte_end":151790,"line_start":69,"line_end":69,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":546},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"easy","qualname":"::stream::easy","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":3211},{"krate":0,"index":3230},{"krate":0,"index":3226},{"krate":0,"index":562},{"krate":0,"index":567},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":593},{"krate":0,"index":597},{"krate":0,"index":3234},{"krate":0,"index":3249},{"krate":0,"index":600},{"krate":0,"index":623},{"krate":0,"index":638},{"krate":0,"index":647},{"krate":0,"index":654},{"krate":0,"index":673},{"krate":0,"index":684},{"krate":0,"index":688},{"krate":0,"index":693},{"krate":0,"index":702},{"krate":0,"index":3253},{"krate":0,"index":3269},{"krate":0,"index":3259},{"krate":0,"index":3263},{"krate":0,"index":704},{"krate":0,"index":729},{"krate":0,"index":734},{"krate":0,"index":739},{"krate":0,"index":3274},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3284},{"krate":0,"index":3281},{"krate":0,"index":3278},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":751},{"krate":0,"index":759},{"krate":0,"index":768}],"decl_id":null,"docs":" Stream wrapper which provides an informative and easy to use error type.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68152,"byte_end":68175,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ Stream wrapper which provides an informative and easy to use error type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":153997,"byte_end":154073,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154074,"byte_end":154077,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unless you have specific constraints preventing you from using this error type (such as being","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154078,"byte_end":154175,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ a `no_std` environment) you probably want to use this stream type. It can easily be used","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154176,"byte_end":154268,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ through the [`EasyParser::easy_parse`] method.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154269,"byte_end":154319,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154320,"byte_end":154323,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The provided `Errors` type is roughly the same as `ParseError` in combine 1.x and 2.x.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154324,"byte_end":154414,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154415,"byte_end":154418,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154419,"byte_end":154426,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154427,"byte_end":154443,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154444,"byte_end":154469,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/ use combine::{easy, Parser, EasyParser, Stream, many1};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154470,"byte_end":154529,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154530,"byte_end":154568,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/ use combine::stream::StreamErrorFor;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154569,"byte_end":154609,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/ use combine::error::{ParseError, StreamError};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154610,"byte_end":154660,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154661,"byte_end":154664,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154665,"byte_end":154680,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/     parser!{","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154681,"byte_end":154697,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/        fn parser[Input]()(Input) -> String","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154698,"byte_end":154744,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/         where [","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154745,"byte_end":154764,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/             Input: Stream<Token = char, Error = easy::ParseError<Input>>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154765,"byte_end":154842,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/             Input::Range: PartialEq,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154843,"byte_end":154883,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/             // If we want to use the error type explicitly we need to help rustc infer","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154884,"byte_end":154974,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"/             // `StreamError` to `easy::Error` (rust-lang/rust#24159)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":154975,"byte_end":155047,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/             Input::Error: ParseError<","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155048,"byte_end":155089,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/                 Input::Token,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155090,"byte_end":155123,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/                 Input::Range,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155124,"byte_end":155157,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/                 Input::Position,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155158,"byte_end":155194,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/                 StreamError = easy::Error<Input::Token, Input::Range>","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155195,"byte_end":155268,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/             >","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155269,"byte_end":155286,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/         ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155287,"byte_end":155300,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/         {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155301,"byte_end":155314,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/             many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155315,"byte_end":155372,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/                 if word == \"combine\" {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155373,"byte_end":155415,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/                     Ok(word)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155416,"byte_end":155448,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/                 } else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155449,"byte_end":155477,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/                     Err(easy::Error::Expected(easy::Info::Static(\"combine\")))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155478,"byte_end":155559,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/                 }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155560,"byte_end":155581,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155582,"byte_end":155600,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155601,"byte_end":155614,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155615,"byte_end":155624,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155625,"byte_end":155628,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     parser!{","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155629,"byte_end":155645,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/        fn parser2[Input]()(Input) -> String","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155646,"byte_end":155693,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/         where [","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155694,"byte_end":155713,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/             Input: Stream<Token = char>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155714,"byte_end":155758,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/         ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155759,"byte_end":155772,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/         {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155773,"byte_end":155786,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/             many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155787,"byte_end":155844,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"/                 if word == \"combine\" {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155845,"byte_end":155887,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/                     Ok(word)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155888,"byte_end":155920,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/                 } else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155921,"byte_end":155949,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/                     // Alternatively it is possible to only use the methods provided by the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":155950,"byte_end":156045,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/                     // `StreamError` trait.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156046,"byte_end":156093,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/                     // In that case the extra bound is not necessary (and this method will work","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156094,"byte_end":156193,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/                     // for other errors than `easy::Errors`)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156194,"byte_end":156258,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/                     Err(StreamErrorFor::<Input>::expected_static_message(\"combine\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156259,"byte_end":156347,"line_start":57,"line_end":57,"column_start":1,"column_end":89}},{"value":"/                 }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156348,"byte_end":156369,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/             })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156370,"byte_end":156388,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156389,"byte_end":156402,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156403,"byte_end":156412,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156413,"byte_end":156416,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     let input = \"combin\";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156417,"byte_end":156446,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     let expected_error = Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156447,"byte_end":156494,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/         errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156495,"byte_end":156520,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/             easy::Error::Expected(\"combine\".into())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156521,"byte_end":156576,"line_start":66,"line_end":66,"column_start":1,"column_end":56}},{"value":"/         ],","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156577,"byte_end":156591,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/         position: 0,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156592,"byte_end":156616,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     });","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156617,"byte_end":156628,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156629,"byte_end":156648,"line_start":70,"line_end":70,"column_start":1,"column_end":20}},{"value":"/         parser().easy_parse(input).map_err(|err| err.map_position(|p| p.translate_position(input))),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156649,"byte_end":156753,"line_start":71,"line_end":71,"column_start":1,"column_end":105}},{"value":"/         expected_error","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156754,"byte_end":156780,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156781,"byte_end":156791,"line_start":73,"line_end":73,"column_start":1,"column_end":11}},{"value":"/     assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156792,"byte_end":156811,"line_start":74,"line_end":74,"column_start":1,"column_end":20}},{"value":"/         parser2().easy_parse(input).map_err(|err| err.map_position(|p| p.translate_position(input))),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156812,"byte_end":156917,"line_start":75,"line_end":75,"column_start":1,"column_end":106}},{"value":"/         expected_error","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156918,"byte_end":156944,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/     );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156945,"byte_end":156955,"line_start":77,"line_end":77,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156956,"byte_end":156961,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156962,"byte_end":156965,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156966,"byte_end":156973,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156974,"byte_end":156977,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`EasyParser::easy_parse`]: super::super::parser::EasyParser::easy_parse","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":156978,"byte_end":157054,"line_start":82,"line_end":82,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3214},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157701,"byte_end":157706,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Token","qualname":"::stream::easy::Info::Token","value":"Info::Token(T)","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3217},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157715,"byte_end":157720,"line_start":100,"line_end":100,"column_start":5,"column_end":10},"name":"Range","qualname":"::stream::easy::Info::Range","value":"Info::Range(R)","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3220},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157729,"byte_end":157734,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Owned","qualname":"::stream::easy::Info::Owned","value":"Info::Owned(String)","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3223},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157748,"byte_end":157754,"line_start":102,"line_end":102,"column_start":5,"column_end":11},"name":"Static","qualname":"::stream::easy::Info::Static","value":"Info::Static(&'static str)","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3211},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157684,"byte_end":157688,"line_start":98,"line_end":98,"column_start":10,"column_end":14},"name":"Info","qualname":"::stream::easy::Info","value":"pub enum Info<T, R> {\n    Token(T),\n    Range(R),\n    Owned(String),\n    Static(&'static str),\n}","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3223}],"decl_id":null,"docs":" Enum holding error information. Variants are defined for `Stream::Token` and `Stream::Range` as\n well as string variants holding easy descriptions.","sig":null,"attributes":[{"value":"/ Enum holding error information. Variants are defined for `Stream::Token` and `Stream::Range` as","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157289,"byte_end":157388,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/ well as string variants holding easy descriptions.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157389,"byte_end":157443,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157444,"byte_end":157447,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ As there is implementations of `From` for `String` and `&'static str` the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157448,"byte_end":157525,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ constructor need not be used directly as calling `msg.into()` should turn a message into the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157526,"byte_end":157622,"line_start":95,"line_end":95,"column_start":1,"column_end":97}},{"value":"/ correct `Info` variant.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157623,"byte_end":157650,"line_start":96,"line_end":96,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":158222,"byte_end":158231,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Info<T, R>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Info<U, R> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":158525,"byte_end":158534,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Info<T, R>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Info<T, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3237},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160426,"byte_end":160436,"line_start":200,"line_end":200,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::stream::easy::Error::Unexpected","value":"Error::Unexpected(Info<T, R>)","parent":{"krate":0,"index":3234},"children":[],"decl_id":null,"docs":" Error indicating an unexpected token has been encountered in the stream\n","sig":null,"attributes":[{"value":"/ Error indicating an unexpected token has been encountered in the stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160346,"byte_end":160421,"line_start":199,"line_end":199,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3240},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160519,"byte_end":160527,"line_start":202,"line_end":202,"column_start":5,"column_end":13},"name":"Expected","qualname":"::stream::easy::Error::Expected","value":"Error::Expected(Info<T, R>)","parent":{"krate":0,"index":3234},"children":[],"decl_id":null,"docs":" Error indicating that the parser expected something else\n","sig":null,"attributes":[{"value":"/ Error indicating that the parser expected something else","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160454,"byte_end":160514,"line_start":201,"line_end":201,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3243},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160569,"byte_end":160576,"line_start":204,"line_end":204,"column_start":5,"column_end":12},"name":"Message","qualname":"::stream::easy::Error::Message","value":"Error::Message(Info<T, R>)","parent":{"krate":0,"index":3234},"children":[],"decl_id":null,"docs":" Generic message\n","sig":null,"attributes":[{"value":"/ Generic message","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160545,"byte_end":160564,"line_start":203,"line_end":203,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3246},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160647,"byte_end":160652,"line_start":206,"line_end":206,"column_start":5,"column_end":10},"name":"Other","qualname":"::stream::easy::Error::Other","value":"Error::Other(Box<StdError + Send + Sync>)","parent":{"krate":0,"index":3234},"children":[],"decl_id":null,"docs":" Variant for containing other types of errors\n","sig":null,"attributes":[{"value":"/ Variant for containing other types of errors","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160594,"byte_end":160642,"line_start":205,"line_end":205,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3234},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160328,"byte_end":160333,"line_start":198,"line_end":198,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::easy::Error","value":"pub enum Error<T, R> {\n\n    /// Error indicating an unexpected token has been encountered in the stream\n    Unexpected(Info<T, R>),\n\n    /// Error indicating that the parser expected something else\n    Expected(Info<T, R>),\n\n    /// Generic message\n    Message(Info<T, R>),\n\n    /// Variant for containing other types of errors\n    Other(Box<StdError + Send + Sync>),\n}","parent":null,"children":[{"krate":0,"index":3237},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3246}],"decl_id":null,"docs":" Enum used to store information about an error that has occurred during parsing.\n","sig":null,"attributes":[{"value":"/ Enum used to store information about an error that has occurred during parsing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160218,"byte_end":160301,"line_start":196,"line_end":196,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":168852,"byte_end":168861,"line_start":502,"line_end":502,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Error<T, R>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Error<U, R> where F: FnOnce(T) -> U","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":169211,"byte_end":169220,"line_start":516,"line_end":516,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Error<T, R>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Error<T, S> where F: FnOnce(R) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170192,"byte_end":170204,"line_start":553,"line_end":553,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<Error<T, R>>::end_of_input","value":"pub fn end_of_input() -> Error<T, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `end_of_input` error.\n","sig":null,"attributes":[{"value":"/ Returns the `end_of_input` error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170143,"byte_end":170180,"line_start":552,"line_end":552,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170991,"byte_end":171001,"line_start":579,"line_end":579,"column_start":12,"column_end":22},"name":"fmt_errors","qualname":"<Error<T, R>>::fmt_errors","value":"pub fn fmt_errors(&[Error<T, R>], &mut fmt::Formatter) -> fmt::Result where\nT: fmt::Display, R: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Formats a slice of errors in a human readable way.","sig":null,"attributes":[{"value":"/ Formats a slice of errors in a human readable way.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170284,"byte_end":170338,"line_start":557,"line_end":557,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170343,"byte_end":170346,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170351,"byte_end":170362,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170367,"byte_end":170394,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170399,"byte_end":170420,"line_start":561,"line_end":561,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170425,"byte_end":170460,"line_start":562,"line_end":562,"column_start":5,"column_end":40}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170465,"byte_end":170525,"line_start":563,"line_end":563,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170530,"byte_end":170533,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170538,"byte_end":170555,"line_start":565,"line_end":565,"column_start":5,"column_end":22}},{"value":"/ let input = r\"","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170560,"byte_end":170578,"line_start":566,"line_end":566,"column_start":5,"column_end":23}},{"value":"/   ,123","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170583,"byte_end":170593,"line_start":567,"line_end":567,"column_start":5,"column_end":15}},{"value":"/ \";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170598,"byte_end":170604,"line_start":568,"line_end":568,"column_start":5,"column_end":11}},{"value":"/ let result = spaces().silent().with(char('.').or(char('a')).or(digit()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170609,"byte_end":170685,"line_start":569,"line_end":569,"column_start":5,"column_end":81}},{"value":"/     .easy_parse(position::Stream::new(input));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170690,"byte_end":170740,"line_start":570,"line_end":570,"column_start":5,"column_end":55}},{"value":"/ let m = format!(\"{}\", result.unwrap_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170745,"byte_end":170792,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/ let expected = r\"Parse error at line: 2, column: 3","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170797,"byte_end":170851,"line_start":572,"line_end":572,"column_start":5,"column_end":59}},{"value":"/ Unexpected `,`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170856,"byte_end":170874,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ Expected `.`, `a` or `digit`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170879,"byte_end":170911,"line_start":574,"line_end":574,"column_start":5,"column_end":37}},{"value":"/ \";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170916,"byte_end":170922,"line_start":575,"line_end":575,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(m, expected);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170927,"byte_end":170955,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170960,"byte_end":170967,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170972,"byte_end":170979,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":702},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":172863,"byte_end":172873,"line_start":631,"line_end":631,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::stream::easy::ParseError","value":"Errors<<S as StreamOnce>::Token, <S as StreamOnce>::Range,\n       <S as StreamOnce>::Position>","parent":null,"children":[],"decl_id":null,"docs":" Convenience alias over `Errors` for `StreamOnce` types which makes it possible to specify the\n `Errors` type from a `StreamOnce` by writing `ParseError<Input>` instead of `Errors<Input::Token,\n Input::Range, Input::Position>`\n","sig":null,"attributes":[{"value":"/ Convenience alias over `Errors` for `StreamOnce` types which makes it possible to specify the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":172618,"byte_end":172715,"line_start":628,"line_end":628,"column_start":1,"column_end":98}},{"value":"/ `Errors` type from a `StreamOnce` by writing `ParseError<Input>` instead of `Errors<Input::Token,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":172716,"byte_end":172817,"line_start":629,"line_end":629,"column_start":1,"column_end":102}},{"value":"/ Input::Range, Input::Position>`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":172818,"byte_end":172853,"line_start":630,"line_end":630,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3253},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173196,"byte_end":173202,"line_start":637,"line_end":637,"column_start":12,"column_end":18},"name":"Errors","qualname":"::stream::easy::Errors","value":"Errors { position, errors }","parent":null,"children":[{"krate":0,"index":3257},{"krate":0,"index":3258}],"decl_id":null,"docs":" Struct which hold information about an error that occurred at a specific position.\n Can hold multiple instances of `Error` if more that one error occurred in the same position.\n","sig":null,"attributes":[{"value":"/ Struct which hold information about an error that occurred at a specific position.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":172973,"byte_end":173059,"line_start":634,"line_end":634,"column_start":1,"column_end":87}},{"value":"/ Can hold multiple instances of `Error` if more that one error occurred in the same position.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173060,"byte_end":173156,"line_start":635,"line_end":635,"column_start":1,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":3257},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173268,"byte_end":173276,"line_start":639,"line_end":639,"column_start":9,"column_end":17},"name":"position","qualname":"::stream::easy::Errors::position","value":"P","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" The position where the error occurred\n","sig":null,"attributes":[{"value":"/ The position where the error occurred","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173218,"byte_end":173259,"line_start":638,"line_end":638,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3258},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173622,"byte_end":173628,"line_start":644,"line_end":644,"column_start":9,"column_end":15},"name":"errors","qualname":"::stream::easy::Errors::errors","value":"std::vec::Vec<stream::easy::Error<T, R>>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" A vector containing specific information on what errors occurred at `position`. Usually\n a fully formed message contains one `Unexpected` error and one or more `Expected` errors.\n `Message` and `Other` may also appear (`combine` never generates these errors on its own)\n and may warrant custom handling.\n","sig":null,"attributes":[{"value":"/ A vector containing specific information on what errors occurred at `position`. Usually","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173285,"byte_end":173376,"line_start":640,"line_end":640,"column_start":5,"column_end":96}},{"value":"/ a fully formed message contains one `Unexpected` error and one or more `Expected` errors.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173381,"byte_end":173474,"line_start":641,"line_end":641,"column_start":5,"column_end":98}},{"value":"/ `Message` and `Other` may also appear (`combine` never generates these errors on its own)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173479,"byte_end":173572,"line_start":642,"line_end":642,"column_start":5,"column_end":98}},{"value":"/ and may warrant custom handling.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173577,"byte_end":173613,"line_start":643,"line_end":643,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173776,"byte_end":173779,"line_start":650,"line_end":650,"column_start":12,"column_end":15},"name":"new","qualname":"<Errors<T, R, P>>::new","value":"pub fn new(P, Error<T, R>) -> Errors<T, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `ParseError` which occurred at `position`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `ParseError` which occurred at `position`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173687,"byte_end":173750,"line_start":648,"line_end":648,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173755,"byte_end":173764,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174003,"byte_end":174008,"line_start":656,"line_end":656,"column_start":12,"column_end":17},"name":"empty","qualname":"<Errors<T, R, P>>::empty","value":"pub fn empty(P) -> Errors<T, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an error with no other information than the position it occurred at.\n","sig":null,"attributes":[{"value":"/ Constructs an error with no other information than the position it occurred at.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173894,"byte_end":173977,"line_start":654,"line_end":654,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173982,"byte_end":173991,"line_start":655,"line_end":655,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174175,"byte_end":174186,"line_start":662,"line_end":662,"column_start":12,"column_end":23},"name":"from_errors","qualname":"<Errors<T, R, P>>::from_errors","value":"pub fn from_errors(P, Vec<Error<T, R>>) -> Errors<T, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `ParseError` with multiple causes.\n","sig":null,"attributes":[{"value":"/ Constructs a `ParseError` with multiple causes.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174098,"byte_end":174149,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174154,"byte_end":174163,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174438,"byte_end":174450,"line_start":669,"line_end":669,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<Errors<T, R, P>>::end_of_input","value":"pub fn end_of_input(P) -> Errors<T, R, P>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an end of input error. Should be returned by parsers which encounter end of\n input unexpectedly.\n","sig":null,"attributes":[{"value":"/ Constructs an end of input error. Should be returned by parsers which encounter end of","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174294,"byte_end":174384,"line_start":666,"line_end":666,"column_start":5,"column_end":95}},{"value":"/ input unexpectedly.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174389,"byte_end":174412,"line_start":667,"line_end":667,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174417,"byte_end":174426,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174673,"byte_end":174682,"line_start":675,"line_end":675,"column_start":12,"column_end":21},"name":"add_error","qualname":"<Errors<T, R, P>>::add_error","value":"pub fn add_error(&mut Self, Error<T, R>) where T: PartialEq, R: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Adds an error if `error` does not exist in this `ParseError` already (as determined byte\n `PartialEq`).\n","sig":null,"attributes":[{"value":"/ Adds an error if `error` does not exist in this `ParseError` already (as determined byte","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174547,"byte_end":174639,"line_start":673,"line_end":673,"column_start":5,"column_end":97}},{"value":"/ `PartialEq`).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174644,"byte_end":174661,"line_start":674,"line_end":674,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":175007,"byte_end":175019,"line_start":687,"line_end":687,"column_start":12,"column_end":24},"name":"set_expected","qualname":"<Errors<T, R, P>>::set_expected","value":"pub fn set_expected(&mut Self, Info<T, R>)","parent":null,"children":[],"decl_id":null,"docs":" Removes all `Expected` errors in `self` and adds `info` instead.\n","sig":null,"attributes":[{"value":"/ Removes all `Expected` errors in `self` and adds `info` instead.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":174927,"byte_end":174995,"line_start":686,"line_end":686,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":175558,"byte_end":175563,"line_start":699,"line_end":699,"column_start":12,"column_end":17},"name":"merge","qualname":"<Errors<T, R, P>>::merge","value":"pub fn merge(Self, Errors<T, R, P>) -> Errors<T, R, P> where P: Ord,\nT: PartialEq, R: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Merges two `ParseError`s. If they exist at the same position the errors of `other` are\n added to `self` (using `add_error` to skip duplicates). If they are not at the same\n position the error furthest ahead are returned, ignoring the other `ParseError`.\n","sig":null,"attributes":[{"value":"/ Merges two `ParseError`s. If they exist at the same position the errors of `other` are","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":175275,"byte_end":175365,"line_start":696,"line_end":696,"column_start":5,"column_end":95}},{"value":"/ added to `self` (using `add_error` to skip duplicates). If they are not at the same","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":175370,"byte_end":175457,"line_start":697,"line_end":697,"column_start":5,"column_end":92}},{"value":"/ position the error furthest ahead are returned, ignoring the other `ParseError`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":175462,"byte_end":175546,"line_start":698,"line_end":698,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176200,"byte_end":176212,"line_start":721,"line_end":721,"column_start":12,"column_end":24},"name":"map_position","qualname":"<Errors<T, R, P>>::map_position","value":"pub fn map_position<F, Q>(Self, F) -> Errors<T, R, Q> where F: FnOnce(P) -> Q","parent":null,"children":[],"decl_id":null,"docs":" Maps the position to a new value\n","sig":null,"attributes":[{"value":"/ Maps the position to a new value","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176152,"byte_end":176188,"line_start":720,"line_end":720,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176417,"byte_end":176426,"line_start":729,"line_end":729,"column_start":12,"column_end":21},"name":"map_token","qualname":"<Errors<T, R, P>>::map_token","value":"pub fn map_token<F, U>(Self, F) -> Errors<U, R, P> where F: FnMut(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps all token variants to a new value\n","sig":null,"attributes":[{"value":"/ Maps all token variants to a new value","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176363,"byte_end":176405,"line_start":728,"line_end":728,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177078,"byte_end":177087,"line_start":755,"line_end":755,"column_start":12,"column_end":21},"name":"map_range","qualname":"<Errors<T, R, P>>::map_range","value":"pub fn map_range<F, S>(Self, F) -> Errors<T, S, P> where F: FnMut(R) -> S","parent":null,"children":[],"decl_id":null,"docs":" Maps all range variants to a new value.","sig":null,"attributes":[{"value":"/ Maps all range variants to a new value.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176722,"byte_end":176765,"line_start":742,"line_end":742,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176770,"byte_end":176773,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176778,"byte_end":176785,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/ use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176790,"byte_end":176809,"line_start":745,"line_end":745,"column_start":5,"column_end":24}},{"value":"/ use combine::parser::range::range;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176814,"byte_end":176852,"line_start":746,"line_end":746,"column_start":5,"column_end":43}},{"value":"/ println!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176857,"byte_end":176870,"line_start":747,"line_end":747,"column_start":5,"column_end":18}},{"value":"/     \"{}\",","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176875,"byte_end":176888,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/     range(&\"HTTP\"[..])","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176893,"byte_end":176919,"line_start":749,"line_end":749,"column_start":5,"column_end":31}},{"value":"/         .easy_parse(\"HTT\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176924,"byte_end":176954,"line_start":750,"line_end":750,"column_start":5,"column_end":35}},{"value":"/         .unwrap_err()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176959,"byte_end":176984,"line_start":751,"line_end":751,"column_start":5,"column_end":30}},{"value":"/         .map_range(|bytes| format!(\"{:?}\", bytes))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":176989,"byte_end":177043,"line_start":752,"line_end":752,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177048,"byte_end":177054,"line_start":753,"line_end":753,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177059,"byte_end":177066,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":178364,"byte_end":178370,"line_start":804,"line_end":804,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::easy::Stream","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3277},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":178374,"byte_end":178379,"line_start":804,"line_end":804,"column_start":22,"column_end":27},"name":"0","qualname":"::stream::easy::Stream::0","value":"S","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":771},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"position","qualname":"::stream::position","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":9648},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":9656},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":808},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":3297},{"krate":0,"index":3314},{"krate":0,"index":3310},{"krate":0,"index":3302},{"krate":0,"index":3305},{"krate":0,"index":818},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":830},{"krate":0,"index":841},{"krate":0,"index":850},{"krate":0,"index":3318},{"krate":0,"index":3329},{"krate":0,"index":3327},{"krate":0,"index":3325},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":855},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":3331},{"krate":0,"index":3356},{"krate":0,"index":3355},{"krate":0,"index":3353},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3344},{"krate":0,"index":3334},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":883},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":907}],"decl_id":null,"docs":" Stream wrapper which provides more detailed position information.\n","sig":null,"attributes":[{"value":"/ Stream wrapper which provides more detailed position information.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68237,"byte_end":68306,"line_start":61,"line_end":61,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":787},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":180850,"byte_end":180860,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"Positioner","qualname":"::stream::position::Positioner","value":"Positioner<Item>","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"decl_id":null,"docs":" Trait for tracking the current position of a `Stream`.\n","sig":null,"attributes":[{"value":"/ Trait for tracking the current position of a `Stream`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":180781,"byte_end":180839,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":789},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":180929,"byte_end":180937,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"Position","qualname":"::stream::position::Positioner::Position","value":"type Position: Clone + Ord;","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" The type which keeps track of the position\n","sig":null,"attributes":[{"value":"/ The type which keeps track of the position","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":180873,"byte_end":180919,"line_start":15,"line_end":15,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":790},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":180962,"byte_end":180972,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"name":"Checkpoint","qualname":"::stream::position::Positioner::Checkpoint","value":"type Checkpoint: Clone;","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181026,"byte_end":181034,"line_start":21,"line_end":21,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::position::Positioner::position","value":"pub fn position(&Self) -> Self::Position","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Returns the current position\n","sig":null,"attributes":[{"value":"/ Returns the current position","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":180986,"byte_end":181018,"line_start":20,"line_end":20,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181147,"byte_end":181153,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"update","qualname":"::stream::position::Positioner::update","value":"pub fn update(&mut Self, &Item)","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Updates the position given that `token` has been taken from the stream\n","sig":null,"attributes":[{"value":"/ Updates the position given that `token` has been taken from the stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181065,"byte_end":181139,"line_start":22,"line_end":22,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181188,"byte_end":181198,"line_start":25,"line_end":25,"column_start":8,"column_end":18},"name":"checkpoint","qualname":"::stream::position::Positioner::checkpoint","value":"pub fn checkpoint(&Self) -> Self::Checkpoint","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181234,"byte_end":181239,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"reset","qualname":"::stream::position::Positioner::reset","value":"pub fn reset(&mut Self, Self::Checkpoint)","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":795},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181359,"byte_end":181374,"line_start":30,"line_end":30,"column_start":11,"column_end":26},"name":"RangePositioner","qualname":"::stream::position::RangePositioner","value":"RangePositioner<Item, Range>: Positioner<Item>","parent":null,"children":[{"krate":0,"index":798}],"decl_id":null,"docs":" Trait for tracking the current position of a `RangeStream`.\n","sig":null,"attributes":[{"value":"/ Trait for tracking the current position of a `RangeStream`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181285,"byte_end":181348,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181494,"byte_end":181506,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"update_range","qualname":"::stream::position::RangePositioner::update_range","value":"pub fn update_range(&mut Self, &Range)","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Updates the position given that `range` has been taken from the stream\n","sig":null,"attributes":[{"value":"/ Updates the position given that `range` has been taken from the stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181412,"byte_end":181486,"line_start":31,"line_end":31,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":799},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181619,"byte_end":181636,"line_start":36,"line_end":36,"column_start":11,"column_end":28},"name":"DefaultPositioned","qualname":"::stream::position::DefaultPositioned","value":"DefaultPositioned","parent":null,"children":[{"krate":0,"index":800}],"decl_id":null,"docs":" Defines a default `Positioner` type for a particular `Stream` type.\n","sig":null,"attributes":[{"value":"/ Defines a default `Positioner` type for a particular `Stream` type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181537,"byte_end":181608,"line_start":35,"line_end":35,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":800},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181648,"byte_end":181658,"line_start":37,"line_end":37,"column_start":10,"column_end":20},"name":"Positioner","qualname":"::stream::position::DefaultPositioned::Positioner","value":"type Positioner: Default;","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3297},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182941,"byte_end":182947,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::position::Stream","value":"Stream { input, positioner }","parent":null,"children":[{"krate":0,"index":3300},{"krate":0,"index":3301}],"decl_id":null,"docs":" The `Stream<Input>` struct maintains the current position in the stream `Input` using\n the `Positioner` trait to track the position.","sig":null,"attributes":[{"value":"/ The `Stream<Input>` struct maintains the current position in the stream `Input` using","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182143,"byte_end":182232,"line_start":61,"line_end":61,"column_start":1,"column_end":90}},{"value":"/ the `Positioner` trait to track the position.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182233,"byte_end":182282,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182283,"byte_end":182286,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182287,"byte_end":182294,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182295,"byte_end":182325,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182326,"byte_end":182353,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182354,"byte_end":182375,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182376,"byte_end":182408,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182409,"byte_end":182445,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182446,"byte_end":182463,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"/     let result = token(b'9')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182464,"byte_end":182496,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/         .message(\"Not a nine\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182497,"byte_end":182531,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/         .easy_parse(position::Stream::new(&b\"8\"[..]));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182532,"byte_end":182590,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/     assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182591,"byte_end":182636,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"/         position: 0,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182637,"byte_end":182661,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/         errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182662,"byte_end":182687,"line_start":76,"line_end":76,"column_start":1,"column_end":26}},{"value":"/             easy::Error::Unexpected(b'8'.into()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182688,"byte_end":182741,"line_start":77,"line_end":77,"column_start":1,"column_end":54}},{"value":"/             easy::Error::Expected(b'9'.into()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182742,"byte_end":182793,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/             easy::Error::Message(\"Not a nine\".into())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182794,"byte_end":182851,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/         ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182852,"byte_end":182865,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182866,"byte_end":182878,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182879,"byte_end":182886,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182887,"byte_end":182894,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":3300},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183023,"byte_end":183028,"line_start":87,"line_end":87,"column_start":9,"column_end":14},"name":"input","qualname":"::stream::position::Stream::input","value":"Input","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The input stream used when items are requested\n","sig":null,"attributes":[{"value":"/ The input stream used when items are requested","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182964,"byte_end":183014,"line_start":86,"line_end":86,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3301},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183104,"byte_end":183114,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"positioner","qualname":"::stream::position::Stream::positioner","value":"X","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The positioner used to update the current position\n","sig":null,"attributes":[{"value":"/ The positioner used to update the current position","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183041,"byte_end":183095,"line_start":88,"line_end":88,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183309,"byte_end":183324,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"with_positioner","qualname":"<Stream<Input, X>>::with_positioner","value":"pub fn with_positioner(Input, X) -> Stream<Input, X>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Stream<Input, X>` from an input stream and a positioner.\n","sig":null,"attributes":[{"value":"/ Creates a new `Stream<Input, X>` from an input stream and a positioner.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183222,"byte_end":183297,"line_start":97,"line_end":97,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183668,"byte_end":183671,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Stream<Input, Input::Positioner>>::new","value":"pub fn new(Input) -> Stream<Input, Input::Positioner>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Stream<Input, X>` from an input stream and its default positioner.\n","sig":null,"attributes":[{"value":"/ Creates a new `Stream<Input, X>` from an input stream and its default positioner.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183571,"byte_end":183656,"line_start":108,"line_end":108,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":3318},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186124,"byte_end":186139,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"IndexPositioner","qualname":"::stream::position::IndexPositioner","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `IndexPositioner<Item, Range>` struct maintains the current index into the stream `Input`.  The\n initial index is index 0.  Each `Item` committed increments the index by 1; each `range` committed\n increments the position by `range.len()`.\n","sig":null,"attributes":[{"value":"/ The `IndexPositioner<Item, Range>` struct maintains the current index into the stream `Input`.  The","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":185816,"byte_end":185919,"line_start":194,"line_end":194,"column_start":1,"column_end":104}},{"value":"/ initial index is index 0.  Each `Item` committed increments the index by 1; each `range` committed","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":185920,"byte_end":186022,"line_start":195,"line_end":195,"column_start":1,"column_end":103}},{"value":"/ increments the position by `range.len()`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186023,"byte_end":186068,"line_start":196,"line_end":196,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186660,"byte_end":186663,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexPositioner>::new","value":"pub fn new() -> IndexPositioner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186751,"byte_end":186768,"line_start":233,"line_end":233,"column_start":12,"column_end":29},"name":"new_with_position","qualname":"<IndexPositioner>::new_with_position","value":"pub fn new_with_position(usize) -> IndexPositioner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3331},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187200,"byte_end":187214,"line_start":250,"line_end":250,"column_start":12,"column_end":26},"name":"SourcePosition","qualname":"::stream::position::SourcePosition","value":"SourcePosition { line, column }","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3333}],"decl_id":null,"docs":" Struct which represents a position in a source file.\n","sig":null,"attributes":[{"value":"/ Struct which represents a position in a source file.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187070,"byte_end":187126,"line_start":248,"line_end":248,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3332},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187259,"byte_end":187263,"line_start":252,"line_end":252,"column_start":9,"column_end":13},"name":"line","qualname":"::stream::position::SourcePosition::line","value":"i32","parent":{"krate":0,"index":3331},"children":[],"decl_id":null,"docs":" Current line of the input\n","sig":null,"attributes":[{"value":"/ Current line of the input","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187221,"byte_end":187250,"line_start":251,"line_end":251,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3333},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187314,"byte_end":187320,"line_start":254,"line_end":254,"column_start":9,"column_end":15},"name":"column","qualname":"::stream::position::SourcePosition::column","value":"i32","parent":{"krate":0,"index":3331},"children":[],"decl_id":null,"docs":" Current column of the input\n","sig":null,"attributes":[{"value":"/ Current column of the input","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187274,"byte_end":187305,"line_start":253,"line_end":253,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187656,"byte_end":187659,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"new","qualname":"<SourcePosition>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":914},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::stream::read","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":3358},{"krate":0,"index":3366},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":952},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":976}],"decl_id":null,"docs":" Stream wrapper allowing `std::io::Read` to be used\n","sig":null,"attributes":[{"value":"/ Stream wrapper allowing `std::io::Read` to be used","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68325,"byte_end":68379,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68380,"byte_end":68403,"line_start":64,"line_end":64,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3359},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":192843,"byte_end":192853,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::stream::read::Error::Unexpected","value":"Error::Unexpected","parent":{"krate":0,"index":3358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3361},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":192859,"byte_end":192869,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"EndOfInput","qualname":"::stream::read::Error::EndOfInput","value":"Error::EndOfInput","parent":{"krate":0,"index":3358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3363},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":192875,"byte_end":192877,"line_start":15,"line_end":15,"column_start":5,"column_end":7},"name":"Io","qualname":"::stream::read::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":3358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3358},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":192831,"byte_end":192836,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::read::Error","value":"pub enum Error { Unexpected, EndOfInput, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196027,"byte_end":196033,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::read::Stream","value":"Stream {  }","parent":null,"children":[{"krate":0,"index":968}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197445,"byte_end":197448,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Stream<R>>::new","value":"pub fn new(R) -> Stream<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StreamOnce` instance from a value implementing `std::io::Read`.","sig":null,"attributes":[{"value":"/ Creates a `StreamOnce` instance from a value implementing `std::io::Read`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196511,"byte_end":196589,"line_start":181,"line_end":181,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196594,"byte_end":196597,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ NOTE: This type do not implement `Positioned` and `Clone` and must be wrapped with types","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196602,"byte_end":196694,"line_start":183,"line_end":183,"column_start":5,"column_end":97}},{"value":"/     such as `BufferedStreamRef` and `State` to become a `Stream` which can be parsed","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196699,"byte_end":196787,"line_start":184,"line_end":184,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196792,"byte_end":196795,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196800,"byte_end":196811,"line_start":186,"line_end":186,"column_start":5,"column_end":16}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196816,"byte_end":196846,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196851,"byte_end":196878,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196883,"byte_end":196902,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ use combine::parser::byte::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196907,"byte_end":196940,"line_start":190,"line_end":190,"column_start":5,"column_end":38}},{"value":"/ use combine::stream::read;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196945,"byte_end":196975,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ use combine::stream::buffered;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196980,"byte_end":197014,"line_start":192,"line_end":192,"column_start":5,"column_end":39}},{"value":"/ use combine::stream::position;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197019,"byte_end":197053,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197058,"byte_end":197080,"line_start":194,"line_end":194,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197085,"byte_end":197088,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197093,"byte_end":197110,"line_start":196,"line_end":196,"column_start":5,"column_end":22}},{"value":"/ let input: &[u8] = b\"123,\";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197115,"byte_end":197146,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/ let stream = buffered::Stream::new(position::Stream::new(read::Stream::new(input)), 1);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197151,"byte_end":197242,"line_start":198,"line_end":198,"column_start":5,"column_end":96}},{"value":"/ let result = (many(digit()), byte(b','))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197247,"byte_end":197291,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/     .parse(stream)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197296,"byte_end":197318,"line_start":200,"line_end":200,"column_start":5,"column_end":27}},{"value":"/     .map(|t| t.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197323,"byte_end":197345,"line_start":201,"line_end":201,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok((vec![b'1', b'2', b'3'], b',')));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197350,"byte_end":197409,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197414,"byte_end":197421,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":197426,"byte_end":197433,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":979},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::stream::span","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":9682},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":3368},{"krate":0,"index":3406},{"krate":0,"index":3403},{"krate":0,"index":3400},{"krate":0,"index":3397},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3386},{"krate":0,"index":3388},{"krate":0,"index":3375},{"krate":0,"index":3372},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":3408},{"krate":0,"index":3432},{"krate":0,"index":3435},{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":3422},{"krate":0,"index":3418},{"krate":0,"index":3414},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1011},{"krate":0,"index":1020},{"krate":0,"index":1030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3368},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":197839,"byte_end":197843,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Span","qualname":"::stream::span::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3370},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":197857,"byte_end":197862,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"start","qualname":"::stream::span::Span::start","value":"P","parent":{"krate":0,"index":3368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3371},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":197875,"byte_end":197878,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"end","qualname":"::stream::span::Span::end","value":"P","parent":{"krate":0,"index":3368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198091,"byte_end":198094,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"map","qualname":"<Span<P>>::map","value":"pub fn map<Q, impl FnMut(P) -> Q: FnMut(P) -> Q>(Self, impl FnMut(P) -> Q)\n-> Span<Q>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3408},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198298,"byte_end":198304,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::span::Stream","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3412},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198311,"byte_end":198316,"line_start":38,"line_end":38,"column_start":25,"column_end":30},"name":"0","qualname":"::stream::span::Stream::0","value":"S","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1034},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"state","qualname":"::stream::state","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":3440},{"krate":0,"index":3484},{"krate":0,"index":3480},{"krate":0,"index":3473},{"krate":0,"index":3476},{"krate":0,"index":3465},{"krate":0,"index":3468},{"krate":0,"index":3461},{"krate":0,"index":3449},{"krate":0,"index":3445},{"krate":0,"index":1043},{"krate":0,"index":1047},{"krate":0,"index":1053},{"krate":0,"index":1062}],"decl_id":null,"docs":" Stream wrapper allowing custom state to be used.\n","sig":null,"attributes":[{"value":"/ Stream wrapper allowing custom state to be used.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68479,"byte_end":68531,"line_start":68,"line_end":68,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3440},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":201965,"byte_end":201971,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Stream","qualname":"::stream::state::Stream","value":"Stream { stream, state }","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3444}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3443},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":201988,"byte_end":201994,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream::state::Stream::stream","value":"S","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3444},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202007,"byte_end":202012,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"state","qualname":"::stream::state::Stream::state","value":"U","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1072},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decoder","qualname":"::stream::decoder","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":9716},{"krate":0,"index":1077},{"krate":0,"index":9718},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":3487},{"krate":0,"index":3496},{"krate":0,"index":1084},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":3500},{"krate":0,"index":3508},{"krate":0,"index":1095},{"krate":0,"index":1100},{"krate":0,"index":1104},{"krate":0,"index":1108},{"krate":0,"index":1116}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68548,"byte_end":68571,"line_start":71,"line_end":71,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3490},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":203974,"byte_end":203979,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Parse","qualname":"::stream::decoder::Error::Parse","value":"Error::Parse(E)","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3493},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":203988,"byte_end":203990,"line_start":17,"line_end":17,"column_start":5,"column_end":7},"name":"Io","qualname":"::stream::decoder::Error::Io","value":"Error::Io { position, error }","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3487},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":203956,"byte_end":203961,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::decoder::Error","value":"pub enum Error<E, P> {\n    Parse(E),\n    Io {\n        position: P,\n        error: io::Error,\n    },\n}","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3500},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":204936,"byte_end":204943,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::stream::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507}],"decl_id":null,"docs":" Used together with the `decode!` macro\n","sig":null,"attributes":[{"value":"/ Used together with the `decode!` macro","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":204882,"byte_end":204924,"line_start":52,"line_end":52,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205364,"byte_end":205367,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<S, P, Buffer>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`Decoder`] with an internal buffer. Allows any `AsyncRead/Read` instance to\n be used when decoding but there may be data left in the internal buffer after decoding\n (accessible with [`Decoder::buffer`])\n","sig":null,"attributes":[{"value":"/ Constructs a new [`Decoder`] with an internal buffer. Allows any `AsyncRead/Read` instance to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205114,"byte_end":205211,"line_start":65,"line_end":65,"column_start":5,"column_end":102}},{"value":"/ be used when decoding but there may be data left in the internal buffer after decoding","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205216,"byte_end":205306,"line_start":66,"line_end":66,"column_start":5,"column_end":95}},{"value":"/ (accessible with [`Decoder::buffer`])","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205311,"byte_end":205352,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205668,"byte_end":205678,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"new_buffer","qualname":"<Decoder<S, P, Buffer>>::new_buffer","value":"pub fn new_buffer() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new [`Decoder`] with an internal buffer. Allows any `AsyncRead/Read` instance to\n be used when decoding but there may be data left in the internal buffer after decoding\n (accessible with [`Decoder::buffer`])\n","sig":null,"attributes":[{"value":"/ Constructs a new [`Decoder`] with an internal buffer. Allows any `AsyncRead/Read` instance to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205418,"byte_end":205515,"line_start":72,"line_end":72,"column_start":5,"column_end":102}},{"value":"/ be used when decoding but there may be data left in the internal buffer after decoding","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205520,"byte_end":205610,"line_start":73,"line_end":73,"column_start":5,"column_end":95}},{"value":"/ (accessible with [`Decoder::buffer`])","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205615,"byte_end":205656,"line_start":74,"line_end":74,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206024,"byte_end":206038,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"new_bufferless","qualname":"<Decoder<S, P, Bufferless>>::new_bufferless","value":"pub fn new_bufferless() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Decoder` without an internal buffer. Requires the read instance to be\n wrapped with combine's [`BufReader`] instance to","sig":null,"attributes":[{"value":"/ Constructs a new `Decoder` without an internal buffer. Requires the read instance to be","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205804,"byte_end":205895,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ wrapped with combine's [`BufReader`] instance to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205900,"byte_end":205952,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205957,"byte_end":205960,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`BufReader`]: super::buf_reader::BufReader","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205965,"byte_end":206012,"line_start":88,"line_end":88,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206125,"byte_end":206131,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Decoder<S, P>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206245,"byte_end":206252,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"advance","qualname":"<Decoder<S, P, C>>::advance","value":"pub fn advance<R>(&mut Self, &mut R, usize) where C: CombineBuffer<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206897,"byte_end":206905,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Decoder<S, P, C>>::position","value":"pub fn position(&Self) -> &P","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206981,"byte_end":206988,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"__inner","qualname":"<Decoder<S, P, C>>::__inner","value":"pub fn __inner(&mut Self) -> (&mut S, &mut P, &C, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":207257,"byte_end":207271,"line_start":142,"line_end":142,"column_start":12,"column_end":26},"name":"__before_parse","qualname":"<Decoder<S, P, C>>::__before_parse","value":"pub fn __before_parse<R>(&mut Self, R) -> io::Result<()> where R: Read,\nC: crate::stream::buf_reader::CombineSyncRead<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1122},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68680,"byte_end":68690,"line_start":76,"line_end":76,"column_start":11,"column_end":21},"name":"Positioned","qualname":"::stream::Positioned","value":"Positioned: StreamOnce","parent":null,"children":[{"krate":0,"index":1123}],"decl_id":null,"docs":" A type which has a position.\n","sig":null,"attributes":[{"value":"/ A type which has a position.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68637,"byte_end":68669,"line_start":75,"line_end":75,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68764,"byte_end":68772,"line_start":78,"line_end":78,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::Positioned::position","value":"pub fn position(&Self) -> Self::Position","parent":{"krate":0,"index":1122},"children":[],"decl_id":null,"docs":" Returns the current position of the stream.\n","sig":null,"attributes":[{"value":"/ Returns the current position of the stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68709,"byte_end":68756,"line_start":77,"line_end":77,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1124},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69644,"byte_end":69658,"line_start":109,"line_end":109,"column_start":10,"column_end":24},"name":"StreamErrorFor","qualname":"::stream::StreamErrorFor","value":"<<Input as StreamOnce>::Error as\nParseError<<Input as StreamOnce>::Token, <Input as StreamOnce>::Range,\n           <Input as StreamOnce>::Position>>::StreamError","parent":null,"children":[],"decl_id":null,"docs":" Convenience alias over the `StreamError` for the input stream `Input`","sig":null,"attributes":[{"value":"/ Convenience alias over the `StreamError` for the input stream `Input`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68802,"byte_end":68875,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68876,"byte_end":68879,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68880,"byte_end":68887,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68888,"byte_end":68904,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/ extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68905,"byte_end":68930,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ use combine::{easy, Parser, Stream, many1};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68931,"byte_end":68978,"line_start":86,"line_end":86,"column_start":1,"column_end":48}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68979,"byte_end":69017,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ use combine::stream::StreamErrorFor;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69018,"byte_end":69058,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ use combine::error::{ParseError, StreamError};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69059,"byte_end":69109,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69110,"byte_end":69113,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ parser!{","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69114,"byte_end":69126,"line_start":91,"line_end":91,"column_start":1,"column_end":13}},{"value":"/    fn parser[Input]()(Input) -> String","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69127,"byte_end":69169,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/     where [ Input: Stream<Token = char>, ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69170,"byte_end":69216,"line_start":93,"line_end":93,"column_start":1,"column_end":47}},{"value":"/     {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69217,"byte_end":69226,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/         many1(letter()).and_then(|word: String| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69227,"byte_end":69280,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/             if word == \"combine\" {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69281,"byte_end":69319,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/                 Ok(word)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69320,"byte_end":69348,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/             } else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69349,"byte_end":69373,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"/                 // The alias makes it easy to refer to the `StreamError` type of `Input`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69374,"byte_end":69466,"line_start":99,"line_end":99,"column_start":1,"column_end":93}},{"value":"/                 Err(StreamErrorFor::<Input>::expected_static_message(\"combine\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69467,"byte_end":69551,"line_start":100,"line_end":100,"column_start":1,"column_end":85}},{"value":"/             }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69552,"byte_end":69569,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69570,"byte_end":69584,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69585,"byte_end":69594,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69595,"byte_end":69600,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69601,"byte_end":69604,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69605,"byte_end":69620,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69621,"byte_end":69626,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69627,"byte_end":69634,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1126},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69928,"byte_end":69938,"line_start":116,"line_end":116,"column_start":11,"column_end":21},"name":"StreamOnce","qualname":"::stream::StreamOnce","value":"StreamOnce","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132}],"decl_id":null,"docs":" `StreamOnce` represents a sequence of items that can be extracted one by one.\n","sig":null,"attributes":[{"value":"/ `StreamOnce` represents a sequence of items that can be extracted one by one.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69836,"byte_end":69917,"line_start":115,"line_end":115,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":1127},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70011,"byte_end":70016,"line_start":118,"line_end":118,"column_start":10,"column_end":15},"name":"Token","qualname":"::stream::StreamOnce::Token","value":"type Token: Clone;","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" The type of items which is yielded from this stream.\n","sig":null,"attributes":[{"value":"/ The type of items which is yielded from this stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":69945,"byte_end":70001,"line_start":117,"line_end":117,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70223,"byte_end":70228,"line_start":123,"line_end":123,"column_start":10,"column_end":15},"name":"Range","qualname":"::stream::StreamOnce::Range","value":"type Range: Clone;","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" The type of a range of items yielded from this stream.\n Types which do not a have a way of yielding ranges of items should just use the\n `Self::Token` for this type.\n","sig":null,"attributes":[{"value":"/ The type of a range of items yielded from this stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70030,"byte_end":70088,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/ Types which do not a have a way of yielding ranges of items should just use the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70093,"byte_end":70176,"line_start":121,"line_end":121,"column_start":5,"column_end":88}},{"value":"/ `Self::Token` for this type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70181,"byte_end":70213,"line_start":122,"line_end":122,"column_start":5,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1129},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70401,"byte_end":70409,"line_start":127,"line_end":127,"column_start":10,"column_end":18},"name":"Position","qualname":"::stream::StreamOnce::Position","value":"type Position: Clone + Ord;","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Type which represents the position in a stream.\n `Ord` is required to allow parsers to determine which of two positions are further ahead.\n","sig":null,"attributes":[{"value":"/ Type which represents the position in a stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70242,"byte_end":70293,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/ `Ord` is required to allow parsers to determine which of two positions are further ahead.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70298,"byte_end":70391,"line_start":126,"line_end":126,"column_start":5,"column_end":98}}]},{"kind":"Type","id":{"krate":0,"index":1130},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70434,"byte_end":70439,"line_start":129,"line_end":129,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::StreamOnce::Error","value":"type Error: ParseError<Self::Token, Self::Range, Self::Position>;","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70659,"byte_end":70665,"line_start":132,"line_end":132,"column_start":8,"column_end":14},"name":"uncons","qualname":"::stream::StreamOnce::uncons","value":"pub fn uncons(&mut Self) -> Result<Self::Token, StreamErrorFor<Self>>","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Takes a stream and removes its first token, yielding the token and the rest of the elements.\n Returns `Err` if no element could be retrieved.\n","sig":null,"attributes":[{"value":"/ Takes a stream and removes its first token, yielding the token and the rest of the elements.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70499,"byte_end":70595,"line_start":130,"line_end":130,"column_start":5,"column_end":101}},{"value":"/ Returns `Err` if no element could be retrieved.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70600,"byte_end":70651,"line_start":131,"line_end":131,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70835,"byte_end":70845,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"is_partial","qualname":"::stream::StreamOnce::is_partial","value":"pub fn is_partial(&Self) -> bool","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Returns `true` if this stream only contains partial input.","sig":null,"attributes":[{"value":"/ Returns `true` if this stream only contains partial input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70728,"byte_end":70790,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70795,"byte_end":70798,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ See `PartialStream`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70803,"byte_end":70827,"line_start":136,"line_end":136,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":1133},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70977,"byte_end":70988,"line_start":143,"line_end":143,"column_start":11,"column_end":22},"name":"ResetStream","qualname":"::stream::ResetStream","value":"ResetStream: StreamOnce","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136}],"decl_id":null,"docs":" A `StreamOnce` which can create checkpoints which the stream can be reset to\n","sig":null,"attributes":[{"value":"/ A `StreamOnce` which can create checkpoints which the stream can be reset to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70886,"byte_end":70966,"line_start":142,"line_end":142,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1134},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71012,"byte_end":71022,"line_start":144,"line_end":144,"column_start":10,"column_end":20},"name":"Checkpoint","qualname":"::stream::ResetStream::Checkpoint","value":"type Checkpoint: Clone;","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71170,"byte_end":71180,"line_start":148,"line_end":148,"column_start":8,"column_end":18},"name":"checkpoint","qualname":"::stream::ResetStream::checkpoint","value":"pub fn checkpoint(&Self) -> Self::Checkpoint","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":" Creates a `Checkpoint` at the current position which can be used to reset the stream\n later to the current position\n","sig":null,"attributes":[{"value":"/ Creates a `Checkpoint` at the current position which can be used to reset the stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71036,"byte_end":71124,"line_start":146,"line_end":146,"column_start":5,"column_end":93}},{"value":"/ later to the current position","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71129,"byte_end":71162,"line_start":147,"line_end":147,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71277,"byte_end":71282,"line_start":150,"line_end":150,"column_start":8,"column_end":13},"name":"reset","qualname":"::stream::ResetStream::reset","value":"pub fn reset(&mut Self, Self::Checkpoint) -> Result<(), Self::Error>","parent":{"krate":0,"index":1133},"children":[],"decl_id":null,"docs":" Attempts to reset the stream to an earlier position.\n","sig":null,"attributes":[{"value":"/ Attempts to reset the stream to an earlier position.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71213,"byte_end":71269,"line_start":149,"line_end":149,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1137},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71799,"byte_end":71805,"line_start":163,"line_end":163,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream: StreamOnce + ResetStream + Positioned","parent":null,"children":[],"decl_id":null,"docs":" A stream of tokens which can be duplicated","sig":null,"attributes":[{"value":"/ A stream of tokens which can be duplicated","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71518,"byte_end":71564,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71565,"byte_end":71568,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This is a trait over types which implement the `StreamOnce`, `ResetStream` and `Positioned`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71569,"byte_end":71664,"line_start":160,"line_end":160,"column_start":1,"column_end":96}},{"value":"/ traits. If you need a custom `Stream` object then implement those traits and `Stream` is","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71665,"byte_end":71757,"line_start":161,"line_end":161,"column_start":1,"column_end":93}},{"value":"/ implemented automatically.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71758,"byte_end":71788,"line_start":162,"line_end":162,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":1140},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72031,"byte_end":72037,"line_start":173,"line_end":173,"column_start":8,"column_end":14},"name":"uncons","qualname":"::stream::uncons","value":"pub fn uncons<Input: ?Sized>(&mut Input)\n-> ParseResult<Input::Token, Input::Error> where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72014,"byte_end":72023,"line_start":172,"line_end":172,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":1142},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72358,"byte_end":72373,"line_start":184,"line_end":184,"column_start":11,"column_end":26},"name":"RangeStreamOnce","qualname":"::stream::RangeStreamOnce","value":"RangeStreamOnce: StreamOnce + ResetStream","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1150}],"decl_id":null,"docs":" A `RangeStream` is an extension of `StreamOnce` which allows for zero copy parsing.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` is an extension of `StreamOnce` which allows for zero copy parsing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72260,"byte_end":72347,"line_start":183,"line_end":183,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72519,"byte_end":72531,"line_start":187,"line_end":187,"column_start":8,"column_end":20},"name":"uncons_range","qualname":"::stream::RangeStreamOnce::uncons_range","value":"pub fn uncons_range(&mut Self, usize)\n-> Result<Self::Range, StreamErrorFor<Self>>","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":" Takes `size` elements from the stream.\n Fails if the length of the stream is less than `size`.\n","sig":null,"attributes":[{"value":"/ Takes `size` elements from the stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72406,"byte_end":72448,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/ Fails if the length of the stream is less than `size`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72453,"byte_end":72511,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72739,"byte_end":72751,"line_start":191,"line_end":191,"column_start":8,"column_end":20},"name":"uncons_while","qualname":"::stream::RangeStreamOnce::uncons_while","value":"pub fn uncons_while<F>(&mut Self, F)\n-> Result<Self::Range, StreamErrorFor<Self>> where F: FnMut(Self::Token) ->\nbool","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`.\n returns the range of items which passed `predicate`.\n","sig":null,"attributes":[{"value":"/ Takes items from stream, testing each one with `predicate`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72607,"byte_end":72670,"line_start":189,"line_end":189,"column_start":5,"column_end":68}},{"value":"/ returns the range of items which passed `predicate`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72675,"byte_end":72731,"line_start":190,"line_end":190,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":73135,"byte_end":73148,"line_start":202,"line_end":202,"column_start":8,"column_end":21},"name":"uncons_while1","qualname":"::stream::RangeStreamOnce::uncons_while1","value":"pub fn uncons_while1<F>(&mut Self, F)\n-> ParseResult<Self::Range, StreamErrorFor<Self>> where F: FnMut(Self::Token)\n-> bool","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`\n returns a range of at least one items which passed `predicate`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72871,"byte_end":72880,"line_start":195,"line_end":195,"column_start":5,"column_end":14}},{"value":"/ Takes items from stream, testing each one with `predicate`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72885,"byte_end":72947,"line_start":196,"line_end":196,"column_start":5,"column_end":67}},{"value":"/ returns a range of at least one items which passed `predicate`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72952,"byte_end":73019,"line_start":197,"line_end":197,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":73024,"byte_end":73027,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":73032,"byte_end":73042,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":73047,"byte_end":73050,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This may not return `PeekOk` as it should uncons at least one token.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":73055,"byte_end":73127,"line_start":201,"line_end":201,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74184,"byte_end":74192,"line_start":235,"line_end":235,"column_start":8,"column_end":16},"name":"distance","qualname":"::stream::RangeStreamOnce::distance","value":"pub fn distance(&Self, &Self::Checkpoint) -> usize","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":" Returns the distance between `self` and `end`. The returned `usize` must be so that","sig":null,"attributes":[{"value":"/ Returns the distance between `self` and `end`. The returned `usize` must be so that","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":73927,"byte_end":74014,"line_start":228,"line_end":228,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74019,"byte_end":74022,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74027,"byte_end":74040,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ let start = stream.checkpoint();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74045,"byte_end":74081,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/ stream.uncons_range(distance);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74086,"byte_end":74120,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/ stream.distance(&start) == distance","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74125,"byte_end":74164,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74169,"byte_end":74176,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74285,"byte_end":74290,"line_start":238,"line_end":238,"column_start":8,"column_end":13},"name":"range","qualname":"::stream::RangeStreamOnce::range","value":"pub fn range(&Self) -> Self::Range","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":" Returns the entire range of `self`\n","sig":null,"attributes":[{"value":"/ Returns the entire range of `self`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74239,"byte_end":74277,"line_start":237,"line_end":237,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":1151},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74411,"byte_end":74422,"line_start":242,"line_end":242,"column_start":11,"column_end":22},"name":"RangeStream","qualname":"::stream::RangeStream","value":"RangeStream: Stream + RangeStreamOnce","parent":null,"children":[],"decl_id":null,"docs":" A `RangeStream` is an extension of `Stream` which allows for zero copy parsing.\n","sig":null,"attributes":[{"value":"/ A `RangeStream` is an extension of `Stream` which allows for zero copy parsing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74317,"byte_end":74400,"line_start":241,"line_end":241,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":1154},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74551,"byte_end":74568,"line_start":247,"line_end":247,"column_start":8,"column_end":25},"name":"wrap_stream_error","qualname":"::stream::wrap_stream_error","value":"pub fn wrap_stream_error<T,\n                         Input: ?Sized>(&Input,\n                                        <Input::Error as\n                                        ParseError<Input::Token, Input::Range,\n                                                   Input::Position>>::StreamError)\n-> ParseResult<T, <Input as StreamOnce>::Error> where Input: StreamOnce +\nPositioned","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74980,"byte_end":74992,"line_start":263,"line_end":263,"column_start":8,"column_end":20},"name":"uncons_range","qualname":"::stream::uncons_range","value":"pub fn uncons_range<Input: ?Sized>(&mut Input, usize)\n-> ParseResult<Input::Range, <Input as StreamOnce>::Error> where\nInput: RangeStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74963,"byte_end":74972,"line_start":262,"line_end":262,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":75407,"byte_end":75419,"line_start":283,"line_end":283,"column_start":8,"column_end":20},"name":"input_at_eof","qualname":"::stream::input_at_eof","value":"pub fn input_at_eof<Input: ?Sized>(&mut Input) -> bool where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":75766,"byte_end":75778,"line_start":297,"line_end":297,"column_start":8,"column_end":20},"name":"uncons_while","qualname":"::stream::uncons_while","value":"pub fn uncons_while<Input: ?Sized, F>(&mut Input, F)\n-> ParseResult<Input::Range, Input::Error> where F: FnMut(Input::Token) ->\nbool, Input: RangeStream, Input::Range: Range","parent":null,"children":[],"decl_id":null,"docs":" Removes items from the input while `predicate` returns `true`.\n","sig":null,"attributes":[{"value":"/ Removes items from the input while `predicate` returns `true`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":75682,"byte_end":75748,"line_start":295,"line_end":295,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":75749,"byte_end":75758,"line_start":296,"line_end":296,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":76814,"byte_end":76827,"line_start":332,"line_end":332,"column_start":8,"column_end":21},"name":"uncons_while1","qualname":"::stream::uncons_while1","value":"pub fn uncons_while1<Input: ?Sized, F>(&mut Input, F)\n-> ParseResult<Input::Range, Input::Error> where F: FnMut(Input::Token) ->\nbool, Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Takes items from stream, testing each one with `predicate`\n returns a range of at least one items which passed `predicate`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":76574,"byte_end":76583,"line_start":325,"line_end":325,"column_start":1,"column_end":10}},{"value":"/ Takes items from stream, testing each one with `predicate`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":76584,"byte_end":76646,"line_start":326,"line_end":326,"column_start":1,"column_end":63}},{"value":"/ returns a range of at least one items which passed `predicate`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":76647,"byte_end":76714,"line_start":327,"line_end":327,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":76715,"byte_end":76718,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":76719,"byte_end":76729,"line_start":329,"line_end":329,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":76730,"byte_end":76733,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ This may not return `PeekOk` as it should uncons at least one token.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":76734,"byte_end":76806,"line_start":331,"line_end":331,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":1168},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":78518,"byte_end":78523,"line_start":382,"line_end":382,"column_start":11,"column_end":16},"name":"Range","qualname":"::stream::Range","value":"Range","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170}],"decl_id":null,"docs":" Trait representing a range of elements.\n","sig":null,"attributes":[{"value":"/ Trait representing a range of elements.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":78464,"byte_end":78507,"line_start":381,"line_end":381,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":78673,"byte_end":78676,"line_start":385,"line_end":385,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::Range::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":" Returns the remaining length of `self`.\n The returned length need not be the same as the number of items left in the stream.\n","sig":null,"attributes":[{"value":"/ Returns the remaining length of `self`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":78530,"byte_end":78573,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/ The returned length need not be the same as the number of items left in the stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":78578,"byte_end":78665,"line_start":384,"line_end":384,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":78790,"byte_end":78798,"line_start":388,"line_end":388,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::stream::Range::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":" Returns `true` if the range does not contain any elements (`Range::len() == 0`)\n","sig":null,"attributes":[{"value":"/ Returns `true` if the range does not contain any elements (`Range::len() == 0`)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":78699,"byte_end":78782,"line_start":387,"line_end":387,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":3535},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":86991,"byte_end":87004,"line_start":747,"line_end":747,"column_start":12,"column_end":25},"name":"PartialStream","qualname":"::stream::PartialStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream type which indicates that the stream is partial if end of input is reached\n","sig":null,"attributes":[{"value":"/ Stream type which indicates that the stream is partial if end of input is reached","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":86832,"byte_end":86917,"line_start":745,"line_end":745,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":3538},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87008,"byte_end":87013,"line_start":747,"line_end":747,"column_start":29,"column_end":34},"name":"0","qualname":"::stream::PartialStream::0","value":"S","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3568},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89064,"byte_end":89078,"line_start":842,"line_end":842,"column_start":12,"column_end":26},"name":"CompleteStream","qualname":"::stream::CompleteStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream type which indicates that the stream is complete if end of input is reached","sig":null,"attributes":[{"value":"/ Stream type which indicates that the stream is complete if end of input is reached","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":88760,"byte_end":88846,"line_start":836,"line_end":836,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":88847,"byte_end":88850,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ For most streams this is already the default but this wrapper can be used to override a nested","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":88851,"byte_end":88949,"line_start":838,"line_end":838,"column_start":1,"column_end":99}},{"value":"/ `PartialStream`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":88950,"byte_end":88969,"line_start":839,"line_end":839,"column_start":1,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89032,"byte_end":89052,"line_start":841,"line_end":841,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3571},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89082,"byte_end":89087,"line_start":842,"line_end":842,"column_start":30,"column_end":35},"name":"0","qualname":"::stream::CompleteStream::0","value":"S","parent":{"krate":0,"index":3568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3601},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91151,"byte_end":91169,"line_start":939,"line_end":939,"column_start":12,"column_end":30},"name":"MaybePartialStream","qualname":"::stream::MaybePartialStream","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3604},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91173,"byte_end":91178,"line_start":939,"line_end":939,"column_start":34,"column_end":39},"name":"0","qualname":"::stream::MaybePartialStream::0","value":"S","parent":{"krate":0,"index":3601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3605},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91180,"byte_end":91188,"line_start":939,"line_end":939,"column_start":41,"column_end":49},"name":"1","qualname":"::stream::MaybePartialStream::1","value":"bool","parent":{"krate":0,"index":3601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3639},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":93020,"byte_end":93031,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"SliceStream","qualname":"::stream::SliceStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype for constructing a stream from a slice where the items in the slice are not copyable.\n","sig":null,"attributes":[{"value":"/ Newtype for constructing a stream from a slice where the items in the slice are not copyable.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":92856,"byte_end":92953,"line_start":1022,"line_end":1022,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":3643},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":93039,"byte_end":93050,"line_start":1024,"line_end":1024,"column_start":31,"column_end":42},"name":"0","qualname":"::stream::SliceStream::0","value":"&'a [T]","parent":{"krate":0,"index":3639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3678},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96104,"byte_end":96118,"line_start":1158,"line_end":1158,"column_start":12,"column_end":26},"name":"IteratorStream","qualname":"::stream::IteratorStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around iterators which allows them to be treated as a stream.\n Returned by [`IteratorStream::new`].\n","sig":null,"attributes":[{"value":"/ Wrapper around iterators which allows them to be treated as a stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":95948,"byte_end":96021,"line_start":1155,"line_end":1155,"column_start":1,"column_end":74}},{"value":"/ Returned by [`IteratorStream::new`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96022,"byte_end":96062,"line_start":1156,"line_end":1156,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96453,"byte_end":96456,"line_start":1168,"line_end":1168,"column_start":12,"column_end":15},"name":"new","qualname":"<IteratorStream<Input>>::new","value":"pub fn new<T>(T) -> IteratorStream<Input> where T: IntoIterator<IntoIter =\nInput, Item = Input>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a stream.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96202,"byte_end":96243,"line_start":1164,"line_end":1164,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96248,"byte_end":96251,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ NOTE: This type do not implement `Positioned` and `Clone` and must be wrapped with types","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96256,"byte_end":96348,"line_start":1166,"line_end":1166,"column_start":5,"column_end":97}},{"value":"/     such as `BufferedStreamRef` and `State` to become a `Stream` which can be parsed","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96353,"byte_end":96441,"line_start":1167,"line_end":1167,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97323,"byte_end":97336,"line_start":1205,"line_end":1205,"column_start":12,"column_end":25},"name":"PointerOffset","qualname":"::stream::PointerOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" Newtype around a pointer offset into a slice stream (`&[T]`/`&str`).\n","sig":null,"attributes":[{"value":"/ Newtype around a pointer offset into a slice stream (`&[T]`/`&str`).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97239,"byte_end":97311,"line_start":1204,"line_end":1204,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1396},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97348,"byte_end":97357,"line_start":1205,"line_end":1205,"column_start":37,"column_end":46},"name":"0","qualname":"::stream::PointerOffset::0","value":"usize","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98532,"byte_end":98535,"line_start":1263,"line_end":1263,"column_start":12,"column_end":15},"name":"new","qualname":"<PointerOffset<T>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99046,"byte_end":99064,"line_start":1279,"line_end":1279,"column_start":12,"column_end":30},"name":"translate_position","qualname":"<PointerOffset<T>>::translate_position","value":"pub fn translate_position(Self, &T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer-based position into an indexed position.","sig":null,"attributes":[{"value":"/ Converts the pointer-based position into an indexed position.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98615,"byte_end":98680,"line_start":1267,"line_end":1267,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98685,"byte_end":98688,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98693,"byte_end":98704,"line_start":1269,"line_end":1269,"column_start":5,"column_end":16}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98709,"byte_end":98736,"line_start":1270,"line_end":1270,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98741,"byte_end":98762,"line_start":1271,"line_end":1271,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98767,"byte_end":98784,"line_start":1272,"line_end":1272,"column_start":5,"column_end":22}},{"value":"/ let text = \"b\";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98789,"byte_end":98808,"line_start":1273,"line_end":1273,"column_start":5,"column_end":24}},{"value":"/ let err = token('a').easy_parse(text).unwrap_err();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98813,"byte_end":98868,"line_start":1274,"line_end":1274,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(err.position.0, text.as_ptr() as usize);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98873,"byte_end":98928,"line_start":1275,"line_end":1275,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(err.map_position(|p| p.translate_position(text)).position, 0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98933,"byte_end":99010,"line_start":1276,"line_end":1276,"column_start":5,"column_end":82}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99015,"byte_end":99022,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99027,"byte_end":99034,"line_start":1278,"line_end":1278,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1427},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99549,"byte_end":99555,"line_start":1293,"line_end":1293,"column_start":8,"column_end":14},"name":"decode","qualname":"::stream::decode","value":"pub fn decode<Input, P>(P, &mut Input, &mut P::PartialState)\n-> Result<(Option<P::Output>, usize), <Input as StreamOnce>::Error> where\nP: Parser<Input>, Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Decodes `input` using `parser`.","sig":null,"attributes":[{"value":"/ Decodes `input` using `parser`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99196,"byte_end":99231,"line_start":1285,"line_end":1285,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99232,"byte_end":99235,"line_start":1286,"line_end":1286,"column_start":1,"column_end":4}},{"value":"/ Return `Ok(Some(token), committed_data)` if there was enough data to finish parsing using","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99236,"byte_end":99329,"line_start":1287,"line_end":1287,"column_start":1,"column_end":94}},{"value":"/ `parser`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99330,"byte_end":99343,"line_start":1288,"line_end":1288,"column_start":1,"column_end":14}},{"value":"/ Returns `Ok(None, committed_data)` if `input` did not contain enough data to finish parsing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99344,"byte_end":99439,"line_start":1289,"line_end":1289,"column_start":1,"column_end":96}},{"value":"/ using `parser`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99440,"byte_end":99459,"line_start":1290,"line_end":1290,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99460,"byte_end":99463,"line_start":1291,"line_end":1291,"column_start":1,"column_end":4}},{"value":"/ See `examples/async.rs` for example usage in a `tokio_io::codec::Decoder`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":99464,"byte_end":99541,"line_start":1292,"line_end":1292,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1430},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":101022,"byte_end":101034,"line_start":1332,"line_end":1332,"column_start":8,"column_end":20},"name":"decode_tokio","qualname":"::stream::decode_tokio","value":"pub fn decode_tokio<Input, P>(P, &mut Input, &mut P::PartialState)\n-> Result<(Option<P::Output>, usize), <Input as StreamOnce>::Error> where\nP: Parser<Input>, Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Decodes `input` using `parser`. Like `decode` but works directly in both\n `tokio_util::Decoder::decode` and `tokio_util::Decoder::decode_eof`","sig":null,"attributes":[{"value":"/ Decodes `input` using `parser`. Like `decode` but works directly in both","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100453,"byte_end":100529,"line_start":1321,"line_end":1321,"column_start":1,"column_end":77}},{"value":"/ `tokio_util::Decoder::decode` and `tokio_util::Decoder::decode_eof`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100530,"byte_end":100601,"line_start":1322,"line_end":1322,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100602,"byte_end":100605,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ Return `Ok(Some(token), committed_data)` if there was enough data to finish parsing using","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100606,"byte_end":100699,"line_start":1324,"line_end":1324,"column_start":1,"column_end":94}},{"value":"/ `parser`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100700,"byte_end":100713,"line_start":1325,"line_end":1325,"column_start":1,"column_end":14}},{"value":"/ Returns `Ok(None, committed_data)` if `input` did not contain enough data to finish parsing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100714,"byte_end":100809,"line_start":1326,"line_end":1326,"column_start":1,"column_end":96}},{"value":"/ using `parser`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100810,"byte_end":100829,"line_start":1327,"line_end":1327,"column_start":1,"column_end":20}},{"value":"/ Returns `Ok(None, 0)` if `input` did not contain enough data to finish parsing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100830,"byte_end":100912,"line_start":1328,"line_end":1328,"column_start":1,"column_end":83}},{"value":"/ using `parser`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100913,"byte_end":100932,"line_start":1329,"line_end":1329,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100933,"byte_end":100936,"line_start":1330,"line_end":1330,"column_start":1,"column_end":4}},{"value":"/ See `examples/async.rs` for example usage in a `tokio_io::codec::Decoder`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":100937,"byte_end":101014,"line_start":1331,"line_end":1331,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1434},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":120938,"byte_end":120948,"line_start":1837,"line_end":1837,"column_start":8,"column_end":18},"name":"call_with2","qualname":"::stream::call_with2","value":"pub fn call_with2<F, A, B, R>(A, B, F) -> R where F: FnOnce(A, B) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1439},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":121055,"byte_end":121064,"line_start":1845,"line_end":1845,"column_start":8,"column_end":17},"name":"call_with","qualname":"::stream::call_with","value":"pub fn call_with<F, A, R>(A, F) -> R where F: FnOnce(A) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1443},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":9738},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":9796},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1572},{"krate":0,"index":1640},{"krate":0,"index":1735},{"krate":0,"index":2112},{"krate":0,"index":2189},{"krate":0,"index":2237},{"krate":0,"index":2374},{"krate":0,"index":2687},{"krate":0,"index":2803},{"krate":0,"index":2946},{"krate":0,"index":3016},{"krate":0,"index":3020},{"krate":0,"index":3024},{"krate":0,"index":3028},{"krate":0,"index":3031},{"krate":0,"index":9432},{"krate":0,"index":9436},{"krate":0,"index":9434},{"krate":0,"index":3040},{"krate":0,"index":9437},{"krate":0,"index":9443},{"krate":0,"index":9441},{"krate":0,"index":9439},{"krate":0,"index":3046}],"decl_id":null,"docs":" A collection of both concrete parsers as well as parser combinators.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22892,"byte_end":22904,"line_start":616,"line_end":616,"column_start":1,"column_end":13}},{"value":"/ A collection of both concrete parsers as well as parser combinators.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":209673,"byte_end":209745,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":209746,"byte_end":209749,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implements the [`Parser`] trait which is the core of `combine` and contains the submodules","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":209750,"byte_end":209844,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ implementing all combine parsers.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":209845,"byte_end":209882,"line_start":4,"line_end":4,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1498},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"byte","qualname":"::parser::byte","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1535},{"krate":0,"index":1539},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1559},{"krate":0,"index":3697},{"krate":0,"index":3703},{"krate":0,"index":3715},{"krate":0,"index":3722},{"krate":0,"index":3730},{"krate":0,"index":3743},{"krate":0,"index":3763},{"krate":0,"index":3767},{"krate":0,"index":3751},{"krate":0,"index":3761},{"krate":0,"index":3785},{"krate":0,"index":3790},{"krate":0,"index":3773},{"krate":0,"index":3783},{"krate":0,"index":3808},{"krate":0,"index":3814},{"krate":0,"index":3796},{"krate":0,"index":3806},{"krate":0,"index":3820},{"krate":0,"index":3825},{"krate":0,"index":3836},{"krate":0,"index":1563},{"krate":0,"index":1564}],"decl_id":null,"docs":" Module containing parsers specialized on byte streams.\n","sig":null,"attributes":[{"value":"/ Module containing parsers specialized on byte streams.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":248487,"byte_end":248545,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1519},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249144,"byte_end":249148,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"byte","qualname":"::parser::byte::byte","value":"pub fn byte<Input>(u8) -> Token<Input> where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a byte and succeeds if the byte is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a byte and succeeds if the byte is equal to `c`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":248827,"byte_end":248886,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":248887,"byte_end":248890,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":248891,"byte_end":248898,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":248899,"byte_end":248923,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::byte;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":248924,"byte_end":248960,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(byte(b'!').parse(&b\"!\"[..]), Ok((b'!', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":248961,"byte_end":249027,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ assert!(byte(b'A').parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249028,"byte_end":249077,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/ assert!(byte(b'A').parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249078,"byte_end":249128,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249129,"byte_end":249136,"line_start":23,"line_end":23,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1522},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249852,"byte_end":249857,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"digit","qualname":"::parser::byte::digit","value":"pub fn digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a base-10 digit (0–9).","sig":null,"attributes":[{"value":"/ Parses a base-10 digit (0–9).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249614,"byte_end":249649,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249650,"byte_end":249653,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249654,"byte_end":249661,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249662,"byte_end":249686,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249687,"byte_end":249724,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(digit().parse(&b\"9\"[..]), Ok((b'9', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249725,"byte_end":249788,"line_start":48,"line_end":48,"column_start":1,"column_end":64}},{"value":"/ assert!(digit().parse(&b\"A\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249789,"byte_end":249836,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":249837,"byte_end":249844,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1525},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250453,"byte_end":250458,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"space","qualname":"::parser::byte::space","value":"pub fn space<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `b' '`, `b'\\t'`, `b'\\n'` or `'b\\'r'`.","sig":null,"attributes":[{"value":"/ Parses a `b' '`, `b'\\t'`, `b'\\n'` or `'b\\'r'`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250087,"byte_end":250137,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250138,"byte_end":250141,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250142,"byte_end":250149,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250150,"byte_end":250174,"line_start":62,"line_end":62,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::space;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250175,"byte_end":250212,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(space().parse(&b\" \"[..]), Ok((b' ', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250213,"byte_end":250276,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(space().parse(&b\"  \"[..]), Ok((b' ', &b\" \"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250277,"byte_end":250342,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ assert!(space().parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250343,"byte_end":250390,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ assert!(space().parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250391,"byte_end":250437,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250438,"byte_end":250445,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1528},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250986,"byte_end":250992,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"spaces","qualname":"::parser::byte::spaces","value":"pub fn spaces<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Skips over [`space`] zero or more times","sig":null,"attributes":[{"value":"/ Skips over [`space`] zero or more times","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250691,"byte_end":250734,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250735,"byte_end":250738,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`space`]: fn.space.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250739,"byte_end":250767,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250768,"byte_end":250771,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250772,"byte_end":250779,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250780,"byte_end":250804,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::spaces;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250805,"byte_end":250843,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(spaces().parse(&b\"\"[..]), Ok(((), &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250844,"byte_end":250905,"line_start":84,"line_end":84,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(spaces().parse(&b\"   \"[..]), Ok(((), &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250906,"byte_end":250970,"line_start":85,"line_end":85,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":250971,"byte_end":250978,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1531},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251449,"byte_end":251456,"line_start":103,"line_end":103,"column_start":8,"column_end":15},"name":"newline","qualname":"::parser::byte::newline","value":"pub fn newline<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a newline byte (`b'\\n'`).","sig":null,"attributes":[{"value":"/ Parses a newline byte (`b'\\n'`).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251201,"byte_end":251237,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251238,"byte_end":251241,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251242,"byte_end":251249,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251250,"byte_end":251274,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::newline;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251275,"byte_end":251314,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(newline().parse(&b\"\\n\"[..]), Ok((b'\\n', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251315,"byte_end":251382,"line_start":100,"line_end":100,"column_start":1,"column_end":68}},{"value":"/ assert!(newline().parse(&b\"\\r\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251383,"byte_end":251433,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251434,"byte_end":251441,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1535},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252027,"byte_end":252031,"line_start":120,"line_end":120,"column_start":8,"column_end":12},"name":"crlf","qualname":"::parser::byte::crlf","value":"pub fn crlf<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses carriage return and newline (`&b\"\\r\\n\"`), returning the newline byte.","sig":null,"attributes":[{"value":"/ Parses carriage return and newline (`&b\"\\r\\n\"`), returning the newline byte.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251694,"byte_end":251774,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251775,"byte_end":251778,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251779,"byte_end":251786,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251787,"byte_end":251811,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::crlf;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251812,"byte_end":251848,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(crlf().parse(&b\"\\r\\n\"[..]), Ok((b'\\n', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251849,"byte_end":251915,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ assert!(crlf().parse(&b\"\\r\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251916,"byte_end":251963,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/ assert!(crlf().parse(&b\"\\n\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":251964,"byte_end":252011,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252012,"byte_end":252019,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1539},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252530,"byte_end":252533,"line_start":136,"line_end":136,"column_start":8,"column_end":11},"name":"tab","qualname":"::parser::byte::tab","value":"pub fn tab<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a tab byte (`b'\\t'`).","sig":null,"attributes":[{"value":"/ Parses a tab byte (`b'\\t'`).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252299,"byte_end":252331,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252332,"byte_end":252335,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252336,"byte_end":252343,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252344,"byte_end":252368,"line_start":131,"line_end":131,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::tab;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252369,"byte_end":252404,"line_start":132,"line_end":132,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(tab().parse(&b\"\\t\"[..]), Ok((b'\\t', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252405,"byte_end":252468,"line_start":133,"line_end":133,"column_start":1,"column_end":64}},{"value":"/ assert!(tab().parse(&b\" \"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252469,"byte_end":252514,"line_start":134,"line_end":134,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252515,"byte_end":252522,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1543},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253008,"byte_end":253013,"line_start":152,"line_end":152,"column_start":8,"column_end":13},"name":"upper","qualname":"::parser::byte::upper","value":"pub fn upper<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an uppercase ASCII letter (A–Z).","sig":null,"attributes":[{"value":"/ Parses an uppercase ASCII letter (A–Z).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252760,"byte_end":252805,"line_start":144,"line_end":144,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252806,"byte_end":252809,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252810,"byte_end":252817,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252818,"byte_end":252842,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::upper;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252843,"byte_end":252880,"line_start":148,"line_end":148,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(upper().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252881,"byte_end":252944,"line_start":149,"line_end":149,"column_start":1,"column_end":64}},{"value":"/ assert!(upper().parse(&b\"a\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252945,"byte_end":252992,"line_start":150,"line_end":150,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":252993,"byte_end":253000,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1546},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253493,"byte_end":253498,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"lower","qualname":"::parser::byte::lower","value":"pub fn lower<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an lowercase ASCII letter (a–z).","sig":null,"attributes":[{"value":"/ Parses an lowercase ASCII letter (a–z).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253245,"byte_end":253290,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253291,"byte_end":253294,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253295,"byte_end":253302,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253303,"byte_end":253327,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::lower;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253328,"byte_end":253365,"line_start":164,"line_end":164,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(lower().parse(&b\"a\"[..]), Ok((b'a', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253366,"byte_end":253429,"line_start":165,"line_end":165,"column_start":1,"column_end":64}},{"value":"/ assert!(lower().parse(&b\"A\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253430,"byte_end":253477,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253478,"byte_end":253485,"line_start":167,"line_end":167,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1549},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254087,"byte_end":254096,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"alpha_num","qualname":"::parser::byte::alpha_num","value":"pub fn alpha_num<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses either an ASCII alphabet letter or digit (a–z, A–Z, 0–9).","sig":null,"attributes":[{"value":"/ Parses either an ASCII alphabet letter or digit (a–z, A–Z, 0–9).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253730,"byte_end":253804,"line_start":176,"line_end":176,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253805,"byte_end":253808,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253809,"byte_end":253816,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253817,"byte_end":253841,"line_start":179,"line_end":179,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::alpha_num;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253842,"byte_end":253883,"line_start":180,"line_end":180,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(alpha_num().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253884,"byte_end":253951,"line_start":181,"line_end":181,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(alpha_num().parse(&b\"1\"[..]), Ok((b'1', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":253952,"byte_end":254019,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/ assert!(alpha_num().parse(&b\"!\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254020,"byte_end":254071,"line_start":183,"line_end":183,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254072,"byte_end":254079,"line_start":184,"line_end":184,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1552},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254660,"byte_end":254666,"line_start":202,"line_end":202,"column_start":8,"column_end":14},"name":"letter","qualname":"::parser::byte::letter","value":"pub fn letter<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an ASCII alphabet letter (a–z, A–Z).","sig":null,"attributes":[{"value":"/ Parses an ASCII alphabet letter (a–z, A–Z).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254338,"byte_end":254389,"line_start":193,"line_end":193,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254390,"byte_end":254393,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254394,"byte_end":254401,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254402,"byte_end":254426,"line_start":196,"line_end":196,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254427,"byte_end":254465,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(letter().parse(&b\"a\"[..]), Ok((b'a', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254466,"byte_end":254530,"line_start":198,"line_end":198,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(letter().parse(&b\"A\"[..]), Ok((b'A', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254531,"byte_end":254595,"line_start":199,"line_end":199,"column_start":1,"column_end":65}},{"value":"/ assert!(letter().parse(&b\"9\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254596,"byte_end":254644,"line_start":200,"line_end":200,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254645,"byte_end":254652,"line_start":201,"line_end":201,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1555},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255142,"byte_end":255151,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::parser::byte::oct_digit","value":"pub fn oct_digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an octal digit.","sig":null,"attributes":[{"value":"/ Parses an octal digit.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254901,"byte_end":254927,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254928,"byte_end":254931,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254932,"byte_end":254939,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254940,"byte_end":254964,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::oct_digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":254965,"byte_end":255006,"line_start":214,"line_end":214,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(oct_digit().parse(&b\"7\"[..]), Ok((b'7', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255007,"byte_end":255074,"line_start":215,"line_end":215,"column_start":1,"column_end":68}},{"value":"/ assert!(oct_digit().parse(&b\"8\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255075,"byte_end":255126,"line_start":216,"line_end":216,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255127,"byte_end":255134,"line_start":217,"line_end":217,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1559},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255690,"byte_end":255699,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::parser::byte::hex_digit","value":"pub fn hex_digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an ASCII hexdecimal digit (accepts both uppercase and lowercase).","sig":null,"attributes":[{"value":"/ Parses an ASCII hexdecimal digit (accepts both uppercase and lowercase).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255399,"byte_end":255475,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255476,"byte_end":255479,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255480,"byte_end":255487,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255488,"byte_end":255512,"line_start":229,"line_end":229,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::byte::hex_digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255513,"byte_end":255554,"line_start":230,"line_end":230,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(hex_digit().parse(&b\"F\"[..]), Ok((b'F', &b\"\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255555,"byte_end":255622,"line_start":231,"line_end":231,"column_start":1,"column_end":68}},{"value":"/ assert!(hex_digit().parse(&b\"H\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255623,"byte_end":255674,"line_start":232,"line_end":232,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":255675,"byte_end":255682,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3697},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":256488,"byte_end":256493,"line_start":262,"line_end":262,"column_start":8,"column_end":13},"name":"bytes","qualname":"::parser::byte::bytes","value":"bytes { s }","parent":null,"children":[{"krate":0,"index":3701},{"krate":0,"index":3702}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":15966,"byte_end":15976,"line_start":430,"line_end":430,"column_start":11,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3701},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":256509,"byte_end":256510,"line_start":262,"line_end":262,"column_start":29,"column_end":30},"name":"s","qualname":"::parser::byte::bytes::s","value":"&'static [u8]","parent":{"krate":0,"index":3697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3715},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":256488,"byte_end":256493,"line_start":262,"line_end":262,"column_start":8,"column_end":13},"name":"bytes","qualname":"::parser::byte::bytes","value":"pub fn bytes<'a, 'b, Input>(&'static [u8]) -> bytes where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: Stream<Token = u8, Range = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the bytes `s`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3722},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":257379,"byte_end":257388,"line_start":292,"line_end":292,"column_start":8,"column_end":17},"name":"bytes_cmp","qualname":"::parser::byte::bytes_cmp","value":"bytes_cmp { s, cmp }","parent":null,"children":[{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3729}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":15966,"byte_end":15976,"line_start":430,"line_end":430,"column_start":11,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3727},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":257407,"byte_end":257408,"line_start":292,"line_end":292,"column_start":36,"column_end":37},"name":"s","qualname":"::parser::byte::bytes_cmp::s","value":"&'static [u8]","parent":{"krate":0,"index":3722},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3728},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":257425,"byte_end":257428,"line_start":292,"line_end":292,"column_start":54,"column_end":57},"name":"cmp","qualname":"::parser::byte::bytes_cmp::cmp","value":"C","parent":{"krate":0,"index":3722},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3743},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":257379,"byte_end":257388,"line_start":292,"line_end":292,"column_start":8,"column_end":17},"name":"bytes_cmp","qualname":"::parser::byte::bytes_cmp","value":"pub fn bytes_cmp<'a, 'b, C, Input>(&'static [u8], C) -> bytes_cmp where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, C: FnMut(u8, u8) -> bool, Input: Stream<Token =\nu8, Range = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the bytes `s` using `cmp` to compare each token.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3763},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":259235,"byte_end":259248,"line_start":350,"line_end":350,"column_start":5,"column_end":18},"name":"TakeUntilByte","qualname":"::parser::byte::TakeUntilByte","value":"TakeUntilByte { a }","parent":null,"children":[{"krate":0,"index":3765},{"krate":0,"index":3766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3765},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":259275,"byte_end":259276,"line_start":350,"line_end":350,"column_start":45,"column_end":46},"name":"a","qualname":"::parser::byte::TakeUntilByte::a","value":"u8","parent":{"krate":0,"index":3763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3761},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":259250,"byte_end":259265,"line_start":350,"line_end":350,"column_start":20,"column_end":35},"name":"take_until_byte","qualname":"::parser::byte::take_until_byte","value":"pub fn take_until_byte<Input>(u8) -> TakeUntilByte<Input> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, Input::Range: AsRef<[u8]> +\ncrate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a` is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3785},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":259940,"byte_end":259954,"line_start":369,"line_end":369,"column_start":5,"column_end":19},"name":"TakeUntilByte2","qualname":"::parser::byte::TakeUntilByte2","value":"TakeUntilByte2 { a, b }","parent":null,"children":[{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3787},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":259983,"byte_end":259984,"line_start":369,"line_end":369,"column_start":48,"column_end":49},"name":"a","qualname":"::parser::byte::TakeUntilByte2::a","value":"u8","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3788},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":259986,"byte_end":259987,"line_start":369,"line_end":369,"column_start":51,"column_end":52},"name":"b","qualname":"::parser::byte::TakeUntilByte2::b","value":"u8","parent":{"krate":0,"index":3785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3783},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":259956,"byte_end":259972,"line_start":369,"line_end":369,"column_start":21,"column_end":37},"name":"take_until_byte2","qualname":"::parser::byte::take_until_byte2","value":"pub fn take_until_byte2<Input>(u8, u8) -> TakeUntilByte2<Input> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, Input::Range: AsRef<[u8]> +\ncrate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a` or `b` is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3808},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":260641,"byte_end":260655,"line_start":388,"line_end":388,"column_start":5,"column_end":19},"name":"TakeUntilByte3","qualname":"::parser::byte::TakeUntilByte3","value":"TakeUntilByte3 { a, b, c }","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3810},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":260684,"byte_end":260685,"line_start":388,"line_end":388,"column_start":48,"column_end":49},"name":"a","qualname":"::parser::byte::TakeUntilByte3::a","value":"u8","parent":{"krate":0,"index":3808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3811},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":260687,"byte_end":260688,"line_start":388,"line_end":388,"column_start":51,"column_end":52},"name":"b","qualname":"::parser::byte::TakeUntilByte3::b","value":"u8","parent":{"krate":0,"index":3808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3812},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":260690,"byte_end":260691,"line_start":388,"line_end":388,"column_start":54,"column_end":55},"name":"c","qualname":"::parser::byte::TakeUntilByte3::c","value":"u8","parent":{"krate":0,"index":3808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3806},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":260657,"byte_end":260673,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"name":"take_until_byte3","qualname":"::parser::byte::take_until_byte3","value":"pub fn take_until_byte3<Input>(u8, u8, u8) -> TakeUntilByte3<Input> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, Input::Range: AsRef<[u8]> +\ncrate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `a`, 'b' or `c` is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3820},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":261363,"byte_end":261379,"line_start":411,"line_end":411,"column_start":8,"column_end":24},"name":"take_until_bytes","qualname":"::parser::byte::take_until_bytes","value":"take_until_bytes { needle }","parent":null,"children":[{"krate":0,"index":3823},{"krate":0,"index":3824}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":15966,"byte_end":15976,"line_start":430,"line_end":430,"column_start":11,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3823},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":261391,"byte_end":261397,"line_start":411,"line_end":411,"column_start":36,"column_end":42},"name":"needle","qualname":"::parser::byte::take_until_bytes::needle","value":"&'a [u8]","parent":{"krate":0,"index":3820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3836},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":261363,"byte_end":261379,"line_start":411,"line_end":411,"column_start":8,"column_end":24},"name":"take_until_bytes","qualname":"::parser::byte::take_until_bytes","value":"pub fn take_until_bytes<'a, Input>(&'a [u8]) -> take_until_bytes where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, Input::Range: AsRef<[u8]> +\ncrate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `needle` is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1564},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":262228,"byte_end":262231,"line_start":442,"line_end":442,"column_start":9,"column_end":12},"name":"num","qualname":"::parser::byte::num","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":3842},{"krate":0,"index":3849},{"krate":0,"index":3856},{"krate":0,"index":3863},{"krate":0,"index":3870},{"krate":0,"index":3877},{"krate":0,"index":3884},{"krate":0,"index":3891},{"krate":0,"index":3898},{"krate":0,"index":3905},{"krate":0,"index":3912},{"krate":0,"index":3919},{"krate":0,"index":3926},{"krate":0,"index":3933},{"krate":0,"index":3940},{"krate":0,"index":3947}],"decl_id":null,"docs":" Parsers for decoding numbers in big-endian or little-endian order.\n","sig":null,"attributes":[{"value":"/ Parsers for decoding numbers in big-endian or little-endian order.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":262149,"byte_end":262219,"line_start":441,"line_end":441,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":3842},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":264929,"byte_end":264935,"line_start":510,"line_end":510,"column_start":23,"column_end":29},"name":"be_u16","qualname":"::parser::byte::num::be_u16","value":"pub fn be_u16<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3849},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":264937,"byte_end":264943,"line_start":510,"line_end":510,"column_start":31,"column_end":37},"name":"le_u16","qualname":"::parser::byte::num::le_u16","value":"pub fn le_u16<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u16 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3856},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":265364,"byte_end":265370,"line_start":522,"line_end":522,"column_start":23,"column_end":29},"name":"be_u32","qualname":"::parser::byte::num::be_u32","value":"pub fn be_u32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3863},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":265372,"byte_end":265378,"line_start":522,"line_end":522,"column_start":31,"column_end":37},"name":"le_u32","qualname":"::parser::byte::num::le_u32","value":"pub fn le_u32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3870},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":265815,"byte_end":265821,"line_start":534,"line_end":534,"column_start":23,"column_end":29},"name":"be_u64","qualname":"::parser::byte::num::be_u64","value":"pub fn be_u64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3877},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":265823,"byte_end":265829,"line_start":534,"line_end":534,"column_start":31,"column_end":37},"name":"le_u64","qualname":"::parser::byte::num::le_u64","value":"pub fn le_u64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a u64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3884},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":266243,"byte_end":266249,"line_start":547,"line_end":547,"column_start":23,"column_end":29},"name":"be_i16","qualname":"::parser::byte::num::be_i16","value":"pub fn be_i16<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3891},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":266251,"byte_end":266257,"line_start":547,"line_end":547,"column_start":31,"column_end":37},"name":"le_i16","qualname":"::parser::byte::num::le_i16","value":"pub fn le_i16<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i16 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3898},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":266679,"byte_end":266685,"line_start":560,"line_end":560,"column_start":23,"column_end":29},"name":"be_i32","qualname":"::parser::byte::num::be_i32","value":"pub fn be_i32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3905},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":266687,"byte_end":266693,"line_start":560,"line_end":560,"column_start":31,"column_end":37},"name":"le_i32","qualname":"::parser::byte::num::le_i32","value":"pub fn le_i32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3912},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":267130,"byte_end":267136,"line_start":572,"line_end":572,"column_start":23,"column_end":29},"name":"be_i64","qualname":"::parser::byte::num::be_i64","value":"pub fn be_i64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3919},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":267138,"byte_end":267144,"line_start":572,"line_end":572,"column_start":31,"column_end":37},"name":"le_i64","qualname":"::parser::byte::num::le_i64","value":"pub fn le_i64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3926},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":267608,"byte_end":267614,"line_start":586,"line_end":586,"column_start":23,"column_end":29},"name":"be_f32","qualname":"::parser::byte::num::be_f32","value":"pub fn be_f32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3933},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":267616,"byte_end":267622,"line_start":586,"line_end":586,"column_start":31,"column_end":37},"name":"le_f32","qualname":"::parser::byte::num::le_f32","value":"pub fn le_f32<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i32 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3940},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":268093,"byte_end":268099,"line_start":599,"line_end":599,"column_start":23,"column_end":29},"name":"be_f64","qualname":"::parser::byte::num::be_f64","value":"pub fn be_f64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3947},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/byte.rs","byte_start":268101,"byte_end":268107,"line_start":599,"line_end":599,"column_start":31,"column_end":37},"name":"le_f64","qualname":"::parser::byte::num::le_f64","value":"pub fn le_f64<'a, Input>() -> /*impl Trait*/ where Input: Stream<Token = u8>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Reads a i64 out of the byte stream with the specified endianess","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1572},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"char","qualname":"::parser::char","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":3966},{"krate":0,"index":3972},{"krate":0,"index":3969},{"krate":0,"index":3954},{"krate":0,"index":3964},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1597},{"krate":0,"index":1601},{"krate":0,"index":1605},{"krate":0,"index":1609},{"krate":0,"index":1613},{"krate":0,"index":1617},{"krate":0,"index":1621},{"krate":0,"index":1625},{"krate":0,"index":1629},{"krate":0,"index":1634}],"decl_id":null,"docs":" Module containing parsers specialized on character streams.\n","sig":null,"attributes":[{"value":"/ Module containing parsers specialized on character streams.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270260,"byte_end":270323,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1585},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270785,"byte_end":270789,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"char","qualname":"::parser::char::char","value":"pub fn char<Input>(char) -> Token<Input> where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a character and succeeds if the character is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a character and succeeds if the character is equal to `c`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270529,"byte_end":270598,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270599,"byte_end":270602,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270603,"byte_end":270610,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270611,"byte_end":270635,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::char;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270636,"byte_end":270672,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(char('!').parse(\"!\"), Ok(('!', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270673,"byte_end":270725,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/ assert!(char('A').parse(\"!\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270726,"byte_end":270769,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":270770,"byte_end":270777,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3966},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271006,"byte_end":271011,"line_start":32,"line_end":32,"column_start":16,"column_end":21},"name":"Digit","qualname":"::parser::char::Digit","value":"Digit {  }","parent":null,"children":[{"krate":0,"index":3968}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3964},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271260,"byte_end":271265,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"digit","qualname":"::parser::char::digit","value":"pub fn digit<Input>() -> Digit<Input> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: Stream<Token = char>","parent":null,"children":[],"decl_id":null,"docs":" Parses a base-10 digit.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1587},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271932,"byte_end":271937,"line_start":63,"line_end":63,"column_start":8,"column_end":13},"name":"space","qualname":"::parser::char::space","value":"pub fn space<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single whitespace according to [`std::char::is_whitespace`].","sig":null,"attributes":[{"value":"/ Parse a single whitespace according to [`std::char::is_whitespace`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271414,"byte_end":271486,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271487,"byte_end":271490,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This includes space characters, tabs and newlines.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271491,"byte_end":271545,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271546,"byte_end":271549,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_whitespace`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_whitespace","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271550,"byte_end":271654,"line_start":53,"line_end":53,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271655,"byte_end":271658,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271659,"byte_end":271666,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271667,"byte_end":271691,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::space;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271692,"byte_end":271729,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(space().parse(\" \"), Ok((' ', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271730,"byte_end":271780,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(space().parse(\"  \"), Ok((' ', \" \")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271781,"byte_end":271833,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ assert!(space().parse(\"!\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271834,"byte_end":271875,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ assert!(space().parse(\"\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271876,"byte_end":271916,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":271917,"byte_end":271924,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1590},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272651,"byte_end":272657,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"spaces","qualname":"::parser::char::spaces","value":"pub fn spaces<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Skips over zero or more spaces according to [`std::char::is_whitespace`].","sig":null,"attributes":[{"value":"/ Skips over zero or more spaces according to [`std::char::is_whitespace`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272211,"byte_end":272288,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272289,"byte_end":272292,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This includes space characters, tabs and newlines.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272293,"byte_end":272347,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272348,"byte_end":272351,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_whitespace`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_whitespace","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272352,"byte_end":272456,"line_start":76,"line_end":76,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272457,"byte_end":272460,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272461,"byte_end":272468,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272469,"byte_end":272493,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::spaces;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272494,"byte_end":272532,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(spaces().parse(\"\"), Ok(((), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272533,"byte_end":272582,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(spaces().parse(\"   \"), Ok(((), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272583,"byte_end":272635,"line_start":82,"line_end":82,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272636,"byte_end":272643,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1593},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273101,"byte_end":273108,"line_start":100,"line_end":100,"column_start":8,"column_end":15},"name":"newline","qualname":"::parser::char::newline","value":"pub fn newline<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a newline character (`'\\n'`).","sig":null,"attributes":[{"value":"/ Parses a newline character (`'\\n'`).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272868,"byte_end":272908,"line_start":92,"line_end":92,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272909,"byte_end":272912,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272913,"byte_end":272920,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272921,"byte_end":272945,"line_start":95,"line_end":95,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::newline;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272946,"byte_end":272985,"line_start":96,"line_end":96,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(newline().parse(\"\\n\"), Ok(('\\n', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":272986,"byte_end":273040,"line_start":97,"line_end":97,"column_start":1,"column_end":55}},{"value":"/ assert!(newline().parse(\"\\r\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273041,"byte_end":273085,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273086,"byte_end":273093,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1597},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273662,"byte_end":273666,"line_start":117,"line_end":117,"column_start":8,"column_end":12},"name":"crlf","qualname":"::parser::char::crlf","value":"pub fn crlf<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses carriage return and newline (`\"\\r\\n\"`), returning the newline character.","sig":null,"attributes":[{"value":"/ Parses carriage return and newline (`\"\\r\\n\"`), returning the newline character.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273351,"byte_end":273434,"line_start":108,"line_end":108,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273435,"byte_end":273438,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273439,"byte_end":273446,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273447,"byte_end":273471,"line_start":111,"line_end":111,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::crlf;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273472,"byte_end":273508,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(crlf().parse(\"\\r\\n\"), Ok(('\\n', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273509,"byte_end":273562,"line_start":113,"line_end":113,"column_start":1,"column_end":54}},{"value":"/ assert!(crlf().parse(\"\\r\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273563,"byte_end":273604,"line_start":114,"line_end":114,"column_start":1,"column_end":42}},{"value":"/ assert!(crlf().parse(\"\\n\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273605,"byte_end":273646,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273647,"byte_end":273654,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1601},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274155,"byte_end":274158,"line_start":133,"line_end":133,"column_start":8,"column_end":11},"name":"tab","qualname":"::parser::char::tab","value":"pub fn tab<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a tab character (`'\\t'`).","sig":null,"attributes":[{"value":"/ Parses a tab character (`'\\t'`).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273939,"byte_end":273975,"line_start":125,"line_end":125,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273976,"byte_end":273979,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273980,"byte_end":273987,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":273988,"byte_end":274012,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::tab;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274013,"byte_end":274048,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(tab().parse(\"\\t\"), Ok(('\\t', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274049,"byte_end":274099,"line_start":130,"line_end":130,"column_start":1,"column_end":51}},{"value":"/ assert!(tab().parse(\" \").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274100,"byte_end":274139,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274140,"byte_end":274147,"line_start":132,"line_end":132,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1605},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274757,"byte_end":274762,"line_start":151,"line_end":151,"column_start":8,"column_end":13},"name":"upper","qualname":"::parser::char::upper","value":"pub fn upper<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an uppercase letter according to [`std::char::is_uppercase`].","sig":null,"attributes":[{"value":"/ Parses an uppercase letter according to [`std::char::is_uppercase`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274394,"byte_end":274466,"line_start":141,"line_end":141,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274467,"byte_end":274470,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_uppercase`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_uppercase","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274471,"byte_end":274573,"line_start":143,"line_end":143,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274574,"byte_end":274577,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274578,"byte_end":274585,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274586,"byte_end":274610,"line_start":146,"line_end":146,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::upper;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274611,"byte_end":274648,"line_start":147,"line_end":147,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(upper().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274649,"byte_end":274699,"line_start":148,"line_end":148,"column_start":1,"column_end":51}},{"value":"/ assert!(upper().parse(\"a\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274700,"byte_end":274741,"line_start":149,"line_end":149,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":274742,"byte_end":274749,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1609},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275381,"byte_end":275386,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"lower","qualname":"::parser::char::lower","value":"pub fn lower<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an lowercase letter according to [`std::char::is_lowercase`].","sig":null,"attributes":[{"value":"/ Parses an lowercase letter according to [`std::char::is_lowercase`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275018,"byte_end":275090,"line_start":159,"line_end":159,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275091,"byte_end":275094,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_lowercase`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_lowercase","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275095,"byte_end":275197,"line_start":161,"line_end":161,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275198,"byte_end":275201,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275202,"byte_end":275209,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275210,"byte_end":275234,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::lower;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275235,"byte_end":275272,"line_start":165,"line_end":165,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(lower().parse(\"a\"), Ok(('a', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275273,"byte_end":275323,"line_start":166,"line_end":166,"column_start":1,"column_end":51}},{"value":"/ assert!(lower().parse(\"A\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275324,"byte_end":275365,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275366,"byte_end":275373,"line_start":168,"line_end":168,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1613},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276096,"byte_end":276105,"line_start":188,"line_end":188,"column_start":8,"column_end":17},"name":"alpha_num","qualname":"::parser::char::alpha_num","value":"pub fn alpha_num<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`].","sig":null,"attributes":[{"value":"/ Parses either an alphabet letter or digit according to [`std::char::is_alphanumeric`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275642,"byte_end":275732,"line_start":177,"line_end":177,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275733,"byte_end":275736,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_alphanumeric`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_alphanumeric","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275737,"byte_end":275845,"line_start":179,"line_end":179,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275846,"byte_end":275849,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275850,"byte_end":275857,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275858,"byte_end":275882,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::alpha_num;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275883,"byte_end":275924,"line_start":183,"line_end":183,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(alpha_num().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275925,"byte_end":275979,"line_start":184,"line_end":184,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(alpha_num().parse(\"1\"), Ok(('1', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":275980,"byte_end":276034,"line_start":185,"line_end":185,"column_start":1,"column_end":55}},{"value":"/ assert!(alpha_num().parse(\"!\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276035,"byte_end":276080,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276081,"byte_end":276088,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1617},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276783,"byte_end":276789,"line_start":207,"line_end":207,"column_start":8,"column_end":14},"name":"letter","qualname":"::parser::char::letter","value":"pub fn letter<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an alphabet letter according to [`std::char::is_alphabetic`].","sig":null,"attributes":[{"value":"/ Parses an alphabet letter according to [`std::char::is_alphabetic`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276363,"byte_end":276435,"line_start":196,"line_end":196,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276436,"byte_end":276439,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ [`std::char::is_alphabetic`]: https://doc.rust-lang.org/std/primitive.char.html#method.is_alphabetic","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276440,"byte_end":276544,"line_start":198,"line_end":198,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276545,"byte_end":276548,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276549,"byte_end":276556,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276557,"byte_end":276581,"line_start":201,"line_end":201,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276582,"byte_end":276620,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(letter().parse(\"a\"), Ok(('a', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276621,"byte_end":276672,"line_start":203,"line_end":203,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(letter().parse(\"A\"), Ok(('A', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276673,"byte_end":276724,"line_start":204,"line_end":204,"column_start":1,"column_end":52}},{"value":"/ assert!(letter().parse(\"9\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276725,"byte_end":276767,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":276768,"byte_end":276775,"line_start":206,"line_end":206,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1621},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277258,"byte_end":277267,"line_start":223,"line_end":223,"column_start":8,"column_end":17},"name":"oct_digit","qualname":"::parser::char::oct_digit","value":"pub fn oct_digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses an octal digit.","sig":null,"attributes":[{"value":"/ Parses an octal digit.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277036,"byte_end":277062,"line_start":215,"line_end":215,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277063,"byte_end":277066,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277067,"byte_end":277074,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277075,"byte_end":277099,"line_start":218,"line_end":218,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::oct_digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277100,"byte_end":277141,"line_start":219,"line_end":219,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(oct_digit().parse(\"7\"), Ok(('7', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277142,"byte_end":277196,"line_start":220,"line_end":220,"column_start":1,"column_end":55}},{"value":"/ assert!(oct_digit().parse(\"8\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277197,"byte_end":277242,"line_start":221,"line_end":221,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277243,"byte_end":277250,"line_start":222,"line_end":222,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1625},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277770,"byte_end":277779,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"hex_digit","qualname":"::parser::char::hex_digit","value":"pub fn hex_digit<Input>() -> /*impl Trait*/ where Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses a hexdecimal digit with uppercase and lowercase.","sig":null,"attributes":[{"value":"/ Parses a hexdecimal digit with uppercase and lowercase.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277515,"byte_end":277574,"line_start":231,"line_end":231,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277575,"byte_end":277578,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277579,"byte_end":277586,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277587,"byte_end":277611,"line_start":234,"line_end":234,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::char::hex_digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277612,"byte_end":277653,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(hex_digit().parse(\"F\"), Ok(('F', \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277654,"byte_end":277708,"line_start":236,"line_end":236,"column_start":1,"column_end":55}},{"value":"/ assert!(hex_digit().parse(\"H\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277709,"byte_end":277754,"line_start":237,"line_end":237,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":277755,"byte_end":277762,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1629},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278321,"byte_end":278327,"line_start":260,"line_end":260,"column_start":8,"column_end":14},"name":"string","qualname":"::parser::char::string","value":"pub fn string<'a, Input>(&'static str) -> /*impl Trait*/ where\nInput: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the string `s`.","sig":null,"attributes":[{"value":"/ Parses the string `s`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278036,"byte_end":278062,"line_start":247,"line_end":247,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278063,"byte_end":278066,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278067,"byte_end":278074,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278075,"byte_end":278102,"line_start":250,"line_end":250,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278103,"byte_end":278124,"line_start":251,"line_end":251,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278125,"byte_end":278165,"line_start":252,"line_end":252,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278166,"byte_end":278183,"line_start":253,"line_end":253,"column_start":1,"column_end":18}},{"value":"/ let result = string(\"rust\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278184,"byte_end":278215,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/     .parse(\"rust\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278216,"byte_end":278238,"line_start":255,"line_end":255,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278239,"byte_end":278261,"line_start":256,"line_end":256,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278262,"byte_end":278297,"line_start":257,"line_end":257,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278298,"byte_end":278305,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278306,"byte_end":278313,"line_start":259,"line_end":259,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1634},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278945,"byte_end":278955,"line_start":282,"line_end":282,"column_start":8,"column_end":18},"name":"string_cmp","qualname":"::parser::char::string_cmp","value":"pub fn string_cmp<'a, C, Input>(&'static str, C) -> /*impl Trait*/ where\nC: FnMut(char, char) -> bool, Input: Stream<Token = char>,\nInput::Error: ParseError<Input::Token, Input::Range, Input::Position>","parent":null,"children":[],"decl_id":null,"docs":" Parses the string `s`, using `cmp` to compare each character.","sig":null,"attributes":[{"value":"/ Parses the string `s`, using `cmp` to compare each character.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278548,"byte_end":278613,"line_start":268,"line_end":268,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278614,"byte_end":278617,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278618,"byte_end":278625,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278626,"byte_end":278653,"line_start":271,"line_end":271,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278654,"byte_end":278675,"line_start":272,"line_end":272,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string_cmp;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278676,"byte_end":278720,"line_start":273,"line_end":273,"column_start":1,"column_end":45}},{"value":"/ use std::ascii::AsciiExt;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278721,"byte_end":278750,"line_start":274,"line_end":274,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278751,"byte_end":278768,"line_start":275,"line_end":275,"column_start":1,"column_end":18}},{"value":"/ let result = string_cmp(\"rust\", |l, r| l.eq_ignore_ascii_case(&r))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278769,"byte_end":278839,"line_start":276,"line_end":276,"column_start":1,"column_end":71}},{"value":"/     .parse(\"RusT\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278840,"byte_end":278862,"line_start":277,"line_end":277,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278863,"byte_end":278885,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(\"rust\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278886,"byte_end":278921,"line_start":279,"line_end":279,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278922,"byte_end":278929,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/char.rs","byte_start":278930,"byte_end":278937,"line_start":281,"line_end":281,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1640},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"choice","qualname":"::parser::choice","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":9874},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1666},{"krate":0,"index":3979},{"krate":0,"index":4082},{"krate":0,"index":4109},{"krate":0,"index":4144},{"krate":0,"index":4243},{"krate":0,"index":4269},{"krate":0,"index":4303},{"krate":0,"index":4398},{"krate":0,"index":4423},{"krate":0,"index":4456},{"krate":0,"index":4547},{"krate":0,"index":4571},{"krate":0,"index":4603},{"krate":0,"index":4690},{"krate":0,"index":4713},{"krate":0,"index":4744},{"krate":0,"index":4827},{"krate":0,"index":4849},{"krate":0,"index":4879},{"krate":0,"index":4958},{"krate":0,"index":4979},{"krate":0,"index":5008},{"krate":0,"index":5083},{"krate":0,"index":5103},{"krate":0,"index":5131},{"krate":0,"index":5202},{"krate":0,"index":5221},{"krate":0,"index":5248},{"krate":0,"index":5315},{"krate":0,"index":5333},{"krate":0,"index":5359},{"krate":0,"index":5422},{"krate":0,"index":5439},{"krate":0,"index":5464},{"krate":0,"index":5523},{"krate":0,"index":5539},{"krate":0,"index":5563},{"krate":0,"index":5618},{"krate":0,"index":5633},{"krate":0,"index":5656},{"krate":0,"index":5707},{"krate":0,"index":5721},{"krate":0,"index":5743},{"krate":0,"index":5790},{"krate":0,"index":5803},{"krate":0,"index":5824},{"krate":0,"index":5867},{"krate":0,"index":5879},{"krate":0,"index":5899},{"krate":0,"index":5938},{"krate":0,"index":5949},{"krate":0,"index":5968},{"krate":0,"index":6003},{"krate":0,"index":6013},{"krate":0,"index":6031},{"krate":0,"index":6062},{"krate":0,"index":6071},{"krate":0,"index":6088},{"krate":0,"index":6115},{"krate":0,"index":6123},{"krate":0,"index":6139},{"krate":0,"index":6162},{"krate":0,"index":6169},{"krate":0,"index":6184},{"krate":0,"index":6203},{"krate":0,"index":6209},{"krate":0,"index":6223},{"krate":0,"index":6238},{"krate":0,"index":6243},{"krate":0,"index":6256},{"krate":0,"index":6267},{"krate":0,"index":6271},{"krate":0,"index":6283},{"krate":0,"index":6290},{"krate":0,"index":6293},{"krate":0,"index":6304},{"krate":0,"index":6313},{"krate":0,"index":6322},{"krate":0,"index":6331},{"krate":0,"index":6340},{"krate":0,"index":6349},{"krate":0,"index":6358},{"krate":0,"index":6367},{"krate":0,"index":6376},{"krate":0,"index":6385},{"krate":0,"index":6394},{"krate":0,"index":6403},{"krate":0,"index":6412},{"krate":0,"index":6421},{"krate":0,"index":6430},{"krate":0,"index":6439},{"krate":0,"index":6448},{"krate":0,"index":6457},{"krate":0,"index":6466},{"krate":0,"index":6475},{"krate":0,"index":6484},{"krate":0,"index":6493},{"krate":0,"index":6502},{"krate":0,"index":6511},{"krate":0,"index":6520},{"krate":0,"index":6529},{"krate":0,"index":6538},{"krate":0,"index":6547},{"krate":0,"index":6556},{"krate":0,"index":6565},{"krate":0,"index":6574},{"krate":0,"index":6583},{"krate":0,"index":6592},{"krate":0,"index":6667},{"krate":0,"index":6674},{"krate":0,"index":6671},{"krate":0,"index":1680},{"krate":0,"index":1688},{"krate":0,"index":1693},{"krate":0,"index":1704},{"krate":0,"index":6678},{"krate":0,"index":6687},{"krate":0,"index":6683},{"krate":0,"index":1707},{"krate":0,"index":1717},{"krate":0,"index":6692},{"krate":0,"index":6699},{"krate":0,"index":6696},{"krate":0,"index":1721},{"krate":0,"index":1728}],"decl_id":null,"docs":" Combinators which take one or more parsers and attempts to parse successfully with at least one\n of them.\n","sig":null,"attributes":[{"value":"/ Combinators which take one or more parsers and attempts to parse successfully with at least one","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":280393,"byte_end":280492,"line_start":1,"line_end":1,"column_start":1,"column_end":100}},{"value":"/ of them.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":280493,"byte_end":280505,"line_start":2,"line_end":2,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":1657},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282427,"byte_end":282439,"line_start":70,"line_end":70,"column_start":11,"column_end":23},"name":"ChoiceParser","qualname":"::parser::choice::ChoiceParser","value":"ChoiceParser<Input: Stream>","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1665}],"decl_id":null,"docs":" `ChoiceParser` represents a parser which may parse one of several different choices depending\n on the input.","sig":null,"attributes":[{"value":"/ `ChoiceParser` represents a parser which may parse one of several different choices depending","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282227,"byte_end":282324,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ on the input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282325,"byte_end":282342,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282343,"byte_end":282346,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This is an internal trait used to overload the `choice` function.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282347,"byte_end":282416,"line_start":69,"line_end":69,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":1659},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282466,"byte_end":282472,"line_start":71,"line_end":71,"column_start":10,"column_end":16},"name":"Output","qualname":"::parser::choice::ChoiceParser::Output","value":"type Output;","parent":{"krate":0,"index":1657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1660},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282483,"byte_end":282495,"line_start":72,"line_end":72,"column_start":10,"column_end":22},"name":"PartialState","qualname":"::parser::choice::ChoiceParser::PartialState","value":"type PartialState: Default;","parent":{"krate":0,"index":1657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282514,"byte_end":282525,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"parse_first","qualname":"::parser::choice::ChoiceParser::parse_first","value":"pub fn parse_first(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":1657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282687,"byte_end":282700,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parser::choice::ChoiceParser::parse_partial","value":"pub fn parse_partial(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":1657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":282862,"byte_end":282879,"line_start":86,"line_end":86,"column_start":8,"column_end":25},"name":"parse_mode_choice","qualname":"::parser::choice::ChoiceParser::parse_mode_choice","value":"pub fn parse_mode_choice<M>(&mut Self, M, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error> where M: ParseMode,\nSelf: Sized","parent":{"krate":0,"index":1657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":283113,"byte_end":283129,"line_start":96,"line_end":96,"column_start":8,"column_end":24},"name":"add_error_choice","qualname":"::parser::choice::ChoiceParser::add_error_choice","value":"pub fn add_error_choice(&mut Self, &mut Tracked<<Input as StreamOnce>::Error>)","parent":{"krate":0,"index":1657},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4007},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290033,"byte_end":290034,"line_start":303,"line_end":303,"column_start":22,"column_end":23},"name":"A","qualname":"::parser::choice::A::A","value":"A::A(A)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4010},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290035,"byte_end":290036,"line_start":303,"line_end":303,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::A::B","value":"A::B(B)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4013},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290037,"byte_end":290038,"line_start":303,"line_end":303,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::A::C","value":"A::C(C)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4016},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290039,"byte_end":290040,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::A::D","value":"A::D(D)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4019},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290041,"byte_end":290042,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::A::E","value":"A::E(E)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4022},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290043,"byte_end":290044,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::A::F","value":"A::F(F)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4025},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290045,"byte_end":290046,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::A::G","value":"A::G(G)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4028},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::A::H","value":"A::H(H)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4031},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::A::I","value":"A::I(I)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4034},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::A::J","value":"A::J(J)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4037},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::A::K","value":"A::K(K)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4040},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::A::L","value":"A::L(L)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4043},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::A::M","value":"A::M(M)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4046},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::A::N","value":"A::N(N)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4049},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::A::O","value":"A::O(O)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4052},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::A::P","value":"A::P(P)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4055},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::A::Q","value":"A::Q(Q)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4058},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::A::R","value":"A::R(R)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4061},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::A::S","value":"A::S(S)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4064},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::A::T","value":"A::T(T)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4067},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::A::U","value":"A::U(U)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4070},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::A::V","value":"A::V(V)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4073},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::A::X","value":"A::X(X)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4076},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::A::Y","value":"A::Y(Y)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4079},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::A::Z","value":"A::Z(Z)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3979},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290033,"byte_end":290034,"line_start":303,"line_end":303,"column_start":22,"column_end":23},"name":"A","qualname":"::parser::choice::A","value":"pub enum A<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V,\n           X, Y, Z> {\n    Peek,\n    A(A),\n    B(B),\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4007},{"krate":0,"index":4010},{"krate":0,"index":4013},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4067},{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4076},{"krate":0,"index":4079}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4171},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290035,"byte_end":290036,"line_start":303,"line_end":303,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::B::B","value":"B::B(B)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4174},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290037,"byte_end":290038,"line_start":303,"line_end":303,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::B::C","value":"B::C(C)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4177},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290039,"byte_end":290040,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::B::D","value":"B::D(D)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4180},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290041,"byte_end":290042,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::B::E","value":"B::E(E)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4183},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290043,"byte_end":290044,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::B::F","value":"B::F(F)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4186},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290045,"byte_end":290046,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::B::G","value":"B::G(G)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4189},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::B::H","value":"B::H(H)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4192},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::B::I","value":"B::I(I)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4195},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::B::J","value":"B::J(J)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4198},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::B::K","value":"B::K(K)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4201},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::B::L","value":"B::L(L)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4204},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::B::M","value":"B::M(M)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4207},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::B::N","value":"B::N(N)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4210},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::B::O","value":"B::O(O)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4213},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::B::P","value":"B::P(P)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4216},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::B::Q","value":"B::Q(Q)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4219},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::B::R","value":"B::R(R)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4222},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::B::S","value":"B::S(S)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4225},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::B::T","value":"B::T(T)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4228},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::B::U","value":"B::U(U)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4231},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::B::V","value":"B::V(V)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4234},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::B::X","value":"B::X(X)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4237},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::B::Y","value":"B::Y(Y)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4240},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::B::Z","value":"B::Z(Z)","parent":{"krate":0,"index":4144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4144},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290035,"byte_end":290036,"line_start":303,"line_end":303,"column_start":24,"column_end":25},"name":"B","qualname":"::parser::choice::B","value":"pub enum B<B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X,\n           Y, Z> {\n    Peek,\n    B(B),\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4174},{"krate":0,"index":4177},{"krate":0,"index":4180},{"krate":0,"index":4183},{"krate":0,"index":4186},{"krate":0,"index":4189},{"krate":0,"index":4192},{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4207},{"krate":0,"index":4210},{"krate":0,"index":4213},{"krate":0,"index":4216},{"krate":0,"index":4219},{"krate":0,"index":4222},{"krate":0,"index":4225},{"krate":0,"index":4228},{"krate":0,"index":4231},{"krate":0,"index":4234},{"krate":0,"index":4237},{"krate":0,"index":4240}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4329},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290037,"byte_end":290038,"line_start":303,"line_end":303,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::C::C","value":"C::C(C)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4332},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290039,"byte_end":290040,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::C::D","value":"C::D(D)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4335},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290041,"byte_end":290042,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::C::E","value":"C::E(E)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4338},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290043,"byte_end":290044,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::C::F","value":"C::F(F)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4341},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290045,"byte_end":290046,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::C::G","value":"C::G(G)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4344},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::C::H","value":"C::H(H)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4347},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::C::I","value":"C::I(I)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4350},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::C::J","value":"C::J(J)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4353},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::C::K","value":"C::K(K)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4356},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::C::L","value":"C::L(L)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4359},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::C::M","value":"C::M(M)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4362},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::C::N","value":"C::N(N)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4365},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::C::O","value":"C::O(O)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4368},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::C::P","value":"C::P(P)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4371},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::C::Q","value":"C::Q(Q)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4374},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::C::R","value":"C::R(R)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4377},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::C::S","value":"C::S(S)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4380},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::C::T","value":"C::T(T)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4383},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::C::U","value":"C::U(U)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4386},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::C::V","value":"C::V(V)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4389},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::C::X","value":"C::X(X)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4392},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::C::Y","value":"C::Y(Y)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4395},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::C::Z","value":"C::Z(Z)","parent":{"krate":0,"index":4303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4303},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290037,"byte_end":290038,"line_start":303,"line_end":303,"column_start":26,"column_end":27},"name":"C","qualname":"::parser::choice::C","value":"pub enum C<C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y,\n           Z> {\n    Peek,\n    C(C),\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4327},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4341},{"krate":0,"index":4344},{"krate":0,"index":4347},{"krate":0,"index":4350},{"krate":0,"index":4353},{"krate":0,"index":4356},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4365},{"krate":0,"index":4368},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4377},{"krate":0,"index":4380},{"krate":0,"index":4383},{"krate":0,"index":4386},{"krate":0,"index":4389},{"krate":0,"index":4392},{"krate":0,"index":4395}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4481},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290039,"byte_end":290040,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::D::D","value":"D::D(D)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4484},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290041,"byte_end":290042,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::D::E","value":"D::E(E)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4487},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290043,"byte_end":290044,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::D::F","value":"D::F(F)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4490},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290045,"byte_end":290046,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::D::G","value":"D::G(G)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4493},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::D::H","value":"D::H(H)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4496},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::D::I","value":"D::I(I)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4499},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::D::J","value":"D::J(J)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4502},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::D::K","value":"D::K(K)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4505},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::D::L","value":"D::L(L)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4508},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::D::M","value":"D::M(M)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4511},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::D::N","value":"D::N(N)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4514},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::D::O","value":"D::O(O)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4517},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::D::P","value":"D::P(P)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4520},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::D::Q","value":"D::Q(Q)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4523},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::D::R","value":"D::R(R)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4526},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::D::S","value":"D::S(S)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4529},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::D::T","value":"D::T(T)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4532},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::D::U","value":"D::U(U)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4535},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::D::V","value":"D::V(V)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4538},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::D::X","value":"D::X(X)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4541},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::D::Y","value":"D::Y(Y)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4544},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::D::Z","value":"D::Z(Z)","parent":{"krate":0,"index":4456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4456},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290039,"byte_end":290040,"line_start":303,"line_end":303,"column_start":28,"column_end":29},"name":"D","qualname":"::parser::choice::D","value":"pub enum D<D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    D(D),\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4484},{"krate":0,"index":4487},{"krate":0,"index":4490},{"krate":0,"index":4493},{"krate":0,"index":4496},{"krate":0,"index":4499},{"krate":0,"index":4502},{"krate":0,"index":4505},{"krate":0,"index":4508},{"krate":0,"index":4511},{"krate":0,"index":4514},{"krate":0,"index":4517},{"krate":0,"index":4520},{"krate":0,"index":4523},{"krate":0,"index":4526},{"krate":0,"index":4529},{"krate":0,"index":4532},{"krate":0,"index":4535},{"krate":0,"index":4538},{"krate":0,"index":4541},{"krate":0,"index":4544}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4627},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290041,"byte_end":290042,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::E::E","value":"E::E(E)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4630},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290043,"byte_end":290044,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::E::F","value":"E::F(F)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4633},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290045,"byte_end":290046,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::E::G","value":"E::G(G)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4636},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::E::H","value":"E::H(H)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4639},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::E::I","value":"E::I(I)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4642},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::E::J","value":"E::J(J)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4645},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::E::K","value":"E::K(K)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4648},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::E::L","value":"E::L(L)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4651},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::E::M","value":"E::M(M)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4654},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::E::N","value":"E::N(N)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4657},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::E::O","value":"E::O(O)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4660},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::E::P","value":"E::P(P)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4663},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::E::Q","value":"E::Q(Q)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4666},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::E::R","value":"E::R(R)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4669},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::E::S","value":"E::S(S)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4672},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::E::T","value":"E::T(T)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4675},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::E::U","value":"E::U(U)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4678},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::E::V","value":"E::V(V)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4681},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::E::X","value":"E::X(X)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4684},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::E::Y","value":"E::Y(Y)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4687},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::E::Z","value":"E::Z(Z)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4603},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290041,"byte_end":290042,"line_start":303,"line_end":303,"column_start":30,"column_end":31},"name":"E","qualname":"::parser::choice::E","value":"pub enum E<E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    E(E),\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4625},{"krate":0,"index":4627},{"krate":0,"index":4630},{"krate":0,"index":4633},{"krate":0,"index":4636},{"krate":0,"index":4639},{"krate":0,"index":4642},{"krate":0,"index":4645},{"krate":0,"index":4648},{"krate":0,"index":4651},{"krate":0,"index":4654},{"krate":0,"index":4657},{"krate":0,"index":4660},{"krate":0,"index":4663},{"krate":0,"index":4666},{"krate":0,"index":4669},{"krate":0,"index":4672},{"krate":0,"index":4675},{"krate":0,"index":4678},{"krate":0,"index":4681},{"krate":0,"index":4684},{"krate":0,"index":4687}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4767},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290043,"byte_end":290044,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::F::F","value":"F::F(F)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4770},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290045,"byte_end":290046,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::F::G","value":"F::G(G)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4773},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::F::H","value":"F::H(H)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4776},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::F::I","value":"F::I(I)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4779},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::F::J","value":"F::J(J)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4782},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::F::K","value":"F::K(K)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4785},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::F::L","value":"F::L(L)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4788},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::F::M","value":"F::M(M)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4791},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::F::N","value":"F::N(N)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4794},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::F::O","value":"F::O(O)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4797},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::F::P","value":"F::P(P)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4800},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::F::Q","value":"F::Q(Q)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4803},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::F::R","value":"F::R(R)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4806},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::F::S","value":"F::S(S)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4809},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::F::T","value":"F::T(T)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4812},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::F::U","value":"F::U(U)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4815},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::F::V","value":"F::V(V)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4818},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::F::X","value":"F::X(X)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4821},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::F::Y","value":"F::Y(Y)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4824},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::F::Z","value":"F::Z(Z)","parent":{"krate":0,"index":4744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4744},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290043,"byte_end":290044,"line_start":303,"line_end":303,"column_start":32,"column_end":33},"name":"F","qualname":"::parser::choice::F","value":"pub enum F<F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    F(F),\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4765},{"krate":0,"index":4767},{"krate":0,"index":4770},{"krate":0,"index":4773},{"krate":0,"index":4776},{"krate":0,"index":4779},{"krate":0,"index":4782},{"krate":0,"index":4785},{"krate":0,"index":4788},{"krate":0,"index":4791},{"krate":0,"index":4794},{"krate":0,"index":4797},{"krate":0,"index":4800},{"krate":0,"index":4803},{"krate":0,"index":4806},{"krate":0,"index":4809},{"krate":0,"index":4812},{"krate":0,"index":4815},{"krate":0,"index":4818},{"krate":0,"index":4821},{"krate":0,"index":4824}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4901},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290045,"byte_end":290046,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::G::G","value":"G::G(G)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4904},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::G::H","value":"G::H(H)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4907},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::G::I","value":"G::I(I)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4910},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::G::J","value":"G::J(J)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4913},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::G::K","value":"G::K(K)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4916},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::G::L","value":"G::L(L)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4919},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::G::M","value":"G::M(M)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4922},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::G::N","value":"G::N(N)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4925},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::G::O","value":"G::O(O)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4928},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::G::P","value":"G::P(P)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4931},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::G::Q","value":"G::Q(Q)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4934},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::G::R","value":"G::R(R)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4937},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::G::S","value":"G::S(S)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4940},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::G::T","value":"G::T(T)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4943},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::G::U","value":"G::U(U)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4946},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::G::V","value":"G::V(V)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4949},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::G::X","value":"G::X(X)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4952},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::G::Y","value":"G::Y(Y)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4955},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::G::Z","value":"G::Z(Z)","parent":{"krate":0,"index":4879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4879},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290045,"byte_end":290046,"line_start":303,"line_end":303,"column_start":34,"column_end":35},"name":"G","qualname":"::parser::choice::G","value":"pub enum G<G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    G(G),\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":4899},{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4907},{"krate":0,"index":4910},{"krate":0,"index":4913},{"krate":0,"index":4916},{"krate":0,"index":4919},{"krate":0,"index":4922},{"krate":0,"index":4925},{"krate":0,"index":4928},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4937},{"krate":0,"index":4940},{"krate":0,"index":4943},{"krate":0,"index":4946},{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4955}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5029},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::H::H","value":"H::H(H)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5032},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::H::I","value":"H::I(I)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5035},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::H::J","value":"H::J(J)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5038},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::H::K","value":"H::K(K)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5041},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::H::L","value":"H::L(L)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5044},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::H::M","value":"H::M(M)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5047},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::H::N","value":"H::N(N)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5050},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::H::O","value":"H::O(O)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5053},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::H::P","value":"H::P(P)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5056},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::H::Q","value":"H::Q(Q)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5059},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::H::R","value":"H::R(R)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5062},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::H::S","value":"H::S(S)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5065},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::H::T","value":"H::T(T)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5068},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::H::U","value":"H::U(U)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5071},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::H::V","value":"H::V(V)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5074},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::H::X","value":"H::X(X)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5077},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::H::Y","value":"H::Y(Y)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5080},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::H::Z","value":"H::Z(Z)","parent":{"krate":0,"index":5008},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5008},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290047,"byte_end":290048,"line_start":303,"line_end":303,"column_start":36,"column_end":37},"name":"H","qualname":"::parser::choice::H","value":"pub enum H<H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    H(H),\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5029},{"krate":0,"index":5032},{"krate":0,"index":5035},{"krate":0,"index":5038},{"krate":0,"index":5041},{"krate":0,"index":5044},{"krate":0,"index":5047},{"krate":0,"index":5050},{"krate":0,"index":5053},{"krate":0,"index":5056},{"krate":0,"index":5059},{"krate":0,"index":5062},{"krate":0,"index":5065},{"krate":0,"index":5068},{"krate":0,"index":5071},{"krate":0,"index":5074},{"krate":0,"index":5077},{"krate":0,"index":5080}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5151},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::I::I","value":"I::I(I)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5154},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::I::J","value":"I::J(J)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5157},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::I::K","value":"I::K(K)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5160},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::I::L","value":"I::L(L)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5163},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::I::M","value":"I::M(M)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5166},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::I::N","value":"I::N(N)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5169},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::I::O","value":"I::O(O)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5172},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::I::P","value":"I::P(P)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5175},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::I::Q","value":"I::Q(Q)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5178},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::I::R","value":"I::R(R)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5181},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::I::S","value":"I::S(S)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5184},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::I::T","value":"I::T(T)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5187},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::I::U","value":"I::U(U)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5190},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::I::V","value":"I::V(V)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5193},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::I::X","value":"I::X(X)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5196},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::I::Y","value":"I::Y(Y)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5199},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::I::Z","value":"I::Z(Z)","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5131},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290049,"byte_end":290050,"line_start":303,"line_end":303,"column_start":38,"column_end":39},"name":"I","qualname":"::parser::choice::I","value":"pub enum I<I, J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    I(I),\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5149},{"krate":0,"index":5151},{"krate":0,"index":5154},{"krate":0,"index":5157},{"krate":0,"index":5160},{"krate":0,"index":5163},{"krate":0,"index":5166},{"krate":0,"index":5169},{"krate":0,"index":5172},{"krate":0,"index":5175},{"krate":0,"index":5178},{"krate":0,"index":5181},{"krate":0,"index":5184},{"krate":0,"index":5187},{"krate":0,"index":5190},{"krate":0,"index":5193},{"krate":0,"index":5196},{"krate":0,"index":5199}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5267},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::J::J","value":"J::J(J)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5270},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::J::K","value":"J::K(K)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5273},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::J::L","value":"J::L(L)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5276},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::J::M","value":"J::M(M)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5279},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::J::N","value":"J::N(N)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5282},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::J::O","value":"J::O(O)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5285},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::J::P","value":"J::P(P)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5288},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::J::Q","value":"J::Q(Q)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5291},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::J::R","value":"J::R(R)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5294},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::J::S","value":"J::S(S)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5297},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::J::T","value":"J::T(T)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5300},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::J::U","value":"J::U(U)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5303},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::J::V","value":"J::V(V)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5306},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::J::X","value":"J::X(X)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5309},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::J::Y","value":"J::Y(Y)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5312},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::J::Z","value":"J::Z(Z)","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5248},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290051,"byte_end":290052,"line_start":303,"line_end":303,"column_start":40,"column_end":41},"name":"J","qualname":"::parser::choice::J","value":"pub enum J<J, K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    J(J),\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5265},{"krate":0,"index":5267},{"krate":0,"index":5270},{"krate":0,"index":5273},{"krate":0,"index":5276},{"krate":0,"index":5279},{"krate":0,"index":5282},{"krate":0,"index":5285},{"krate":0,"index":5288},{"krate":0,"index":5291},{"krate":0,"index":5294},{"krate":0,"index":5297},{"krate":0,"index":5300},{"krate":0,"index":5303},{"krate":0,"index":5306},{"krate":0,"index":5309},{"krate":0,"index":5312}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5377},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::K::K","value":"K::K(K)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5380},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::K::L","value":"K::L(L)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5383},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::K::M","value":"K::M(M)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5386},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::K::N","value":"K::N(N)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5389},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::K::O","value":"K::O(O)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5392},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::K::P","value":"K::P(P)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5395},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::K::Q","value":"K::Q(Q)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5398},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::K::R","value":"K::R(R)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5401},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::K::S","value":"K::S(S)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5404},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::K::T","value":"K::T(T)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5407},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::K::U","value":"K::U(U)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5410},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::K::V","value":"K::V(V)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5413},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::K::X","value":"K::X(X)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5416},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::K::Y","value":"K::Y(Y)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5419},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::K::Z","value":"K::Z(Z)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5359},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290053,"byte_end":290054,"line_start":303,"line_end":303,"column_start":42,"column_end":43},"name":"K","qualname":"::parser::choice::K","value":"pub enum K<K, L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    K(K),\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5375},{"krate":0,"index":5377},{"krate":0,"index":5380},{"krate":0,"index":5383},{"krate":0,"index":5386},{"krate":0,"index":5389},{"krate":0,"index":5392},{"krate":0,"index":5395},{"krate":0,"index":5398},{"krate":0,"index":5401},{"krate":0,"index":5404},{"krate":0,"index":5407},{"krate":0,"index":5410},{"krate":0,"index":5413},{"krate":0,"index":5416},{"krate":0,"index":5419}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5481},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::L::L","value":"L::L(L)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5484},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::L::M","value":"L::M(M)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5487},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::L::N","value":"L::N(N)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5490},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::L::O","value":"L::O(O)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5493},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::L::P","value":"L::P(P)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5496},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::L::Q","value":"L::Q(Q)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5499},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::L::R","value":"L::R(R)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5502},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::L::S","value":"L::S(S)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5505},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::L::T","value":"L::T(T)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5508},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::L::U","value":"L::U(U)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5511},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::L::V","value":"L::V(V)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5514},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::L::X","value":"L::X(X)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5517},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::L::Y","value":"L::Y(Y)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5520},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::L::Z","value":"L::Z(Z)","parent":{"krate":0,"index":5464},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5464},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290055,"byte_end":290056,"line_start":303,"line_end":303,"column_start":44,"column_end":45},"name":"L","qualname":"::parser::choice::L","value":"pub enum L<L, M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    L(L),\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5481},{"krate":0,"index":5484},{"krate":0,"index":5487},{"krate":0,"index":5490},{"krate":0,"index":5493},{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5502},{"krate":0,"index":5505},{"krate":0,"index":5508},{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":5517},{"krate":0,"index":5520}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5579},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::M::M","value":"M::M(M)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5582},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::M::N","value":"M::N(N)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5585},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::M::O","value":"M::O(O)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5588},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::M::P","value":"M::P(P)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5591},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::M::Q","value":"M::Q(Q)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5594},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::M::R","value":"M::R(R)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5597},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::M::S","value":"M::S(S)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5600},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::M::T","value":"M::T(T)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5603},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::M::U","value":"M::U(U)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5606},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::M::V","value":"M::V(V)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5609},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::M::X","value":"M::X(X)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5612},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::M::Y","value":"M::Y(Y)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5615},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::M::Z","value":"M::Z(Z)","parent":{"krate":0,"index":5563},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5563},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290057,"byte_end":290058,"line_start":303,"line_end":303,"column_start":46,"column_end":47},"name":"M","qualname":"::parser::choice::M","value":"pub enum M<M, N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    M(M),\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5577},{"krate":0,"index":5579},{"krate":0,"index":5582},{"krate":0,"index":5585},{"krate":0,"index":5588},{"krate":0,"index":5591},{"krate":0,"index":5594},{"krate":0,"index":5597},{"krate":0,"index":5600},{"krate":0,"index":5603},{"krate":0,"index":5606},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5615}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5671},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::N::N","value":"N::N(N)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5674},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::N::O","value":"N::O(O)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5677},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::N::P","value":"N::P(P)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5680},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::N::Q","value":"N::Q(Q)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5683},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::N::R","value":"N::R(R)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5686},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::N::S","value":"N::S(S)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5689},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::N::T","value":"N::T(T)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5692},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::N::U","value":"N::U(U)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5695},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::N::V","value":"N::V(V)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5698},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::N::X","value":"N::X(X)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5701},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::N::Y","value":"N::Y(Y)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5704},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::N::Z","value":"N::Z(Z)","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5656},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290059,"byte_end":290060,"line_start":303,"line_end":303,"column_start":48,"column_end":49},"name":"N","qualname":"::parser::choice::N","value":"pub enum N<N, O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    N(N),\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5669},{"krate":0,"index":5671},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5689},{"krate":0,"index":5692},{"krate":0,"index":5695},{"krate":0,"index":5698},{"krate":0,"index":5701},{"krate":0,"index":5704}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5757},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::O::O","value":"O::O(O)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5760},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::O::P","value":"O::P(P)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5763},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::O::Q","value":"O::Q(Q)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5766},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::O::R","value":"O::R(R)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5769},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::O::S","value":"O::S(S)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5772},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::O::T","value":"O::T(T)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5775},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::O::U","value":"O::U(U)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5778},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::O::V","value":"O::V(V)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5781},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::O::X","value":"O::X(X)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5784},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::O::Y","value":"O::Y(Y)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5787},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::O::Z","value":"O::Z(Z)","parent":{"krate":0,"index":5743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5743},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290061,"byte_end":290062,"line_start":303,"line_end":303,"column_start":50,"column_end":51},"name":"O","qualname":"::parser::choice::O","value":"pub enum O<O, P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    O(O),\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5755},{"krate":0,"index":5757},{"krate":0,"index":5760},{"krate":0,"index":5763},{"krate":0,"index":5766},{"krate":0,"index":5769},{"krate":0,"index":5772},{"krate":0,"index":5775},{"krate":0,"index":5778},{"krate":0,"index":5781},{"krate":0,"index":5784},{"krate":0,"index":5787}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5837},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::P::P","value":"P::P(P)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5840},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::P::Q","value":"P::Q(Q)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5843},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::P::R","value":"P::R(R)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5846},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::P::S","value":"P::S(S)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5849},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::P::T","value":"P::T(T)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5852},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::P::U","value":"P::U(U)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5855},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::P::V","value":"P::V(V)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5858},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::P::X","value":"P::X(X)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5861},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::P::Y","value":"P::Y(Y)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5864},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::P::Z","value":"P::Z(Z)","parent":{"krate":0,"index":5824},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5824},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290063,"byte_end":290064,"line_start":303,"line_end":303,"column_start":52,"column_end":53},"name":"P","qualname":"::parser::choice::P","value":"pub enum P<P, Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    P(P),\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5835},{"krate":0,"index":5837},{"krate":0,"index":5840},{"krate":0,"index":5843},{"krate":0,"index":5846},{"krate":0,"index":5849},{"krate":0,"index":5852},{"krate":0,"index":5855},{"krate":0,"index":5858},{"krate":0,"index":5861},{"krate":0,"index":5864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5911},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::Q::Q","value":"Q::Q(Q)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5914},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::Q::R","value":"Q::R(R)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5917},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::Q::S","value":"Q::S(S)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5920},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::Q::T","value":"Q::T(T)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5923},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::Q::U","value":"Q::U(U)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5926},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::Q::V","value":"Q::V(V)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5929},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::Q::X","value":"Q::X(X)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5932},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Q::Y","value":"Q::Y(Y)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5935},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Q::Z","value":"Q::Z(Z)","parent":{"krate":0,"index":5899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5899},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290065,"byte_end":290066,"line_start":303,"line_end":303,"column_start":54,"column_end":55},"name":"Q","qualname":"::parser::choice::Q","value":"pub enum Q<Q, R, S, T, U, V, X, Y, Z> {\n    Peek,\n    Q(Q),\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5909},{"krate":0,"index":5911},{"krate":0,"index":5914},{"krate":0,"index":5917},{"krate":0,"index":5920},{"krate":0,"index":5923},{"krate":0,"index":5926},{"krate":0,"index":5929},{"krate":0,"index":5932},{"krate":0,"index":5935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5979},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::R::R","value":"R::R(R)","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5982},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::R::S","value":"R::S(S)","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5985},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::R::T","value":"R::T(T)","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5988},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::R::U","value":"R::U(U)","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5991},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::R::V","value":"R::V(V)","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5994},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::R::X","value":"R::X(X)","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5997},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::R::Y","value":"R::Y(Y)","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6000},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::R::Z","value":"R::Z(Z)","parent":{"krate":0,"index":5968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5968},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290067,"byte_end":290068,"line_start":303,"line_end":303,"column_start":56,"column_end":57},"name":"R","qualname":"::parser::choice::R","value":"pub enum R<R, S, T, U, V, X, Y, Z> {\n    Peek,\n    R(R),\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":5977},{"krate":0,"index":5979},{"krate":0,"index":5982},{"krate":0,"index":5985},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6000}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6041},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::S::S","value":"S::S(S)","parent":{"krate":0,"index":6031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6044},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::S::T","value":"S::T(T)","parent":{"krate":0,"index":6031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6047},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::S::U","value":"S::U(U)","parent":{"krate":0,"index":6031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6050},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::S::V","value":"S::V(V)","parent":{"krate":0,"index":6031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6053},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::S::X","value":"S::X(X)","parent":{"krate":0,"index":6031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6056},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::S::Y","value":"S::Y(Y)","parent":{"krate":0,"index":6031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6059},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::S::Z","value":"S::Z(Z)","parent":{"krate":0,"index":6031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6031},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290069,"byte_end":290070,"line_start":303,"line_end":303,"column_start":58,"column_end":59},"name":"S","qualname":"::parser::choice::S","value":"pub enum S<S, T, U, V, X, Y, Z> {\n    Peek,\n    S(S),\n    T(T),\n    U(U),\n    V(V),\n    X(X),\n    Y(Y),\n    Z(Z),\n}","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6041},{"krate":0,"index":6044},{"krate":0,"index":6047},{"krate":0,"index":6050},{"krate":0,"index":6053},{"krate":0,"index":6056},{"krate":0,"index":6059}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6097},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::T::T","value":"T::T(T)","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6100},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::T::U","value":"T::U(U)","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6103},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::T::V","value":"T::V(V)","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6106},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::T::X","value":"T::X(X)","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6109},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::T::Y","value":"T::Y(Y)","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6112},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::T::Z","value":"T::Z(Z)","parent":{"krate":0,"index":6088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6088},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290071,"byte_end":290072,"line_start":303,"line_end":303,"column_start":60,"column_end":61},"name":"T","qualname":"::parser::choice::T","value":"pub enum T<T, U, V, X, Y, Z> { Peek, T(T), U(U), V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6095},{"krate":0,"index":6097},{"krate":0,"index":6100},{"krate":0,"index":6103},{"krate":0,"index":6106},{"krate":0,"index":6109},{"krate":0,"index":6112}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6147},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::U::U","value":"U::U(U)","parent":{"krate":0,"index":6139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6150},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::U::V","value":"U::V(V)","parent":{"krate":0,"index":6139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6153},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::U::X","value":"U::X(X)","parent":{"krate":0,"index":6139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6156},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::U::Y","value":"U::Y(Y)","parent":{"krate":0,"index":6139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6159},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::U::Z","value":"U::Z(Z)","parent":{"krate":0,"index":6139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6139},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290073,"byte_end":290074,"line_start":303,"line_end":303,"column_start":62,"column_end":63},"name":"U","qualname":"::parser::choice::U","value":"pub enum U<U, V, X, Y, Z> { Peek, U(U), V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6145},{"krate":0,"index":6147},{"krate":0,"index":6150},{"krate":0,"index":6153},{"krate":0,"index":6156},{"krate":0,"index":6159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6191},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::V::V","value":"V::V(V)","parent":{"krate":0,"index":6184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6194},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::V::X","value":"V::X(X)","parent":{"krate":0,"index":6184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6197},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::V::Y","value":"V::Y(Y)","parent":{"krate":0,"index":6184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6200},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::V::Z","value":"V::Z(Z)","parent":{"krate":0,"index":6184},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6184},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290075,"byte_end":290076,"line_start":303,"line_end":303,"column_start":64,"column_end":65},"name":"V","qualname":"::parser::choice::V","value":"pub enum V<V, X, Y, Z> { Peek, V(V), X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6189},{"krate":0,"index":6191},{"krate":0,"index":6194},{"krate":0,"index":6197},{"krate":0,"index":6200}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6229},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::X::X","value":"X::X(X)","parent":{"krate":0,"index":6223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6232},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::X::Y","value":"X::Y(Y)","parent":{"krate":0,"index":6223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6235},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::X::Z","value":"X::Z(Z)","parent":{"krate":0,"index":6223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6223},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290077,"byte_end":290078,"line_start":303,"line_end":303,"column_start":66,"column_end":67},"name":"X","qualname":"::parser::choice::X","value":"pub enum X<X, Y, Z> { Peek, X(X), Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6227},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6235}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6261},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Y::Y","value":"Y::Y(Y)","parent":{"krate":0,"index":6256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6264},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Y::Z","value":"Y::Z(Z)","parent":{"krate":0,"index":6256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6256},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290079,"byte_end":290080,"line_start":303,"line_end":303,"column_start":68,"column_end":69},"name":"Y","qualname":"::parser::choice::Y","value":"pub enum Y<Y, Z> { Peek, Y(Y), Z(Z), }","parent":null,"children":[{"krate":0,"index":6259},{"krate":0,"index":6261},{"krate":0,"index":6264}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6287},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Z::Z","value":"Z::Z(Z)","parent":{"krate":0,"index":6283},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6283},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":290081,"byte_end":290082,"line_start":303,"line_end":303,"column_start":70,"column_end":71},"name":"Z","qualname":"::parser::choice::Z","value":"pub enum Z<Z> { Peek, Z(Z), }","parent":null,"children":[{"krate":0,"index":6285},{"krate":0,"index":6287}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6667},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":291397,"byte_end":291403,"line_start":354,"line_end":354,"column_start":12,"column_end":18},"name":"Choice","qualname":"::parser::choice::Choice","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1704},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":298031,"byte_end":298037,"line_start":552,"line_end":552,"column_start":8,"column_end":14},"name":"choice","qualname":"::parser::choice::choice","value":"pub fn choice<Input, P>(P) -> Choice<P> where Input: Stream,\nP: ChoiceParser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Takes a tuple, a slice or an array of parsers and tries to apply them each in order.\n Fails if all the parsers fails or if an applied parser consumes input before failing.","sig":null,"attributes":[{"value":"/ Takes a tuple, a slice or an array of parsers and tries to apply them each in order.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296575,"byte_end":296663,"line_start":521,"line_end":521,"column_start":1,"column_end":89}},{"value":"/ Fails if all the parsers fails or if an applied parser consumes input before failing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296664,"byte_end":296753,"line_start":522,"line_end":522,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296754,"byte_end":296757,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296758,"byte_end":296765,"line_start":524,"line_end":524,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296766,"byte_end":296793,"line_start":525,"line_end":525,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296794,"byte_end":296815,"line_start":526,"line_end":526,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::{digit, string};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296816,"byte_end":296865,"line_start":527,"line_end":527,"column_start":1,"column_end":50}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296866,"byte_end":296883,"line_start":528,"line_end":528,"column_start":1,"column_end":18}},{"value":"/ // `choice` is overloaded on tuples so that different types of parsers can be used","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296884,"byte_end":296970,"line_start":529,"line_end":529,"column_start":1,"column_end":87}},{"value":"/ // (each parser must still have the same input and output types)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":296971,"byte_end":297039,"line_start":530,"line_end":530,"column_start":1,"column_end":69}},{"value":"/ let mut parser = choice((","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297040,"byte_end":297069,"line_start":531,"line_end":531,"column_start":1,"column_end":30}},{"value":"/     string(\"Apple\").map(|s| s.to_string()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297070,"byte_end":297117,"line_start":532,"line_end":532,"column_start":1,"column_end":48}},{"value":"/     many1(digit()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297118,"byte_end":297141,"line_start":533,"line_end":533,"column_start":1,"column_end":24}},{"value":"/     string(\"Orange\").map(|s| s.to_string()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297142,"byte_end":297190,"line_start":534,"line_end":534,"column_start":1,"column_end":49}},{"value":"/ ));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297191,"byte_end":297198,"line_start":535,"line_end":535,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(parser.parse(\"1234\"), Ok((\"1234\".to_string(), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297199,"byte_end":297266,"line_start":536,"line_end":536,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(parser.parse(\"Orangexx\"), Ok((\"Orange\".to_string(), \"xx\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297267,"byte_end":297342,"line_start":537,"line_end":537,"column_start":1,"column_end":76}},{"value":"/ assert!(parser.parse(\"Appl\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297343,"byte_end":297386,"line_start":538,"line_end":538,"column_start":1,"column_end":44}},{"value":"/ assert!(parser.parse(\"Pear\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297387,"byte_end":297430,"line_start":539,"line_end":539,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297431,"byte_end":297434,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ // If arrays or slices are used then all parsers must have the same type","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297435,"byte_end":297511,"line_start":541,"line_end":541,"column_start":1,"column_end":77}},{"value":"/ // (`string` in this case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297512,"byte_end":297542,"line_start":542,"line_end":542,"column_start":1,"column_end":31}},{"value":"/ let mut parser2 = choice([string(\"one\"), string(\"two\"), string(\"three\")]);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297543,"byte_end":297621,"line_start":543,"line_end":543,"column_start":1,"column_end":79}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297622,"byte_end":297696,"line_start":544,"line_end":544,"column_start":1,"column_end":75}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297697,"byte_end":297742,"line_start":545,"line_end":545,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297743,"byte_end":297746,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not committed any input","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297747,"byte_end":297842,"line_start":547,"line_end":547,"column_start":1,"column_end":96}},{"value":"/ let mut parser3 = choice([attempt(string(\"one\")), attempt(string(\"two\")), attempt(string(\"three\"))]);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297843,"byte_end":297948,"line_start":548,"line_end":548,"column_start":1,"column_end":106}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":297949,"byte_end":298007,"line_start":549,"line_end":549,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":298008,"byte_end":298015,"line_start":550,"line_end":550,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":298016,"byte_end":298023,"line_start":551,"line_end":551,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6678},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":298175,"byte_end":298177,"line_start":561,"line_end":561,"column_start":12,"column_end":14},"name":"Or","qualname":"::parser::choice::Or","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1717},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300149,"byte_end":300151,"line_start":624,"line_end":624,"column_start":8,"column_end":10},"name":"or","qualname":"::parser::choice::or","value":"pub fn or<Input, P1, P2>(P1, P2) -> Or<P1, P2> where Input: Stream,\nP1: Parser<Input>, P2: Parser<Input, Output = P1::Output>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.or(p2)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.or(p2)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":298973,"byte_end":299005,"line_start":593,"line_end":593,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299006,"byte_end":299009,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ If you are looking to chain 3 or more parsers using `or` you may consider using the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299010,"byte_end":299097,"line_start":595,"line_end":595,"column_start":1,"column_end":88}},{"value":"/ [`choice!`] macro instead, which can be clearer and may result in a faster parser.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299098,"byte_end":299184,"line_start":596,"line_end":596,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299185,"byte_end":299188,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299189,"byte_end":299196,"line_start":598,"line_end":598,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299197,"byte_end":299224,"line_start":599,"line_end":599,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299225,"byte_end":299246,"line_start":600,"line_end":600,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::choice::or;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299247,"byte_end":299285,"line_start":601,"line_end":601,"column_start":1,"column_end":39}},{"value":"/ # use combine::parser::char::{digit, string};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299286,"byte_end":299335,"line_start":602,"line_end":602,"column_start":1,"column_end":50}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299336,"byte_end":299353,"line_start":603,"line_end":603,"column_start":1,"column_end":18}},{"value":"/ let mut parser = or(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299354,"byte_end":299378,"line_start":604,"line_end":604,"column_start":1,"column_end":25}},{"value":"/     string(\"let\"),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299379,"byte_end":299401,"line_start":605,"line_end":605,"column_start":1,"column_end":23}},{"value":"/     or(digit().map(|_| \"digit\"), string(\"led\")),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299402,"byte_end":299454,"line_start":606,"line_end":606,"column_start":1,"column_end":53}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299455,"byte_end":299461,"line_start":607,"line_end":607,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(parser.parse(\"let\"), Ok((\"let\", \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299462,"byte_end":299515,"line_start":608,"line_end":608,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(parser.parse(\"1\"), Ok((\"digit\", \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299516,"byte_end":299569,"line_start":609,"line_end":609,"column_start":1,"column_end":54}},{"value":"/ assert!(parser.parse(\"led\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299570,"byte_end":299612,"line_start":610,"line_end":610,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299613,"byte_end":299616,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ let mut parser2 = or(string(\"two\"), string(\"three\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299617,"byte_end":299674,"line_start":612,"line_end":612,"column_start":1,"column_end":58}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299675,"byte_end":299749,"line_start":613,"line_end":613,"column_start":1,"column_end":75}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299750,"byte_end":299795,"line_start":614,"line_end":614,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299796,"byte_end":299799,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not committed any input","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299800,"byte_end":299895,"line_start":616,"line_end":616,"column_start":1,"column_end":96}},{"value":"/ let mut parser3 = or(attempt(string(\"two\")), attempt(string(\"three\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299896,"byte_end":299971,"line_start":617,"line_end":617,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":299972,"byte_end":300030,"line_start":618,"line_end":618,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300031,"byte_end":300038,"line_start":619,"line_end":619,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300039,"byte_end":300046,"line_start":620,"line_end":620,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300047,"byte_end":300050,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ [`choice!`]: ../../macro.choice.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300051,"byte_end":300091,"line_start":622,"line_end":622,"column_start":1,"column_end":41}},{"value":"/ [`p1.or(p2)`]: ../trait.Parser.html#method.or","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300092,"byte_end":300141,"line_start":623,"line_end":623,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6692},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300353,"byte_end":300361,"line_start":634,"line_end":634,"column_start":12,"column_end":20},"name":"Optional","qualname":"::parser::choice::Optional","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1728},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301777,"byte_end":301785,"line_start":683,"line_end":683,"column_start":8,"column_end":16},"name":"optional","qualname":"::parser::choice::optional","value":"pub fn optional<Input, P>(P) -> Optional<P> where Input: Stream,\nP: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` and outputs `Some(value)` if it succeeds, `None` if it fails without\n consuming any input. Fails if `parser` fails after having committed some input.","sig":null,"attributes":[{"value":"/ Parses `parser` and outputs `Some(value)` if it succeeds, `None` if it fails without","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301244,"byte_end":301332,"line_start":669,"line_end":669,"column_start":1,"column_end":89}},{"value":"/ consuming any input. Fails if `parser` fails after having committed some input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301333,"byte_end":301416,"line_start":670,"line_end":670,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301417,"byte_end":301420,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301421,"byte_end":301428,"line_start":672,"line_end":672,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301429,"byte_end":301456,"line_start":673,"line_end":673,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301457,"byte_end":301478,"line_start":674,"line_end":674,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301479,"byte_end":301519,"line_start":675,"line_end":675,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301520,"byte_end":301537,"line_start":676,"line_end":676,"column_start":1,"column_end":18}},{"value":"/ let mut parser = optional(string(\"hello\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301538,"byte_end":301585,"line_start":677,"line_end":677,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(parser.parse(\"hello\"), Ok((Some(\"hello\"), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301586,"byte_end":301649,"line_start":678,"line_end":678,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(parser.parse(\"world\"), Ok((None, \"world\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301650,"byte_end":301709,"line_start":679,"line_end":679,"column_start":1,"column_end":60}},{"value":"/ assert!(parser.parse(\"heya\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301710,"byte_end":301753,"line_start":680,"line_end":680,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301754,"byte_end":301761,"line_start":681,"line_end":681,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":301762,"byte_end":301769,"line_start":682,"line_end":682,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1735},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinator","qualname":"::parser::combinator","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":9896},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":6705},{"krate":0,"index":6712},{"krate":0,"index":6709},{"krate":0,"index":1760},{"krate":0,"index":1770},{"krate":0,"index":6717},{"krate":0,"index":6724},{"krate":0,"index":6721},{"krate":0,"index":1773},{"krate":0,"index":1784},{"krate":0,"index":6731},{"krate":0,"index":6738},{"krate":0,"index":6735},{"krate":0,"index":1787},{"krate":0,"index":1794},{"krate":0,"index":6743},{"krate":0,"index":6753},{"krate":0,"index":6749},{"krate":0,"index":1797},{"krate":0,"index":1807},{"krate":0,"index":6761},{"krate":0,"index":6771},{"krate":0,"index":6767},{"krate":0,"index":1812},{"krate":0,"index":1822},{"krate":0,"index":6779},{"krate":0,"index":6789},{"krate":0,"index":6785},{"krate":0,"index":1827},{"krate":0,"index":1837},{"krate":0,"index":6797},{"krate":0,"index":6807},{"krate":0,"index":6803},{"krate":0,"index":1842},{"krate":0,"index":1852},{"krate":0,"index":6815},{"krate":0,"index":6825},{"krate":0,"index":6821},{"krate":0,"index":1858},{"krate":0,"index":1863},{"krate":0,"index":1872},{"krate":0,"index":1876},{"krate":0,"index":1885},{"krate":0,"index":1895},{"krate":0,"index":1899},{"krate":0,"index":1907},{"krate":0,"index":6837},{"krate":0,"index":6844},{"krate":0,"index":6841},{"krate":0,"index":1910},{"krate":0,"index":1920},{"krate":0,"index":6851},{"krate":0,"index":6854},{"krate":0,"index":1923},{"krate":0,"index":1927},{"krate":0,"index":1935},{"krate":0,"index":6861},{"krate":0,"index":6864},{"krate":0,"index":1938},{"krate":0,"index":1942},{"krate":0,"index":1950},{"krate":0,"index":6871},{"krate":0,"index":6874},{"krate":0,"index":1953},{"krate":0,"index":1957},{"krate":0,"index":1965},{"krate":0,"index":6881},{"krate":0,"index":6888},{"krate":0,"index":6885},{"krate":0,"index":1968},{"krate":0,"index":1983},{"krate":0,"index":6892},{"krate":0,"index":6902},{"krate":0,"index":6898},{"krate":0,"index":1987},{"krate":0,"index":1992},{"krate":0,"index":2003},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":6907},{"krate":0,"index":6913},{"krate":0,"index":6929},{"krate":0,"index":6938},{"krate":0,"index":6952},{"krate":0,"index":6946},{"krate":0,"index":2035},{"krate":0,"index":2053},{"krate":0,"index":2057},{"krate":0,"index":2063},{"krate":0,"index":2070},{"krate":0,"index":2081},{"krate":0,"index":2087},{"krate":0,"index":2094},{"krate":0,"index":6961},{"krate":0,"index":6965},{"krate":0,"index":2100},{"krate":0,"index":2109}],"decl_id":null,"docs":" Various combinators which do not fit anywhere else.\n","sig":null,"attributes":[{"value":"/ Various combinators which do not fit anywhere else.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":307351,"byte_end":307406,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":6705},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":307749,"byte_end":307762,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"NotFollowedBy","qualname":"::parser::combinator::NotFollowedBy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1770},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309197,"byte_end":309212,"line_start":70,"line_end":70,"column_start":8,"column_end":23},"name":"not_followed_by","qualname":"::parser::combinator::not_followed_by","value":"pub fn not_followed_by<Input, P>(P) -> NotFollowedBy<P> where Input: Stream,\nP: Parser<Input>,\nP::Output: Into<Info<<Input as StreamOnce>::Token,\n                     <Input as StreamOnce>::Range, &'static str>>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if `parser` fails.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Succeeds only if `parser` fails.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":308818,"byte_end":308854,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":308855,"byte_end":308884,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":308885,"byte_end":308888,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":308889,"byte_end":308896,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":308897,"byte_end":308924,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":308925,"byte_end":308946,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::{alpha_num, string};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":308947,"byte_end":309000,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309001,"byte_end":309018,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/ let result = string(\"let\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309019,"byte_end":309049,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     .skip(not_followed_by(alpha_num()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309050,"byte_end":309093,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/     .parse(\"letx\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309094,"byte_end":309116,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309117,"byte_end":309139,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309140,"byte_end":309169,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309170,"byte_end":309173,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309174,"byte_end":309181,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309182,"byte_end":309189,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6717},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309605,"byte_end":309608,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"Try","qualname":"::parser::combinator::Try","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1784},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311459,"byte_end":311466,"line_start":153,"line_end":153,"column_start":8,"column_end":15},"name":"attempt","qualname":"::parser::combinator::attempt","value":"pub fn attempt<Input, P>(P) -> Try<P> where Input: Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" `attempt(p)` behaves as `p` except it always acts as `p` peeked instead of committed on its\n parse.","sig":null,"attributes":[{"value":"/ `attempt(p)` behaves as `p` except it always acts as `p` peeked instead of committed on its","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":310984,"byte_end":311079,"line_start":137,"line_end":137,"column_start":1,"column_end":96}},{"value":"/ parse.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311080,"byte_end":311090,"line_start":138,"line_end":138,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311091,"byte_end":311094,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311095,"byte_end":311102,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311103,"byte_end":311130,"line_start":141,"line_end":141,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311131,"byte_end":311152,"line_start":142,"line_end":142,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311153,"byte_end":311193,"line_start":143,"line_end":143,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311194,"byte_end":311211,"line_start":144,"line_end":144,"column_start":1,"column_end":18}},{"value":"/ let mut p = attempt(string(\"let\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311212,"byte_end":311250,"line_start":145,"line_end":145,"column_start":1,"column_end":39}},{"value":"/     .or(string(\"lex\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311251,"byte_end":311278,"line_start":146,"line_end":146,"column_start":1,"column_end":28}},{"value":"/ let result = p.parse(\"lex\").map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311279,"byte_end":311324,"line_start":147,"line_end":147,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok(\"lex\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311325,"byte_end":311359,"line_start":148,"line_end":148,"column_start":1,"column_end":35}},{"value":"/ let result = p.parse(\"aet\").map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311360,"byte_end":311405,"line_start":149,"line_end":149,"column_start":1,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311406,"byte_end":311435,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311436,"byte_end":311443,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311444,"byte_end":311451,"line_start":152,"line_end":152,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6731},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311590,"byte_end":311599,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"LookAhead","qualname":"::parser::combinator::LookAhead","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1794},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312586,"byte_end":312596,"line_start":200,"line_end":200,"column_start":8,"column_end":18},"name":"look_ahead","qualname":"::parser::combinator::look_ahead","value":"pub fn look_ahead<Input, P>(P) -> LookAhead<P> where Input: Stream,\nP: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" `look_ahead(p)` acts as `p` but doesn't consume input on success.","sig":null,"attributes":[{"value":"/ `look_ahead(p)` acts as `p` but doesn't consume input on success.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312169,"byte_end":312238,"line_start":184,"line_end":184,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312239,"byte_end":312242,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312243,"byte_end":312250,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312251,"byte_end":312278,"line_start":187,"line_end":187,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312279,"byte_end":312300,"line_start":188,"line_end":188,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::string;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312301,"byte_end":312341,"line_start":189,"line_end":189,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312342,"byte_end":312359,"line_start":190,"line_end":190,"column_start":1,"column_end":18}},{"value":"/ let mut p = look_ahead(string(\"test\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312360,"byte_end":312403,"line_start":191,"line_end":191,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312404,"byte_end":312407,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let result = p.parse(\"test str\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312408,"byte_end":312445,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(result, Ok((\"test\", \"test str\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312446,"byte_end":312495,"line_start":194,"line_end":194,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312496,"byte_end":312499,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ let result = p.parse(\"aet\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312500,"byte_end":312532,"line_start":196,"line_end":196,"column_start":1,"column_end":33}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312533,"byte_end":312562,"line_start":197,"line_end":197,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312563,"byte_end":312570,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312571,"byte_end":312578,"line_start":199,"line_end":199,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6743},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312732,"byte_end":312735,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"Map","qualname":"::parser::combinator::Map","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1807},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":313653,"byte_end":313656,"line_start":244,"line_end":244,"column_start":8,"column_end":11},"name":"map","qualname":"::parser::combinator::map","value":"pub fn map<Input, P, F, B>(P, F) -> Map<P, F> where Input: Stream,\nP: Parser<Input>, F: FnMut(P::Output) -> B","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.map(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.map(f)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":313560,"byte_end":313591,"line_start":241,"line_end":241,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":313592,"byte_end":313595,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [`p.map(f)`]: ../trait.Parser.html#method.map","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":313596,"byte_end":313645,"line_start":243,"line_end":243,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6761},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":313828,"byte_end":313836,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"MapInput","qualname":"::parser::combinator::MapInput","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1822},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":314803,"byte_end":314812,"line_start":289,"line_end":289,"column_start":8,"column_end":17},"name":"map_input","qualname":"::parser::combinator::map_input","value":"pub fn map_input<Input, P, F, B>(P, F) -> MapInput<P, F> where Input: Stream,\nP: Parser<Input>, F: FnMut(P::Output, &mut Input) -> B","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.map_input(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.map_input(f)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":314692,"byte_end":314729,"line_start":286,"line_end":286,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":314730,"byte_end":314733,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ [`p.map_input(f)`]: ../trait.Parser.html#method.map_input","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":314734,"byte_end":314795,"line_start":288,"line_end":288,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":6779},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":315006,"byte_end":315013,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::parser::combinator::FlatMap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1837},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":316165,"byte_end":316173,"line_start":340,"line_end":340,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::parser::combinator::flat_map","value":"pub fn flat_map<Input, P, F, B>(P, F) -> FlatMap<P, F> where Input: Stream,\nP: Parser<Input>, F: FnMut(P::Output) ->\nResult<B, <Input as StreamOnce>::Error>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.flat_map(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.flat_map(f)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":316057,"byte_end":316093,"line_start":337,"line_end":337,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":316094,"byte_end":316097,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ [`p.flat_map(f)`]: ../trait.Parser.html#method.flat_map","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":316098,"byte_end":316157,"line_start":339,"line_end":339,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6797},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":316391,"byte_end":316398,"line_start":350,"line_end":350,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::parser::combinator::AndThen","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1852},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":318472,"byte_end":318480,"line_start":411,"line_end":411,"column_start":8,"column_end":16},"name":"and_then","qualname":"::parser::combinator::and_then","value":"pub fn and_then<Input, P, F, O, E>(P, F) -> AndThen<P, F> where\nP: Parser<Input>, F: FnMut(P::Output) -> Result<O, E>, Input: Stream,\nE: Into<<Input::Error as\n        ParseError<Input::Token, Input::Range, Input::Position>>::StreamError>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.and_then(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.and_then(f)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":318364,"byte_end":318400,"line_start":408,"line_end":408,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":318401,"byte_end":318404,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ [`p.and_then(f)`]: ../trait.Parser.html#method.and_then","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":318405,"byte_end":318464,"line_start":410,"line_end":410,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6815},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":318775,"byte_end":318784,"line_start":422,"line_end":422,"column_start":12,"column_end":21},"name":"Recognize","qualname":"::parser::combinator::Recognize","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1872},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322720,"byte_end":322729,"line_start":537,"line_end":537,"column_start":8,"column_end":17},"name":"recognize","qualname":"::parser::combinator::recognize","value":"pub fn recognize<F, Input, P>(P) -> Recognize<F, P> where Input: Stream,\nP: Parser<Input>, F: Default + Extend<<Input as StreamOnce>::Token>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parser which returns the tokens parsed by `parser` accumulated in\n `F: Extend<Input::Token>` instead of `P::Output`.","sig":null,"attributes":[{"value":"/ Constructs a parser which returns the tokens parsed by `parser` accumulated in","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322198,"byte_end":322280,"line_start":526,"line_end":526,"column_start":1,"column_end":83}},{"value":"/ `F: Extend<Input::Token>` instead of `P::Output`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322281,"byte_end":322334,"line_start":527,"line_end":527,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322335,"byte_end":322338,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322339,"byte_end":322346,"line_start":529,"line_end":529,"column_start":1,"column_end":8}},{"value":"/ use combine::Parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322347,"byte_end":322371,"line_start":530,"line_end":530,"column_start":1,"column_end":25}},{"value":"/ use combine::parser::{repeat::skip_many1, token::token, combinator::recognize, char::digit};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322372,"byte_end":322468,"line_start":531,"line_end":531,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322469,"byte_end":322472,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ let mut parser = recognize((skip_many1(digit()), token('.'), skip_many1(digit())));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322473,"byte_end":322560,"line_start":533,"line_end":533,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(parser.parse(\"123.45\"), Ok((\"123.45\".to_string(), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322561,"byte_end":322632,"line_start":534,"line_end":534,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(parser.parse(\"123.45\"), Ok((\"123.45\".to_string(), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322633,"byte_end":322704,"line_start":535,"line_end":535,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322705,"byte_end":322712,"line_start":536,"line_end":536,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1879},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322943,"byte_end":322947,"line_start":547,"line_end":547,"column_start":5,"column_end":9},"name":"Left","qualname":"::parser::combinator::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1882},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322956,"byte_end":322961,"line_start":548,"line_end":548,"column_start":5,"column_end":10},"name":"Right","qualname":"::parser::combinator::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1876},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":322924,"byte_end":322930,"line_start":546,"line_end":546,"column_start":10,"column_end":16},"name":"Either","qualname":"::parser::combinator::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1882}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1895},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":325244,"byte_end":325253,"line_start":627,"line_end":627,"column_start":12,"column_end":21},"name":"NoPartial","qualname":"::parser::combinator::NoPartial","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1907},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":326027,"byte_end":326037,"line_start":662,"line_end":662,"column_start":8,"column_end":18},"name":"no_partial","qualname":"::parser::combinator::no_partial","value":"pub fn no_partial<Input, P>(P) -> NoPartial<P> where Input: Stream,\nP: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6837},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":326173,"byte_end":326179,"line_start":671,"line_end":671,"column_start":12,"column_end":18},"name":"Ignore","qualname":"::parser::combinator::Ignore","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1920},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":326986,"byte_end":326992,"line_start":706,"line_end":706,"column_start":8,"column_end":14},"name":"ignore","qualname":"::parser::combinator::ignore","value":"pub fn ignore<Input, P>(P) -> Ignore<P> where Input: Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6851},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":327189,"byte_end":327204,"line_start":717,"line_end":717,"column_start":12,"column_end":27},"name":"AnyPartialState","qualname":"::parser::combinator::AnyPartialState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":327088,"byte_end":327111,"line_start":714,"line_end":714,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1923},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":327321,"byte_end":327342,"line_start":721,"line_end":721,"column_start":12,"column_end":33},"name":"AnyPartialStateParser","qualname":"::parser::combinator::AnyPartialStateParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":327239,"byte_end":327262,"line_start":719,"line_end":719,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1935},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329606,"byte_end":329623,"line_start":808,"line_end":808,"column_start":8,"column_end":25},"name":"any_partial_state","qualname":"::parser::combinator::any_partial_state","value":"pub fn any_partial_state<Input, P>(P) -> AnyPartialStateParser<P> where\nInput: Stream, P: Parser<Input>, P::PartialState: 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type\n since it can get very large after combining a few parsers.","sig":null,"attributes":[{"value":"/ Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":328797,"byte_end":328893,"line_start":778,"line_end":778,"column_start":1,"column_end":97}},{"value":"/ since it can get very large after combining a few parsers.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":328894,"byte_end":328956,"line_start":779,"line_end":779,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":328957,"byte_end":328960,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":328961,"byte_end":328968,"line_start":781,"line_end":781,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":328969,"byte_end":328987,"line_start":782,"line_end":782,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":328988,"byte_end":329015,"line_start":783,"line_end":783,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::combinator::{AnyPartialState, any_partial_state};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329016,"byte_end":329092,"line_start":784,"line_end":784,"column_start":1,"column_end":77}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329093,"byte_end":329133,"line_start":785,"line_end":785,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329134,"byte_end":329155,"line_start":786,"line_end":786,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329156,"byte_end":329159,"line_start":787,"line_end":787,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329160,"byte_end":329177,"line_start":788,"line_end":788,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329178,"byte_end":329181,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ parser! {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329182,"byte_end":329195,"line_start":790,"line_end":790,"column_start":1,"column_end":14}},{"value":"/     type PartialState = AnyPartialState;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329196,"byte_end":329240,"line_start":791,"line_end":791,"column_start":1,"column_end":45}},{"value":"/     fn example[Input]()(Input) -> (char, char)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329241,"byte_end":329291,"line_start":792,"line_end":792,"column_start":1,"column_end":51}},{"value":"/     where [ Input: Stream<Token = char> ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329292,"byte_end":329337,"line_start":793,"line_end":793,"column_start":1,"column_end":46}},{"value":"/     {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329338,"byte_end":329347,"line_start":794,"line_end":794,"column_start":1,"column_end":10}},{"value":"/         any_partial_state((letter(), letter()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329348,"byte_end":329399,"line_start":795,"line_end":795,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329400,"byte_end":329409,"line_start":796,"line_end":796,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329410,"byte_end":329415,"line_start":797,"line_end":797,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329416,"byte_end":329419,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329420,"byte_end":329435,"line_start":799,"line_end":799,"column_start":1,"column_end":16}},{"value":"/     example().easy_parse(\"ab\"),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329436,"byte_end":329471,"line_start":800,"line_end":800,"column_start":1,"column_end":36}},{"value":"/     Ok((('a', 'b'), \"\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329472,"byte_end":329500,"line_start":801,"line_end":801,"column_start":1,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329501,"byte_end":329507,"line_start":802,"line_end":802,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329508,"byte_end":329511,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329512,"byte_end":329519,"line_start":804,"line_end":804,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329520,"byte_end":329527,"line_start":805,"line_end":805,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329528,"byte_end":329551,"line_start":806,"line_end":806,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6861},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329880,"byte_end":329899,"line_start":820,"line_end":820,"column_start":12,"column_end":31},"name":"AnySendPartialState","qualname":"::parser::combinator::AnySendPartialState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329779,"byte_end":329802,"line_start":817,"line_end":817,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1938},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":330023,"byte_end":330048,"line_start":824,"line_end":824,"column_start":12,"column_end":37},"name":"AnySendPartialStateParser","qualname":"::parser::combinator::AnySendPartialStateParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":329941,"byte_end":329964,"line_start":822,"line_end":822,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1950},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332345,"byte_end":332367,"line_start":911,"line_end":911,"column_start":8,"column_end":30},"name":"any_send_partial_state","qualname":"::parser::combinator::any_send_partial_state","value":"pub fn any_send_partial_state<Input, P>(P) -> AnySendPartialStateParser<P>\nwhere Input: Stream, P: Parser<Input>, P::PartialState: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type\n since it can get very large after combining a few parsers.","sig":null,"attributes":[{"value":"/ Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331518,"byte_end":331614,"line_start":881,"line_end":881,"column_start":1,"column_end":97}},{"value":"/ since it can get very large after combining a few parsers.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331615,"byte_end":331677,"line_start":882,"line_end":882,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331678,"byte_end":331681,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331682,"byte_end":331689,"line_start":884,"line_end":884,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331690,"byte_end":331708,"line_start":885,"line_end":885,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331709,"byte_end":331736,"line_start":886,"line_end":886,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::combinator::{AnySendPartialState, any_send_partial_state};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331737,"byte_end":331822,"line_start":887,"line_end":887,"column_start":1,"column_end":86}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331823,"byte_end":331863,"line_start":888,"line_end":888,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331864,"byte_end":331885,"line_start":889,"line_end":889,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331886,"byte_end":331889,"line_start":890,"line_end":890,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331890,"byte_end":331907,"line_start":891,"line_end":891,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331908,"byte_end":331911,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ parser! {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331912,"byte_end":331925,"line_start":893,"line_end":893,"column_start":1,"column_end":14}},{"value":"/     type PartialState = AnySendPartialState;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331926,"byte_end":331974,"line_start":894,"line_end":894,"column_start":1,"column_end":49}},{"value":"/     fn example[Input]()(Input) -> (char, char)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":331975,"byte_end":332025,"line_start":895,"line_end":895,"column_start":1,"column_end":51}},{"value":"/     where [ Input: Stream<Token = char> ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332026,"byte_end":332071,"line_start":896,"line_end":896,"column_start":1,"column_end":46}},{"value":"/     {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332072,"byte_end":332081,"line_start":897,"line_end":897,"column_start":1,"column_end":10}},{"value":"/         any_send_partial_state((letter(), letter()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332082,"byte_end":332138,"line_start":898,"line_end":898,"column_start":1,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332139,"byte_end":332148,"line_start":899,"line_end":899,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332149,"byte_end":332154,"line_start":900,"line_end":900,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332155,"byte_end":332158,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332159,"byte_end":332174,"line_start":902,"line_end":902,"column_start":1,"column_end":16}},{"value":"/     example().easy_parse(\"ab\"),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332175,"byte_end":332210,"line_start":903,"line_end":903,"column_start":1,"column_end":36}},{"value":"/     Ok((('a', 'b'), \"\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332211,"byte_end":332239,"line_start":904,"line_end":904,"column_start":1,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332240,"byte_end":332246,"line_start":905,"line_end":905,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332247,"byte_end":332250,"line_start":906,"line_end":906,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332251,"byte_end":332258,"line_start":907,"line_end":907,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332259,"byte_end":332266,"line_start":908,"line_end":908,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332267,"byte_end":332290,"line_start":909,"line_end":909,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6871},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332639,"byte_end":332662,"line_start":923,"line_end":923,"column_start":12,"column_end":35},"name":"AnySendSyncPartialState","qualname":"::parser::combinator::AnySendSyncPartialState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332538,"byte_end":332561,"line_start":920,"line_end":920,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1953},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332793,"byte_end":332822,"line_start":927,"line_end":927,"column_start":12,"column_end":41},"name":"AnySendSyncPartialStateParser","qualname":"::parser::combinator::AnySendSyncPartialStateParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332711,"byte_end":332734,"line_start":925,"line_end":925,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":1965},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335205,"byte_end":335232,"line_start":1013,"line_end":1013,"column_start":8,"column_end":35},"name":"any_send_sync_partial_state","qualname":"::parser::combinator::any_send_sync_partial_state","value":"pub fn any_send_sync_partial_state<Input, P>(P)\n-> AnySendSyncPartialStateParser<P> where Input: Stream, P: Parser<Input>,\nP::PartialState: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type\n since it can get very large after combining a few parsers.","sig":null,"attributes":[{"value":"/ Returns a parser where `P::PartialState` is boxed. Useful as a way to avoid writing the type","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334307,"byte_end":334403,"line_start":984,"line_end":984,"column_start":1,"column_end":97}},{"value":"/ since it can get very large after combining a few parsers.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334404,"byte_end":334466,"line_start":985,"line_end":985,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334467,"byte_end":334470,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334471,"byte_end":334478,"line_start":987,"line_end":987,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334479,"byte_end":334497,"line_start":988,"line_end":988,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334498,"byte_end":334525,"line_start":989,"line_end":989,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::combinator::{AnySendSyncPartialState, any_send_sync_partial_state};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334526,"byte_end":334620,"line_start":990,"line_end":990,"column_start":1,"column_end":95}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334621,"byte_end":334661,"line_start":991,"line_end":991,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334662,"byte_end":334683,"line_start":992,"line_end":992,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334684,"byte_end":334687,"line_start":993,"line_end":993,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334688,"byte_end":334705,"line_start":994,"line_end":994,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334706,"byte_end":334709,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ fn example<Input>() -> impl Parser<Input, Output = (char, char), PartialState = AnySendSyncPartialState>","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334710,"byte_end":334818,"line_start":996,"line_end":996,"column_start":1,"column_end":109}},{"value":"/ where","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334819,"byte_end":334828,"line_start":997,"line_end":997,"column_start":1,"column_end":10}},{"value":"/     Input: Stream<Token = char>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334829,"byte_end":334865,"line_start":998,"line_end":998,"column_start":1,"column_end":37}},{"value":"/     Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334866,"byte_end":334944,"line_start":999,"line_end":999,"column_start":1,"column_end":79}},{"value":"/ {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334945,"byte_end":334950,"line_start":1000,"line_end":1000,"column_start":1,"column_end":6}},{"value":"/     any_send_sync_partial_state((letter(), letter()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":334951,"byte_end":335008,"line_start":1001,"line_end":1001,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335009,"byte_end":335014,"line_start":1002,"line_end":1002,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335015,"byte_end":335018,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335019,"byte_end":335034,"line_start":1004,"line_end":1004,"column_start":1,"column_end":16}},{"value":"/     example().easy_parse(\"ab\"),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335035,"byte_end":335070,"line_start":1005,"line_end":1005,"column_start":1,"column_end":36}},{"value":"/     Ok((('a', 'b'), \"\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335071,"byte_end":335099,"line_start":1006,"line_end":1006,"column_start":1,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335100,"byte_end":335106,"line_start":1007,"line_end":1007,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335107,"byte_end":335110,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335111,"byte_end":335118,"line_start":1009,"line_end":1009,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335119,"byte_end":335126,"line_start":1010,"line_end":1010,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335127,"byte_end":335150,"line_start":1011,"line_end":1011,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6881},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335452,"byte_end":335456,"line_start":1023,"line_end":1023,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::parser::combinator::Lazy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1983},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337291,"byte_end":337295,"line_start":1084,"line_end":1084,"column_start":8,"column_end":12},"name":"lazy","qualname":"::parser::combinator::lazy","value":"pub fn lazy<Input, P, R>(P) -> Lazy<P> where Input: Stream, P: FnMut() -> R,\nR: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Constructs the parser lazily on each `parse_*` call. Can be used to effectively reduce the\n size of deeply nested parsers as only the function producing the parser is stored.","sig":null,"attributes":[{"value":"/ Constructs the parser lazily on each `parse_*` call. Can be used to effectively reduce the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":336853,"byte_end":336947,"line_start":1076,"line_end":1076,"column_start":1,"column_end":95}},{"value":"/ size of deeply nested parsers as only the function producing the parser is stored.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":336948,"byte_end":337034,"line_start":1077,"line_end":1077,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337035,"byte_end":337038,"line_start":1078,"line_end":1078,"column_start":1,"column_end":4}},{"value":"/ NOTE: Expects that the parser returned is always the same one, if that is not the case the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337039,"byte_end":337133,"line_start":1079,"line_end":1079,"column_start":1,"column_end":95}},{"value":"/ reported error may be wrong. If different parsers may be returned, use the [`factory`][] parser","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337134,"byte_end":337233,"line_start":1080,"line_end":1080,"column_start":1,"column_end":100}},{"value":"/ instead.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337234,"byte_end":337246,"line_start":1081,"line_end":1081,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337247,"byte_end":337250,"line_start":1082,"line_end":1082,"column_start":1,"column_end":4}},{"value":"/ [`factory`]: fn.factory.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337251,"byte_end":337283,"line_start":1083,"line_end":1083,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6892},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337445,"byte_end":337452,"line_start":1094,"line_end":1094,"column_start":12,"column_end":19},"name":"Factory","qualname":"::parser::combinator::Factory","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2003},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339651,"byte_end":339658,"line_start":1166,"line_end":1166,"column_start":8,"column_end":15},"name":"factory","qualname":"::parser::combinator::factory","value":"pub fn factory<Input, P, R>(P) -> Factory<P, R> where Input: Stream,\nP: FnMut(&mut Input) -> R, R: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Constructs the parser lazily on each `parse_*` call. This is similar to [`lazy`][] but it\n takes `Input` as an argument and allows different parsers to be returned on each call to\n `p` while still reporting the correct errors.","sig":null,"attributes":[{"value":"/ Constructs the parser lazily on each `parse_*` call. This is similar to [`lazy`][] but it","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":338915,"byte_end":339008,"line_start":1150,"line_end":1150,"column_start":1,"column_end":94}},{"value":"/ takes `Input` as an argument and allows different parsers to be returned on each call to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339009,"byte_end":339101,"line_start":1151,"line_end":1151,"column_start":1,"column_end":93}},{"value":"/ `p` while still reporting the correct errors.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339102,"byte_end":339151,"line_start":1152,"line_end":1152,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339152,"byte_end":339155,"line_start":1153,"line_end":1153,"column_start":1,"column_end":4}},{"value":"/ [`lazy`]: fn.lazy.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339156,"byte_end":339182,"line_start":1154,"line_end":1154,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339183,"byte_end":339186,"line_start":1155,"line_end":1155,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339187,"byte_end":339194,"line_start":1156,"line_end":1156,"column_start":1,"column_end":8}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339195,"byte_end":339216,"line_start":1157,"line_end":1157,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339217,"byte_end":339266,"line_start":1158,"line_end":1158,"column_start":1,"column_end":50}},{"value":"/ # use combine::parser::combinator::{FnOpaque, opaque, factory};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339267,"byte_end":339334,"line_start":1159,"line_end":1159,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339335,"byte_end":339338,"line_start":1160,"line_end":1160,"column_start":1,"column_end":4}},{"value":"/ let mut parsers: Vec<FnOpaque<_, _>> = vec![opaque(|f| f(&mut digit())), opaque(|f| f(&mut letter()))];","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339339,"byte_end":339446,"line_start":1161,"line_end":1161,"column_start":1,"column_end":108}},{"value":"/ let mut iter = parsers.into_iter().cycle();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339447,"byte_end":339494,"line_start":1162,"line_end":1162,"column_start":1,"column_end":48}},{"value":"/ let mut parser = many(factory(move |_| iter.next().unwrap()));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339495,"byte_end":339561,"line_start":1163,"line_end":1163,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser.parse(\"1a2b3cd\"), Ok((\"1a2b3c\".to_string(), \"d\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339562,"byte_end":339635,"line_start":1164,"line_end":1164,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339636,"byte_end":339643,"line_start":1165,"line_end":1165,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2008},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339828,"byte_end":339834,"line_start":1176,"line_end":1176,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::parser::combinator::internal::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2010},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339880,"byte_end":339887,"line_start":1181,"line_end":1181,"column_start":11,"column_end":18},"name":"StrLike","qualname":"::parser::combinator::StrLike","value":"StrLike: Sealed","parent":null,"children":[{"krate":0,"index":2011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339905,"byte_end":339914,"line_start":1182,"line_end":1182,"column_start":8,"column_end":17},"name":"from_utf8","qualname":"::parser::combinator::StrLike::from_utf8","value":"pub fn from_utf8(&Self) -> Result<&str, ()>","parent":{"krate":0,"index":2010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6907},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":340874,"byte_end":340881,"line_start":1232,"line_end":1232,"column_start":12,"column_end":19},"name":"FromStr","qualname":"::parser::combinator::FromStr","value":"FromStr { parser }","parent":null,"children":[{"krate":0,"index":6911},{"krate":0,"index":6912}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6911},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":342181,"byte_end":342187,"line_start":1268,"line_end":1268,"column_start":30,"column_end":36},"name":"parser","qualname":"::parser::combinator::FromStr::parser","value":"P","parent":{"krate":0,"index":6907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6929},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":342159,"byte_end":342167,"line_start":1268,"line_end":1268,"column_start":8,"column_end":16},"name":"from_str","qualname":"::parser::combinator::from_str","value":"pub fn from_str<Input, O, P>(P) -> FromStr<Input, O, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>, P::Output: StrLike,\nO: str::FromStr, O::Err: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Takes a parser that outputs a string like value (`&str`, `String`, `&[u8]` or `Vec<u8>`) and parses it\n using `std::str::FromStr`. Errors if the output of `parser` is not UTF-8 or if\n `FromStr::from_str` returns an error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":6938},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":342573,"byte_end":342579,"line_start":1285,"line_end":1285,"column_start":12,"column_end":18},"name":"Opaque","qualname":"::parser::combinator::Opaque","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2053},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344337,"byte_end":344345,"line_start":1340,"line_end":1340,"column_start":10,"column_end":18},"name":"FnOpaque","qualname":"::parser::combinator::FnOpaque","value":"Opaque<fn(:\n              &mut FnMut(&mut Parser<Input, Output = O, PartialState = O>) ->\n                   ()), Input, O, S>","parent":null,"children":[],"decl_id":null,"docs":" Alias over `Opaque` where the function can be a plain function pointer (does not need to\n capture any values)\n","sig":null,"attributes":[{"value":"/ Alias over `Opaque` where the function can be a plain function pointer (does not need to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344211,"byte_end":344303,"line_start":1338,"line_end":1338,"column_start":1,"column_end":93}},{"value":"/ capture any values)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344304,"byte_end":344327,"line_start":1339,"line_end":1339,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":2057},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346232,"byte_end":346238,"line_start":1395,"line_end":1395,"column_start":8,"column_end":14},"name":"opaque","qualname":"::parser::combinator::opaque","value":"pub fn opaque<Input, F, O, S>(F) -> Opaque<F, Input, O, S> where\nInput: Stream, S: Default,\nF: FnMut(&mut FnMut(&mut Parser<Input, Output = O, PartialState = O>) -> ())\n-> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates a parser from a function which takes a function that are given the actual parser.\n Though convoluted this makes it possible to hide the concrete parser type without `Box` or\n losing the full information about the parser as is the case of [`parser`][].","sig":null,"attributes":[{"value":"/ Creates a parser from a function which takes a function that are given the actual parser.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344466,"byte_end":344559,"line_start":1343,"line_end":1343,"column_start":1,"column_end":94}},{"value":"/ Though convoluted this makes it possible to hide the concrete parser type without `Box` or","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344560,"byte_end":344654,"line_start":1344,"line_end":1344,"column_start":1,"column_end":95}},{"value":"/ losing the full information about the parser as is the case of [`parser`][].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344655,"byte_end":344735,"line_start":1345,"line_end":1345,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344736,"byte_end":344739,"line_start":1346,"line_end":1346,"column_start":1,"column_end":4}},{"value":"/ Since this hides the type this can also be useful for writing mutually recursive `impl Parser`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344740,"byte_end":344838,"line_start":1347,"line_end":1347,"column_start":1,"column_end":99}},{"value":"/ parsers to break the otherwise arbitrarily large type that rustc creates internally.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344839,"byte_end":344927,"line_start":1348,"line_end":1348,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344928,"byte_end":344931,"line_start":1349,"line_end":1349,"column_start":1,"column_end":4}},{"value":"/ If you need a more general version (that does not need trait objects) try the [`parser!`][]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":344932,"byte_end":345027,"line_start":1350,"line_end":1350,"column_start":1,"column_end":96}},{"value":"/ macro.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345028,"byte_end":345038,"line_start":1351,"line_end":1351,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345039,"byte_end":345042,"line_start":1352,"line_end":1352,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345043,"byte_end":345050,"line_start":1353,"line_end":1353,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345051,"byte_end":345069,"line_start":1354,"line_end":1354,"column_start":1,"column_end":19}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345070,"byte_end":345097,"line_start":1355,"line_end":1355,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::combinator::{FnOpaque, no_partial};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345098,"byte_end":345160,"line_start":1356,"line_end":1356,"column_start":1,"column_end":63}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345161,"byte_end":345208,"line_start":1357,"line_end":1357,"column_start":1,"column_end":48}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345209,"byte_end":345230,"line_start":1358,"line_end":1358,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345231,"byte_end":345234,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345235,"byte_end":345252,"line_start":1360,"line_end":1360,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345253,"byte_end":345256,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345257,"byte_end":345288,"line_start":1362,"line_end":1362,"column_start":1,"column_end":32}},{"value":"/ enum Expr {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345289,"byte_end":345304,"line_start":1363,"line_end":1363,"column_start":1,"column_end":16}},{"value":"/     Number(i64),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345305,"byte_end":345325,"line_start":1364,"line_end":1364,"column_start":1,"column_end":21}},{"value":"/     Pair(Box<Expr>, Box<Expr>),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345326,"byte_end":345361,"line_start":1365,"line_end":1365,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345362,"byte_end":345367,"line_start":1366,"line_end":1366,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345368,"byte_end":345371,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ fn expr<Input>() -> FnOpaque<Input, Expr>","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345372,"byte_end":345417,"line_start":1368,"line_end":1368,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345418,"byte_end":345427,"line_start":1369,"line_end":1369,"column_start":1,"column_end":10}},{"value":"/     Input: Stream<Token = char>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345428,"byte_end":345464,"line_start":1370,"line_end":1370,"column_start":1,"column_end":37}},{"value":"/     Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345465,"byte_end":345543,"line_start":1371,"line_end":1371,"column_start":1,"column_end":79}},{"value":"/ {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345544,"byte_end":345549,"line_start":1372,"line_end":1372,"column_start":1,"column_end":6}},{"value":"/     opaque!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345550,"byte_end":345566,"line_start":1373,"line_end":1373,"column_start":1,"column_end":17}},{"value":"/         // `no_partial` disables partial parsing and replaces the partial state with `()`,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345567,"byte_end":345661,"line_start":1374,"line_end":1374,"column_start":1,"column_end":95}},{"value":"/         // letting us avoid naming that type","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345662,"byte_end":345710,"line_start":1375,"line_end":1375,"column_start":1,"column_end":49}},{"value":"/         no_partial(choice((","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345711,"byte_end":345742,"line_start":1376,"line_end":1376,"column_start":1,"column_end":32}},{"value":"/             from_str(many1::<String, _, _>(digit()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345743,"byte_end":345799,"line_start":1377,"line_end":1377,"column_start":1,"column_end":57}},{"value":"/                 .map(Expr::Number),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345800,"byte_end":345839,"line_start":1378,"line_end":1378,"column_start":1,"column_end":40}},{"value":"/             (char('('), expr(), char(','), expr(), char(')'))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345840,"byte_end":345905,"line_start":1379,"line_end":1379,"column_start":1,"column_end":66}},{"value":"/                 .map(|(_, l, _, r, _)| Expr::Pair(Box::new(l), Box::new(r)))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345906,"byte_end":345986,"line_start":1380,"line_end":1380,"column_start":1,"column_end":81}},{"value":"/         ))),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":345987,"byte_end":346003,"line_start":1381,"line_end":1381,"column_start":1,"column_end":17}},{"value":"/     )","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346004,"byte_end":346013,"line_start":1382,"line_end":1382,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346014,"byte_end":346019,"line_start":1383,"line_end":1383,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346020,"byte_end":346023,"line_start":1384,"line_end":1384,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346024,"byte_end":346039,"line_start":1385,"line_end":1385,"column_start":1,"column_end":16}},{"value":"/     expr().easy_parse(\"123\"),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346040,"byte_end":346073,"line_start":1386,"line_end":1386,"column_start":1,"column_end":34}},{"value":"/     Ok((Expr::Number(123), \"\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346074,"byte_end":346109,"line_start":1387,"line_end":1387,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346110,"byte_end":346116,"line_start":1388,"line_end":1388,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346117,"byte_end":346120,"line_start":1389,"line_end":1389,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346121,"byte_end":346128,"line_start":1390,"line_end":1390,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346129,"byte_end":346136,"line_start":1391,"line_end":1391,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346137,"byte_end":346140,"line_start":1392,"line_end":1392,"column_start":1,"column_end":4}},{"value":"/ [`parser`]: ../function/fn.parser.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346141,"byte_end":346183,"line_start":1393,"line_end":1393,"column_start":1,"column_end":43}},{"value":"/ [`parser!`]: ../../macro.parser.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346184,"byte_end":346224,"line_start":1394,"line_end":1394,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2063},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346864,"byte_end":346878,"line_start":1421,"line_end":1421,"column_start":12,"column_end":26},"name":"InputConverter","qualname":"::parser::combinator::InputConverter","value":"InputConverter { parser, converter, _marker }","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2067},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346937,"byte_end":346943,"line_start":1425,"line_end":1425,"column_start":9,"column_end":15},"name":"parser","qualname":"::parser::combinator::InputConverter::parser","value":"P","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2068},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346956,"byte_end":346965,"line_start":1426,"line_end":1426,"column_start":9,"column_end":18},"name":"converter","qualname":"::parser::combinator::InputConverter::converter","value":"C","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2069},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":346978,"byte_end":346985,"line_start":1427,"line_end":1427,"column_start":9,"column_end":16},"name":"_marker","qualname":"::parser::combinator::InputConverter::_marker","value":"std::marker::PhantomData<fn(InputInner)>","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2081},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":347870,"byte_end":347879,"line_start":1460,"line_end":1460,"column_start":11,"column_end":20},"name":"Converter","qualname":"::parser::combinator::Converter","value":"Converter<'a, Input>","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2084},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":347927,"byte_end":347937,"line_start":1464,"line_end":1464,"column_start":10,"column_end":20},"name":"InputInner","qualname":"::parser::combinator::Converter::InputInner","value":"type InputInner: Stream + 'a;","parent":{"krate":0,"index":2081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":347959,"byte_end":347966,"line_start":1465,"line_end":1465,"column_start":8,"column_end":15},"name":"convert","qualname":"::parser::combinator::Converter::convert","value":"pub fn convert(&mut Self, &'a mut Input)\n-> Result<Self::InputInner, Input::Error>","parent":{"krate":0,"index":2081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":348050,"byte_end":348063,"line_start":1466,"line_end":1466,"column_start":8,"column_end":21},"name":"convert_error","qualname":"::parser::combinator::Converter::convert_error","value":"pub fn convert_error(&mut Self, &'a mut Input,\n                     <Self::InputInner as StreamOnce>::Error) -> Input::Error","parent":{"krate":0,"index":2081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2094},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":348737,"byte_end":348752,"line_start":1491,"line_end":1491,"column_start":8,"column_end":23},"name":"input_converter","qualname":"::parser::combinator::input_converter","value":"pub fn input_converter<Input, InputInner, P, C>(P, C)\n-> InputConverter<InputInner, P, C> where Input: Stream, InputInner: Stream,\nP: Parser<InputInner>, for<'c> C: Converter<InputInner = InputInner>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6961},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":349113,"byte_end":349120,"line_start":1509,"line_end":1509,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::parser::combinator::Spanned","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2109},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":350396,"byte_end":350403,"line_start":1550,"line_end":1550,"column_start":8,"column_end":15},"name":"spanned","qualname":"::parser::combinator::spanned","value":"pub fn spanned<Input, P>(P) -> Spanned<P> where P: Parser<Input>,\nInput: Stream","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.spanned()`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.spanned()`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":350293,"byte_end":350327,"line_start":1547,"line_end":1547,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":350328,"byte_end":350331,"line_start":1548,"line_end":1548,"column_start":1,"column_end":4}},{"value":"/ [`p.spanned()`]: ../trait.Parser.html#method.spanned","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":350332,"byte_end":350388,"line_start":1549,"line_end":1549,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":2112},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::parser::error","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":9930},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":6972},{"krate":0,"index":6979},{"krate":0,"index":2127},{"krate":0,"index":2136},{"krate":0,"index":2140},{"krate":0,"index":6984},{"krate":0,"index":6990},{"krate":0,"index":2145},{"krate":0,"index":2155},{"krate":0,"index":6998},{"krate":0,"index":7004},{"krate":0,"index":2160},{"krate":0,"index":2171},{"krate":0,"index":7012},{"krate":0,"index":7016},{"krate":0,"index":2176},{"krate":0,"index":2186}],"decl_id":null,"docs":" Parsers which cause errors or modifies the returned error on parse failure.\n","sig":null,"attributes":[{"value":"/ Parsers which cause errors or modifies the returned error on parse failure.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":350501,"byte_end":350580,"line_start":1,"line_end":1,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":6972},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":350825,"byte_end":350835,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"Unexpected","qualname":"::parser::error::Unexpected","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2136},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351957,"byte_end":351967,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"unexpected","qualname":"::parser::error::unexpected","value":"pub fn unexpected<Input, S>(S) -> Unexpected<Input, (), S> where\nInput: Stream, S: for<'s> ErrorInfo","parent":null,"children":[],"decl_id":null,"docs":" Always fails with `message` as an unexpected error.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Always fails with `message` as an unexpected error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351439,"byte_end":351494,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351495,"byte_end":351524,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351525,"byte_end":351528,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Has `()` the output type","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351529,"byte_end":351557,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351558,"byte_end":351561,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351562,"byte_end":351569,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351570,"byte_end":351597,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351598,"byte_end":351619,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ # use combine::error::StreamError;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351620,"byte_end":351658,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351659,"byte_end":351676,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ let result = unexpected(\"token\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351677,"byte_end":351713,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/     .easy_parse(\"a\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351714,"byte_end":351739,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351740,"byte_end":351769,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ assert!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351770,"byte_end":351782,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/     result.err()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351783,"byte_end":351803,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/         .unwrap()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351804,"byte_end":351825,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/         .errors","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351826,"byte_end":351845,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"/         .iter()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351846,"byte_end":351865,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/         .any(|m| *m == StreamError::unexpected(\"token\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351866,"byte_end":351926,"line_start":51,"line_end":51,"column_start":1,"column_end":61}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351927,"byte_end":351933,"line_start":52,"line_end":52,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351934,"byte_end":351941,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":351942,"byte_end":351949,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2140},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352865,"byte_end":352879,"line_start":87,"line_end":87,"column_start":8,"column_end":22},"name":"unexpected_any","qualname":"::parser::error::unexpected_any","value":"pub fn unexpected_any<Input, S, T>(S) -> Unexpected<Input, T, S> where\nInput: Stream, S: for<'s> ErrorInfo","parent":null,"children":[],"decl_id":null,"docs":" Always fails with `message` as an unexpected error.\n Never consumes any input.","sig":null,"attributes":[{"value":"/ Always fails with `message` as an unexpected error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352134,"byte_end":352189,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/ Never consumes any input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352190,"byte_end":352219,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352220,"byte_end":352223,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ May have anything as the output type but must be used such that the output type can inferred.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352224,"byte_end":352321,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ The `unexpected` parser can be used if the output type does not matter","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352322,"byte_end":352396,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352397,"byte_end":352400,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352401,"byte_end":352408,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352409,"byte_end":352436,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352437,"byte_end":352458,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::error::unexpected_any;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352459,"byte_end":352508,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/ # use combine::error::StreamError;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352509,"byte_end":352547,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352548,"byte_end":352565,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"/ let result = token('b').or(unexpected_any(\"token\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352566,"byte_end":352621,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/     .easy_parse(\"a\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352622,"byte_end":352647,"line_start":76,"line_end":76,"column_start":1,"column_end":26}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352648,"byte_end":352677,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/ assert!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352678,"byte_end":352690,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/     result.err()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352691,"byte_end":352711,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/         .unwrap()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352712,"byte_end":352733,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/         .errors","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352734,"byte_end":352753,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/         .iter()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352754,"byte_end":352773,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/         .any(|m| *m == StreamError::unexpected(\"token\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352774,"byte_end":352834,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352835,"byte_end":352841,"line_start":84,"line_end":84,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352842,"byte_end":352849,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":352850,"byte_end":352857,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6984},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":353085,"byte_end":353092,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"Message","qualname":"::parser::error::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2155},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":354427,"byte_end":354434,"line_start":143,"line_end":143,"column_start":8,"column_end":15},"name":"message","qualname":"::parser::error::message","value":"pub fn message<Input, P, S>(P, S) -> Message<P, S> where P: Parser<Input>,\nInput: Stream, S: for<'s> ErrorInfo","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.message(msg)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.message(msg)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":354316,"byte_end":354354,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":354355,"byte_end":354358,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`p1.message(msg)`]: ../trait.Parser.html#method.message","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":354359,"byte_end":354419,"line_start":142,"line_end":142,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6998},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":354637,"byte_end":354645,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"Expected","qualname":"::parser::error::Expected","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2171},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":355625,"byte_end":355633,"line_start":189,"line_end":189,"column_start":8,"column_end":16},"name":"expected","qualname":"::parser::error::expected","value":"pub fn expected<Input, P, S>(P, S) -> Expected<P, S> where P: Parser<Input>,\nInput: Stream, S: for<'s> ErrorInfo","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.expected(info)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.expected(info)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":355511,"byte_end":355550,"line_start":186,"line_end":186,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":355551,"byte_end":355554,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [`p.expected(info)`]: ../trait.Parser.html#method.expected","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":355555,"byte_end":355617,"line_start":188,"line_end":188,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7012},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":355840,"byte_end":355846,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"Silent","qualname":"::parser::error::Silent","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2186},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":356787,"byte_end":356793,"line_start":239,"line_end":239,"column_start":8,"column_end":14},"name":"silent","qualname":"::parser::error::silent","value":"pub fn silent<Input, P>(P) -> Silent<P> where P: Parser<Input>, Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.silent()`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.silent()`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":356687,"byte_end":356720,"line_start":236,"line_end":236,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":356721,"byte_end":356724,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ [`p.silent()`]: ../trait.Parser.html#method.silent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":356725,"byte_end":356779,"line_start":238,"line_end":238,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":2189},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"function","qualname":"::parser::function","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":9944},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":7022},{"krate":0,"index":7032},{"krate":0,"index":7028},{"krate":0,"index":2204},{"krate":0,"index":2208},{"krate":0,"index":2215},{"krate":0,"index":7035},{"krate":0,"index":7041},{"krate":0,"index":2221},{"krate":0,"index":2226},{"krate":0,"index":2233}],"decl_id":null,"docs":" Parsers constructor from regular functions\n","sig":null,"attributes":[{"value":"/ Parsers constructor from regular functions","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":356889,"byte_end":356935,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":7022},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357380,"byte_end":357388,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"FnParser","qualname":"::parser::function::FnParser","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2204},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358625,"byte_end":358631,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"parser","qualname":"::parser::function::parser","value":"pub fn parser<Input, O, F>(F) -> FnParser<Input, F> where Input: Stream,\nF: FnMut(&mut Input) -> StdParseResult<O, Input>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a function, turning it into a parser.","sig":null,"attributes":[{"value":"/ Wraps a function, turning it into a parser.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357437,"byte_end":357484,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357485,"byte_end":357488,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Mainly needed to turn closures into parsers as function types can be casted to function pointers","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357489,"byte_end":357589,"line_start":27,"line_end":27,"column_start":1,"column_end":101}},{"value":"/ to make them usable as a parser.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357590,"byte_end":357626,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357627,"byte_end":357630,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357631,"byte_end":357638,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357639,"byte_end":357664,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357665,"byte_end":357686,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357687,"byte_end":357726,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ # use combine::error::{Commit, StreamError};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357727,"byte_end":357775,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357776,"byte_end":357808,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357809,"byte_end":357826,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ let mut even_digit = parser(|input| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357827,"byte_end":357868,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/     // Help type inference out","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357869,"byte_end":357903,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/     let _: &mut easy::Stream<&str> = input;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357904,"byte_end":357951,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/     let position = input.position();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357952,"byte_end":357992,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     let (char_digit, committed) = digit().parse_stream(input).into_result()?;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":357993,"byte_end":358074,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"/     let d = (char_digit as i32) - ('0' as i32);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358075,"byte_end":358126,"line_start":42,"line_end":42,"column_start":1,"column_end":52}},{"value":"/     if d % 2 == 0 {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358127,"byte_end":358150,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/         Ok((d, committed))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358151,"byte_end":358181,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358182,"byte_end":358191,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/     else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358192,"byte_end":358206,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/         //Return an empty error since we only tested the first token of the stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358207,"byte_end":358293,"line_start":47,"line_end":47,"column_start":1,"column_end":87}},{"value":"/         let errors = easy::Errors::new(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358294,"byte_end":358337,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/             position,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358338,"byte_end":358363,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/             StreamError::expected(\"even number\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358364,"byte_end":358416,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/         );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358417,"byte_end":358431,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/         Err(Commit::Peek(errors.into()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358432,"byte_end":358476,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358477,"byte_end":358486,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358487,"byte_end":358494,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ let result = even_digit","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358495,"byte_end":358522,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     .easy_parse(\"8\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358523,"byte_end":358547,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358548,"byte_end":358570,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(8));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358571,"byte_end":358601,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358602,"byte_end":358609,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358610,"byte_end":358617,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7035},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":359420,"byte_end":359429,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"EnvParser","qualname":"::parser::function::EnvParser","value":"EnvParser {  }","parent":null,"children":[{"krate":0,"index":7039},{"krate":0,"index":7040}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2233},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361411,"byte_end":361421,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"env_parser","qualname":"::parser::function::env_parser","value":"pub fn env_parser<E, Input,\n                  O>(E, fn(: E, : &mut Input) -> StdParseResult<O, Input>)\n-> EnvParser<E, Input, O> where E: Clone, Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Constructs a parser out of an environment and a function which needs the given environment to\n do the parsing. This is commonly useful to allow multiple parsers to share some environment\n while still allowing the parsers to be written in separate functions.","sig":null,"attributes":[{"value":"/ Constructs a parser out of an environment and a function which needs the given environment to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360082,"byte_end":360179,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ do the parsing. This is commonly useful to allow multiple parsers to share some environment","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360180,"byte_end":360275,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ while still allowing the parsers to be written in separate functions.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360276,"byte_end":360349,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360350,"byte_end":360353,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360354,"byte_end":360361,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360362,"byte_end":360389,"line_start":137,"line_end":137,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360390,"byte_end":360426,"line_start":138,"line_end":138,"column_start":1,"column_end":37}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360427,"byte_end":360448,"line_start":139,"line_end":139,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::function::env_parser;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360449,"byte_end":360497,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/ # use combine::parser::char::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360498,"byte_end":360538,"line_start":141,"line_end":141,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360539,"byte_end":360556,"line_start":142,"line_end":142,"column_start":1,"column_end":18}},{"value":"/ struct Interner(HashMap<String, u32>);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360557,"byte_end":360599,"line_start":143,"line_end":143,"column_start":1,"column_end":43}},{"value":"/ impl Interner {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360600,"byte_end":360619,"line_start":144,"line_end":144,"column_start":1,"column_end":20}},{"value":"/     fn string<Input>(&self, input: &mut Input) -> StdParseResult<u32, Input>","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360620,"byte_end":360700,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/         where Input: Stream<Token = char>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360701,"byte_end":360747,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"/               Input::Error: ParseError<Input::Token, Input::Range, Input::Position>,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360748,"byte_end":360836,"line_start":147,"line_end":147,"column_start":1,"column_end":89}},{"value":"/     {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360837,"byte_end":360846,"line_start":148,"line_end":148,"column_start":1,"column_end":10}},{"value":"/         many(letter())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360847,"byte_end":360873,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"/             .map(|s: String| self.0.get(&s).cloned().unwrap_or(0))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360874,"byte_end":360944,"line_start":150,"line_end":150,"column_start":1,"column_end":71}},{"value":"/             .parse_stream(input)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360945,"byte_end":360981,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"/             .into_result()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":360982,"byte_end":361012,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361013,"byte_end":361022,"line_start":153,"line_end":153,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361023,"byte_end":361028,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361029,"byte_end":361032,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361033,"byte_end":361066,"line_start":156,"line_end":156,"column_start":1,"column_end":34}},{"value":"/ map.insert(\"hello\".into(), 1);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361067,"byte_end":361101,"line_start":157,"line_end":157,"column_start":1,"column_end":35}},{"value":"/ map.insert(\"test\".into(), 2);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361102,"byte_end":361135,"line_start":158,"line_end":158,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361136,"byte_end":361139,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ let env = Interner(map);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361140,"byte_end":361168,"line_start":160,"line_end":160,"column_start":1,"column_end":29}},{"value":"/ let mut parser = env_parser(&env, Interner::string);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361169,"byte_end":361225,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361226,"byte_end":361229,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(\"hello\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361230,"byte_end":361269,"line_start":163,"line_end":163,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(result, Ok((1, \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361270,"byte_end":361306,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361307,"byte_end":361310,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(\"world\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361311,"byte_end":361350,"line_start":166,"line_end":166,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(result, Ok((0, \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361351,"byte_end":361387,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361388,"byte_end":361395,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":361396,"byte_end":361403,"line_start":169,"line_end":169,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2237},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::parser::range","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":9964},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2267},{"krate":0,"index":7059},{"krate":0,"index":7064},{"krate":0,"index":7045},{"krate":0,"index":7056},{"krate":0,"index":2274},{"krate":0,"index":7071},{"krate":0,"index":7075},{"krate":0,"index":2281},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":2295},{"krate":0,"index":2300},{"krate":0,"index":2305},{"krate":0,"index":2307},{"krate":0,"index":2313},{"krate":0,"index":2322},{"krate":0,"index":2325},{"krate":0,"index":2331},{"krate":0,"index":2340},{"krate":0,"index":2343},{"krate":0,"index":2347},{"krate":0,"index":2353},{"krate":0,"index":7084},{"krate":0,"index":7095},{"krate":0,"index":7091},{"krate":0,"index":7092},{"krate":0,"index":2355},{"krate":0,"index":2357},{"krate":0,"index":2362},{"krate":0,"index":2370},{"krate":0,"index":7099},{"krate":0,"index":7104},{"krate":0,"index":7117}],"decl_id":null,"docs":" Module containing zero-copy parsers.","sig":null,"attributes":[{"value":"/ Module containing zero-copy parsers.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":361609,"byte_end":361649,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":361650,"byte_end":361653,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These parsers require the [`RangeStream`][] bound instead of a plain [`Stream`][].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":361654,"byte_end":361740,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":361741,"byte_end":361744,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`RangeStream`]: ../../stream/trait.RangeStream.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":361745,"byte_end":361801,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ [`Stream`]: ../../stream/trait.Stream.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":361802,"byte_end":361848,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2263},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":362366,"byte_end":362371,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Range","qualname":"::parser::range::Range","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7059},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":363419,"byte_end":363428,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"Recognize","qualname":"::parser::range::Recognize","value":"Recognize { parser }","parent":null,"children":[{"krate":0,"index":7062},{"krate":0,"index":7063}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7062},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":364169,"byte_end":364175,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"name":"parser","qualname":"::parser::range::Recognize::parser","value":"P","parent":{"krate":0,"index":7059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7056},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":364149,"byte_end":364158,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"recognize","qualname":"::parser::range::recognize","value":"pub fn recognize<Input, P>(P) -> Recognize<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>, Input: RangeStream,\n<Input as StreamOnce>::Range: crate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which returns committed input range.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19167,"byte_end":19175,"line_start":505,"line_end":505,"column_start":11,"column_end":19}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7071},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":365995,"byte_end":366013,"line_start":151,"line_end":151,"column_start":12,"column_end":30},"name":"RecognizeWithValue","qualname":"::parser::range::RecognizeWithValue","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2290},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368428,"byte_end":368448,"line_start":225,"line_end":225,"column_start":8,"column_end":28},"name":"recognize_with_value","qualname":"::parser::range::recognize_with_value","value":"pub fn recognize_with_value<Input, P>(P) -> RecognizeWithValue<P> where\nP: Parser<Input>, Input: RangeStream,\n<Input as StreamOnce>::Range: crate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which returns a pair: (committed input range, parsed value).","sig":null,"attributes":[{"value":"/ Zero-copy parser which returns a pair: (committed input range, parsed value).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367586,"byte_end":367667,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367668,"byte_end":367671,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367672,"byte_end":367675,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ [`combinator::recognize_with_value`] is a non-`RangeStream` alternative.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367676,"byte_end":367752,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367753,"byte_end":367756,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ [`combinator::recognize_with_value`]: recognize_with_value","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367757,"byte_end":367819,"line_start":207,"line_end":207,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367820,"byte_end":367827,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367828,"byte_end":367855,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::recognize_with_value;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367856,"byte_end":367911,"line_start":210,"line_end":210,"column_start":1,"column_end":56}},{"value":"/ # use combine::parser::char::{digit, char};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367912,"byte_end":367959,"line_start":211,"line_end":211,"column_start":1,"column_end":48}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367960,"byte_end":367981,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":367982,"byte_end":367999,"line_start":213,"line_end":213,"column_start":1,"column_end":18}},{"value":"/ let mut parser = recognize_with_value((","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368000,"byte_end":368043,"line_start":214,"line_end":214,"column_start":1,"column_end":44}},{"value":"/     skip_many1(digit()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368044,"byte_end":368072,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/     optional((attempt(char('.')), skip_many1(digit()))),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368073,"byte_end":368133,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/ ).map(|(_, opt)| opt.is_some()));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368134,"byte_end":368171,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368172,"byte_end":368175,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parser.parse(\"1234!\"), Ok(((\"1234\", false), \"!\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368176,"byte_end":368242,"line_start":219,"line_end":219,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(parser.parse(\"1234.0001!\"), Ok(((\"1234.0001\", true), \"!\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368243,"byte_end":368318,"line_start":220,"line_end":220,"column_start":1,"column_end":76}},{"value":"/ assert!(parser.parse(\"!\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368319,"byte_end":368359,"line_start":221,"line_end":221,"column_start":1,"column_end":41}},{"value":"/ assert!(parser.parse(\"1234.\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368360,"byte_end":368404,"line_start":222,"line_end":222,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368405,"byte_end":368412,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368413,"byte_end":368420,"line_start":224,"line_end":224,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2293},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369190,"byte_end":369195,"line_start":252,"line_end":252,"column_start":8,"column_end":13},"name":"range","qualname":"::parser::range::range","value":"pub fn range<Input>(Input::Range) -> Range<Input> where Input: RangeStream,\nInput::Range: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of length `i.len()` and succeeds if `i` is equal to that\n range.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of length `i.len()` and succeeds if `i` is equal to that","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368639,"byte_end":368736,"line_start":234,"line_end":234,"column_start":1,"column_end":98}},{"value":"/ range.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368737,"byte_end":368747,"line_start":235,"line_end":235,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368748,"byte_end":368751,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`tokens`] is a non-`RangeStream` alternative.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368752,"byte_end":368802,"line_start":237,"line_end":237,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368803,"byte_end":368806,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ [`tokens`]: super::token::tokens","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368807,"byte_end":368843,"line_start":239,"line_end":239,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368844,"byte_end":368851,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368852,"byte_end":368879,"line_start":241,"line_end":241,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::range;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368880,"byte_end":368920,"line_start":242,"line_end":242,"column_start":1,"column_end":41}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368921,"byte_end":368942,"line_start":243,"line_end":243,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368943,"byte_end":368960,"line_start":244,"line_end":244,"column_start":1,"column_end":18}},{"value":"/ let mut parser = range(\"hello\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368961,"byte_end":368997,"line_start":245,"line_end":245,"column_start":1,"column_end":37}},{"value":"/ let result = parser.parse(\"hello world\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":368998,"byte_end":369043,"line_start":246,"line_end":246,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(result, Ok((\"hello\", \" world\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369044,"byte_end":369092,"line_start":247,"line_end":247,"column_start":1,"column_end":49}},{"value":"/ let result = parser.parse(\"hel world\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369093,"byte_end":369136,"line_start":248,"line_end":248,"column_start":1,"column_end":44}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369137,"byte_end":369166,"line_start":249,"line_end":249,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369167,"byte_end":369174,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369175,"byte_end":369182,"line_start":251,"line_end":251,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2295},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369324,"byte_end":369328,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"Take","qualname":"::parser::range::Take","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2305},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370310,"byte_end":370314,"line_start":297,"line_end":297,"column_start":8,"column_end":12},"name":"take","qualname":"::parser::range::take","value":"pub fn take<Input>(usize) -> Take<Input> where Input: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of length `n`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of length `n`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369694,"byte_end":369749,"line_start":277,"line_end":277,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369750,"byte_end":369753,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ [`count_min_max`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369754,"byte_end":369813,"line_start":279,"line_end":279,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369814,"byte_end":369817,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ [`count_min_max`]: ../../parser/repeat/fn.count_min_max.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369818,"byte_end":369882,"line_start":281,"line_end":281,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369883,"byte_end":369890,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369891,"byte_end":369918,"line_start":283,"line_end":283,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369919,"byte_end":369958,"line_start":284,"line_end":284,"column_start":1,"column_end":40}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369959,"byte_end":369980,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369981,"byte_end":369998,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take(1);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369999,"byte_end":370028,"line_start":287,"line_end":287,"column_start":1,"column_end":30}},{"value":"/ let result = parser.parse(\"1\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370029,"byte_end":370064,"line_start":288,"line_end":288,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(result, Ok((\"1\", \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370065,"byte_end":370103,"line_start":289,"line_end":289,"column_start":1,"column_end":39}},{"value":"/ let mut parser = take(4);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370104,"byte_end":370133,"line_start":290,"line_end":290,"column_start":1,"column_end":30}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370134,"byte_end":370174,"line_start":291,"line_end":291,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123a\", \"bc\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370175,"byte_end":370218,"line_start":292,"line_end":292,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370219,"byte_end":370256,"line_start":293,"line_end":293,"column_start":1,"column_end":38}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370257,"byte_end":370286,"line_start":294,"line_end":294,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370287,"byte_end":370294,"line_start":295,"line_end":295,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370295,"byte_end":370302,"line_start":296,"line_end":296,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2307},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370418,"byte_end":370427,"line_start":304,"line_end":304,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::parser::range::TakeWhile","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2322},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371780,"byte_end":371790,"line_start":353,"line_end":353,"column_start":8,"column_end":18},"name":"take_while","qualname":"::parser::range::take_while","value":"pub fn take_while<Input, F>(F) -> TakeWhile<Input, F> where\nInput: RangeStream, Input::Range: crate::stream::Range, F: FnMut(Input::Token)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens which satisfy `f`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 0 or more tokens which satisfy `f`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371226,"byte_end":371305,"line_start":336,"line_end":336,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371306,"byte_end":371309,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`many`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371310,"byte_end":371360,"line_start":338,"line_end":338,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371361,"byte_end":371364,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ [`many`]: ../../parser/repeat/fn.many.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371365,"byte_end":371411,"line_start":340,"line_end":340,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371412,"byte_end":371419,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371420,"byte_end":371447,"line_start":342,"line_end":342,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take_while;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371448,"byte_end":371493,"line_start":343,"line_end":343,"column_start":1,"column_end":46}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371494,"byte_end":371515,"line_start":344,"line_end":344,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371516,"byte_end":371533,"line_start":345,"line_end":345,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_while(|c: char| c.is_digit(10));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371534,"byte_end":371592,"line_start":346,"line_end":346,"column_start":1,"column_end":59}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371593,"byte_end":371633,"line_start":347,"line_end":347,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123\", \"abc\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371634,"byte_end":371677,"line_start":348,"line_end":348,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371678,"byte_end":371715,"line_start":349,"line_end":349,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(result, Ok((\"\", \"abc\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371716,"byte_end":371756,"line_start":350,"line_end":350,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371757,"byte_end":371764,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371765,"byte_end":371772,"line_start":352,"line_end":352,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2325},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":371982,"byte_end":371992,"line_start":362,"line_end":362,"column_start":12,"column_end":22},"name":"TakeWhile1","qualname":"::parser::range::TakeWhile1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2340},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373341,"byte_end":373352,"line_start":411,"line_end":411,"column_start":8,"column_end":19},"name":"take_while1","qualname":"::parser::range::take_while1","value":"pub fn take_while1<Input, F>(F) -> TakeWhile1<Input, F> where\nInput: RangeStream, Input::Range: crate::stream::Range, F: FnMut(Input::Token)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 1 or more tokens which satisfy `f`.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 1 or more tokens which satisfy `f`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372793,"byte_end":372872,"line_start":394,"line_end":394,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372873,"byte_end":372876,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ [`many1`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372877,"byte_end":372928,"line_start":396,"line_end":396,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372929,"byte_end":372932,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ [`many1`]: ../../parser/repeat/fn.many1.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372933,"byte_end":372981,"line_start":398,"line_end":398,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372982,"byte_end":372989,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372990,"byte_end":373017,"line_start":400,"line_end":400,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::take_while1;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373018,"byte_end":373064,"line_start":401,"line_end":401,"column_start":1,"column_end":47}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373065,"byte_end":373086,"line_start":402,"line_end":402,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373087,"byte_end":373104,"line_start":403,"line_end":403,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_while1(|c: char| c.is_digit(10));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373105,"byte_end":373164,"line_start":404,"line_end":404,"column_start":1,"column_end":60}},{"value":"/ let result = parser.parse(\"123abc\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373165,"byte_end":373205,"line_start":405,"line_end":405,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(result, Ok((\"123\", \"abc\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373206,"byte_end":373249,"line_start":406,"line_end":406,"column_start":1,"column_end":44}},{"value":"/ let result = parser.parse(\"abc\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373250,"byte_end":373287,"line_start":407,"line_end":407,"column_start":1,"column_end":38}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373288,"byte_end":373317,"line_start":408,"line_end":408,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373318,"byte_end":373325,"line_start":409,"line_end":409,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373326,"byte_end":373333,"line_start":410,"line_end":410,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2343},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373546,"byte_end":373560,"line_start":420,"line_end":420,"column_start":12,"column_end":26},"name":"TakeUntilRange","qualname":"::parser::range::TakeUntilRange","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2353},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377828,"byte_end":377844,"line_start":528,"line_end":528,"column_start":8,"column_end":24},"name":"take_until_range","qualname":"::parser::range::take_until_range","value":"pub fn take_until_range<Input>(Input::Range) -> TakeUntilRange<Input> where\nInput: RangeStream","parent":null,"children":[],"decl_id":null,"docs":" Zero-copy parser which reads a range of 0 or more tokens until `r` is found.","sig":null,"attributes":[{"value":"/ Zero-copy parser which reads a range of 0 or more tokens until `r` is found.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377097,"byte_end":377177,"line_start":508,"line_end":508,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377178,"byte_end":377181,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ The range `r` will not be committed. If `r` is not found, the parser will","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377182,"byte_end":377259,"line_start":510,"line_end":510,"column_start":1,"column_end":78}},{"value":"/ return an error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377260,"byte_end":377280,"line_start":511,"line_end":511,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377281,"byte_end":377284,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ [`repeat::take_until`][] is a non-`RangeStream` alternative.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377285,"byte_end":377349,"line_start":513,"line_end":513,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377350,"byte_end":377353,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ [`repeat::take_until`]: ../../parser/repeat/fn.take_until.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377354,"byte_end":377420,"line_start":515,"line_end":515,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377421,"byte_end":377428,"line_start":516,"line_end":516,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377429,"byte_end":377456,"line_start":517,"line_end":517,"column_start":1,"column_end":28}},{"value":"/ # use combine::parser::range::{range, take_until_range};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377457,"byte_end":377517,"line_start":518,"line_end":518,"column_start":1,"column_end":61}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377518,"byte_end":377539,"line_start":519,"line_end":519,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377540,"byte_end":377557,"line_start":520,"line_end":520,"column_start":1,"column_end":18}},{"value":"/ let mut parser = take_until_range(\"\\r\\n\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377558,"byte_end":377604,"line_start":521,"line_end":521,"column_start":1,"column_end":47}},{"value":"/ let result = parser.parse(\"To: user@example.com\\r\\n\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377605,"byte_end":377663,"line_start":522,"line_end":522,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(result, Ok((\"To: user@example.com\", \"\\r\\n\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377664,"byte_end":377725,"line_start":523,"line_end":523,"column_start":1,"column_end":62}},{"value":"/ let result = parser.parse(\"Hello, world\\n\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377726,"byte_end":377774,"line_start":524,"line_end":524,"column_start":1,"column_end":49}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377775,"byte_end":377804,"line_start":525,"line_end":525,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377805,"byte_end":377812,"line_start":526,"line_end":526,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377813,"byte_end":377820,"line_start":527,"line_end":527,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7085},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378045,"byte_end":378050,"line_start":538,"line_end":538,"column_start":5,"column_end":10},"name":"Found","qualname":"::parser::range::TakeRange::Found","value":"TakeRange::Found(usize)","parent":{"krate":0,"index":7084},"children":[],"decl_id":null,"docs":" Found the pattern at this offset\n","sig":null,"attributes":[{"value":"/ Found the pattern at this offset","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378004,"byte_end":378040,"line_start":537,"line_end":537,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7088},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378142,"byte_end":378150,"line_start":540,"line_end":540,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::parser::range::TakeRange::NotFound","value":"TakeRange::NotFound(usize)","parent":{"krate":0,"index":7084},"children":[],"decl_id":null,"docs":" Did not find the pattern but the parser can skip ahead to this offset.\n","sig":null,"attributes":[{"value":"/ Did not find the pattern but the parser can skip ahead to this offset.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378063,"byte_end":378137,"line_start":539,"line_end":539,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":7084},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":377988,"byte_end":377997,"line_start":536,"line_end":536,"column_start":10,"column_end":19},"name":"TakeRange","qualname":"::parser::range::TakeRange","value":"pub enum TakeRange {\n\n    /// Found the pattern at this offset\n    Found(usize),\n\n    /// Did not find the pattern but the parser can skip ahead to this offset.\n    NotFound(usize),\n}","parent":null,"children":[{"krate":0,"index":7085},{"krate":0,"index":7088}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2357},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378388,"byte_end":378394,"line_start":552,"line_end":552,"column_start":12,"column_end":18},"name":"TakeFn","qualname":"::parser::range::TakeFn","value":"TakeFn {  }","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2370},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380609,"byte_end":380616,"line_start":622,"line_end":622,"column_start":8,"column_end":15},"name":"take_fn","qualname":"::parser::range::take_fn","value":"pub fn take_fn<F, R, Input>(F) -> TakeFn<F, Input> where\nF: FnMut(Input::Range) -> R, R: Into<TakeRange>, Input: RangeStream,\nInput::Range: crate::stream::Range","parent":null,"children":[],"decl_id":null,"docs":" Searches the entire range using `searcher` and then consumes a range of `Some(n)`.\n If `f` can not find anything in the range it must return `None/NotFound` which indicates an end of input error.","sig":null,"attributes":[{"value":"/ Searches the entire range using `searcher` and then consumes a range of `Some(n)`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380095,"byte_end":380181,"line_start":614,"line_end":614,"column_start":1,"column_end":87}},{"value":"/ If `f` can not find anything in the range it must return `None/NotFound` which indicates an end of input error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380182,"byte_end":380297,"line_start":615,"line_end":615,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380298,"byte_end":380301,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ If partial parsing is used the `TakeRange` enum can be returned instead of `Option`. By","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380302,"byte_end":380393,"line_start":617,"line_end":617,"column_start":1,"column_end":92}},{"value":"/ returning `TakeRange::NotFound(n)` it indicates that the input can skip ahead until `n`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380394,"byte_end":380485,"line_start":618,"line_end":618,"column_start":1,"column_end":92}},{"value":"/ when parsing is next resumed.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380486,"byte_end":380519,"line_start":619,"line_end":619,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380520,"byte_end":380523,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ See [`take_until_bytes`](../byte/fn.take_until_bytes.html) for a usecase.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":380524,"byte_end":380601,"line_start":621,"line_end":621,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":381440,"byte_end":381453,"line_start":653,"line_end":653,"column_start":8,"column_end":21},"name":"length_prefix","qualname":"::parser::range::length_prefix","value":"length_prefix { len }","parent":null,"children":[{"krate":0,"index":7102},{"krate":0,"index":7103}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":15966,"byte_end":15976,"line_start":430,"line_end":430,"column_start":11,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":7102},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":381464,"byte_end":381467,"line_start":653,"line_end":653,"column_start":32,"column_end":35},"name":"len","qualname":"::parser::range::length_prefix::len","value":"P","parent":{"krate":0,"index":7099},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7117},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":381440,"byte_end":381453,"line_start":653,"line_end":653,"column_start":8,"column_end":21},"name":"length_prefix","qualname":"::parser::range::length_prefix","value":"pub fn length_prefix<Input, P>(P) -> length_prefix<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: RangeStream, P: Parser<Input>,\nusize: TryFrom<P::Output>, <usize as TryFrom<P::Output>>::Error: StdError +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Takes a parser which parses a `length` then extracts a range of that length and returns it.\n Commonly used in binary formats","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":2374},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"repeat","qualname":"::parser::repeat","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":10010},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":10034},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":10044},{"krate":0,"index":2413},{"krate":0,"index":7124},{"krate":0,"index":7131},{"krate":0,"index":7141},{"krate":0,"index":7147},{"krate":0,"index":7153},{"krate":0,"index":7164},{"krate":0,"index":7170},{"krate":0,"index":7181},{"krate":0,"index":7177},{"krate":0,"index":2414},{"krate":0,"index":2419},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2437},{"krate":0,"index":7186},{"krate":0,"index":7193},{"krate":0,"index":7204},{"krate":0,"index":2441},{"krate":0,"index":2453},{"krate":0,"index":2463},{"krate":0,"index":2478},{"krate":0,"index":7210},{"krate":0,"index":7220},{"krate":0,"index":7216},{"krate":0,"index":2486},{"krate":0,"index":2497},{"krate":0,"index":7225},{"krate":0,"index":7235},{"krate":0,"index":7231},{"krate":0,"index":2501},{"krate":0,"index":2511},{"krate":0,"index":7242},{"krate":0,"index":7244},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":7246},{"krate":0,"index":7251},{"krate":0,"index":7260},{"krate":0,"index":7265},{"krate":0,"index":7270},{"krate":0,"index":7279},{"krate":0,"index":7284},{"krate":0,"index":7296},{"krate":0,"index":7291},{"krate":0,"index":2521},{"krate":0,"index":2532},{"krate":0,"index":7304},{"krate":0,"index":7316},{"krate":0,"index":7311},{"krate":0,"index":2537},{"krate":0,"index":2549},{"krate":0,"index":7324},{"krate":0,"index":7336},{"krate":0,"index":7331},{"krate":0,"index":2554},{"krate":0,"index":2565},{"krate":0,"index":7342},{"krate":0,"index":7354},{"krate":0,"index":7349},{"krate":0,"index":2570},{"krate":0,"index":2583},{"krate":0,"index":7360},{"krate":0,"index":7370},{"krate":0,"index":7366},{"krate":0,"index":2588},{"krate":0,"index":2597},{"krate":0,"index":7375},{"krate":0,"index":7385},{"krate":0,"index":7381},{"krate":0,"index":2601},{"krate":0,"index":2609},{"krate":0,"index":7388},{"krate":0,"index":7397},{"krate":0,"index":7393},{"krate":0,"index":2613},{"krate":0,"index":2621},{"krate":0,"index":7402},{"krate":0,"index":7407},{"krate":0,"index":7416},{"krate":0,"index":7421},{"krate":0,"index":7433},{"krate":0,"index":7428},{"krate":0,"index":2625},{"krate":0,"index":2634},{"krate":0,"index":7439},{"krate":0,"index":7446},{"krate":0,"index":7456},{"krate":0,"index":7462},{"krate":0,"index":7467},{"krate":0,"index":2639},{"krate":0,"index":2646},{"krate":0,"index":2655},{"krate":0,"index":2659},{"krate":0,"index":2666},{"krate":0,"index":2681}],"decl_id":null,"docs":" Combinators which take one or more parsers and applies them repeatedly.\n","sig":null,"attributes":[{"value":"/ Combinators which take one or more parsers and applies them repeatedly.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":384767,"byte_end":384842,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7124},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":385371,"byte_end":385376,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Count","qualname":"::parser::repeat::Count","value":"Count { count, parser }","parent":null,"children":[{"krate":0,"index":7128},{"krate":0,"index":7129},{"krate":0,"index":7130}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7128},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":385781,"byte_end":385786,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"name":"count","qualname":"::parser::repeat::Count::count","value":"usize","parent":{"krate":0,"index":7124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7129},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":385795,"byte_end":385801,"line_start":39,"line_end":39,"column_start":41,"column_end":47},"name":"parser","qualname":"::parser::repeat::Count::parser","value":"P","parent":{"krate":0,"index":7124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7141},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":385762,"byte_end":385767,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"count","qualname":"::parser::repeat::count","value":"pub fn count<F, Input, P>(usize, P) -> Count<F, Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: Stream, P: Parser<Input>,\nF: Extend<P::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from zero up to `count` times.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7147},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":385974,"byte_end":385983,"line_start":51,"line_end":51,"column_start":16,"column_end":25},"name":"SkipCount","qualname":"::parser::repeat::SkipCount","value":"SkipCount { count, parser }","parent":null,"children":[{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7152}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7150},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":386544,"byte_end":386549,"line_start":66,"line_end":66,"column_start":33,"column_end":38},"name":"count","qualname":"::parser::repeat::SkipCount::count","value":"usize","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7151},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":386558,"byte_end":386564,"line_start":66,"line_end":66,"column_start":47,"column_end":53},"name":"parser","qualname":"::parser::repeat::SkipCount::parser","value":"P","parent":{"krate":0,"index":7147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7164},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":386523,"byte_end":386533,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"skip_count","qualname":"::parser::repeat::skip_count","value":"pub fn skip_count<Input, P>(usize, P) -> SkipCount<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from zero up to `count` times skipping the output of `parser`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7170},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":386752,"byte_end":386763,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"CountMinMax","qualname":"::parser::repeat::CountMinMax","value":"CountMinMax {  }","parent":null,"children":[{"krate":0,"index":7173},{"krate":0,"index":7174},{"krate":0,"index":7175},{"krate":0,"index":7176}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2437},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389512,"byte_end":389525,"line_start":186,"line_end":186,"column_start":8,"column_end":21},"name":"count_min_max","qualname":"::parser::repeat::count_min_max","value":"pub fn count_min_max<F, Input, P>(usize, usize, P) -> CountMinMax<F, P> where\nInput: Stream, P: Parser<Input>, F: Extend<P::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from `min` to `max` times (including `min` and `max`).","sig":null,"attributes":[{"value":"/ Parses `parser` from `min` to `max` times (including `min` and `max`).","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389002,"byte_end":389076,"line_start":167,"line_end":167,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389077,"byte_end":389080,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389081,"byte_end":389088,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389089,"byte_end":389116,"line_start":170,"line_end":170,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389117,"byte_end":389138,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy::{Error, Info};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389139,"byte_end":389186,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389187,"byte_end":389204,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ let mut parser = count_min_max(2, 2, token(b'a'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389205,"byte_end":389259,"line_start":174,"line_end":174,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389260,"byte_end":389263,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ let result = parser.parse(&b\"aaab\"[..]);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389264,"byte_end":389308,"line_start":176,"line_end":176,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(result, Ok((b\"aa\"[..].to_owned(), &b\"ab\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389309,"byte_end":389372,"line_start":177,"line_end":177,"column_start":1,"column_end":64}},{"value":"/ let result = parser.parse(&b\"ab\"[..]);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389373,"byte_end":389415,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389416,"byte_end":389445,"line_start":179,"line_end":179,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389446,"byte_end":389453,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389454,"byte_end":389461,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389462,"byte_end":389465,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389466,"byte_end":389478,"line_start":183,"line_end":183,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389479,"byte_end":389482,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ If `min` > `max`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389483,"byte_end":389504,"line_start":185,"line_end":185,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7186},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":389830,"byte_end":389845,"line_start":203,"line_end":203,"column_start":16,"column_end":31},"name":"SkipCountMinMax","qualname":"::parser::repeat::SkipCountMinMax","value":"SkipCountMinMax { min, max, parser }","parent":null,"children":[{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7191},{"krate":0,"index":7192}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7189},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":390544,"byte_end":390547,"line_start":224,"line_end":224,"column_start":41,"column_end":44},"name":"min","qualname":"::parser::repeat::SkipCountMinMax::min","value":"usize","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7190},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":390556,"byte_end":390559,"line_start":224,"line_end":224,"column_start":53,"column_end":56},"name":"max","qualname":"::parser::repeat::SkipCountMinMax::max","value":"usize","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7191},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":390568,"byte_end":390574,"line_start":224,"line_end":224,"column_start":65,"column_end":71},"name":"parser","qualname":"::parser::repeat::SkipCountMinMax::parser","value":"P","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7204},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":390515,"byte_end":390533,"line_start":224,"line_end":224,"column_start":12,"column_end":30},"name":"skip_count_min_max","qualname":"::parser::repeat::skip_count_min_max","value":"pub fn skip_count_min_max<Input, P>(usize, usize, P)\n-> SkipCountMinMax<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` from `min` to `max` times (including `min` and `max`)\n skipping the output of `parser`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2441},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":390745,"byte_end":390749,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"Iter","qualname":"::parser::repeat::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":391173,"byte_end":391176,"line_start":258,"line_end":258,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"pub fn new(P, M, &'a mut Input, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":391581,"byte_end":391592,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"into_result","qualname":"<Iter>::into_result","value":"pub fn into_result<O>(Self, O) -> StdParseResult<O, Input>","parent":null,"children":[],"decl_id":null,"docs":" Converts the iterator to a `ParseResult`, returning `Ok` if the parsing so far has be done\n without any errors which committed data.\n","sig":null,"attributes":[{"value":"/ Converts the iterator to a `ParseResult`, returning `Ok` if the parsing so far has be done","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":391426,"byte_end":391520,"line_start":268,"line_end":268,"column_start":5,"column_end":99}},{"value":"/ without any errors which committed data.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":391525,"byte_end":391569,"line_start":269,"line_end":269,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":7210},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":394678,"byte_end":394682,"line_start":378,"line_end":378,"column_start":12,"column_end":16},"name":"Many","qualname":"::parser::repeat::Many","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2497},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396520,"byte_end":396524,"line_start":441,"line_end":441,"column_start":8,"column_end":12},"name":"many","qualname":"::parser::repeat::many","value":"pub fn many<F, Input, P>(P) -> Many<F, P> where Input: Stream,\nP: Parser<Input>, F: Extend<P::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` zero or more times returning a collection with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `p` zero or more times returning a collection with the values from `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":395753,"byte_end":395835,"line_start":421,"line_end":421,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":395836,"byte_end":395839,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":395840,"byte_end":395934,"line_start":423,"line_end":423,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":395935,"byte_end":396031,"line_start":424,"line_end":424,"column_start":1,"column_end":97}},{"value":"/ calling many, `many::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396032,"byte_end":396078,"line_start":425,"line_end":425,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396079,"byte_end":396082,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ NOTE: If `p` can succeed without consuming any input this may hang forever as `many` will","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396083,"byte_end":396176,"line_start":427,"line_end":427,"column_start":1,"column_end":94}},{"value":"/ repeatedly use `p` to parse the same location in the input every time","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396177,"byte_end":396250,"line_start":428,"line_end":428,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396251,"byte_end":396254,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396255,"byte_end":396262,"line_start":430,"line_end":430,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396263,"byte_end":396290,"line_start":431,"line_end":431,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396291,"byte_end":396312,"line_start":432,"line_end":432,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396313,"byte_end":396352,"line_start":433,"line_end":433,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396353,"byte_end":396370,"line_start":434,"line_end":434,"column_start":1,"column_end":18}},{"value":"/ let result = many(digit())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396371,"byte_end":396401,"line_start":435,"line_end":435,"column_start":1,"column_end":31}},{"value":"/     .parse(\"123A\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396402,"byte_end":396424,"line_start":436,"line_end":436,"column_start":1,"column_end":23}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396425,"byte_end":396447,"line_start":437,"line_end":437,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(vec!['1', '2', '3']));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396448,"byte_end":396496,"line_start":438,"line_end":438,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396497,"byte_end":396504,"line_start":439,"line_end":439,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396505,"byte_end":396512,"line_start":440,"line_end":440,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7225},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396705,"byte_end":396710,"line_start":451,"line_end":451,"column_start":12,"column_end":17},"name":"Many1","qualname":"::parser::repeat::Many1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2511},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399038,"byte_end":399043,"line_start":529,"line_end":529,"column_start":8,"column_end":13},"name":"many1","qualname":"::parser::repeat::many1","value":"pub fn many1<F, Input, P>(P) -> Many1<F, P> where Input: Stream,\nF: Extend<P::Output> + Default, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times returning a collection with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times returning a collection with the values from `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398293,"byte_end":398374,"line_start":509,"line_end":509,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398375,"byte_end":398378,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398379,"byte_end":398473,"line_start":511,"line_end":511,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398474,"byte_end":398570,"line_start":512,"line_end":512,"column_start":1,"column_end":97}},{"value":"/ calling many1 `many1::<Vec<_>, _>(...)`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398571,"byte_end":398615,"line_start":513,"line_end":513,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398616,"byte_end":398619,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ NOTE: If `p` can succeed without consuming any input this may hang forever as `many1` will","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398620,"byte_end":398714,"line_start":515,"line_end":515,"column_start":1,"column_end":95}},{"value":"/ repeatedly use `p` to parse the same location in the input every time","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398715,"byte_end":398788,"line_start":516,"line_end":516,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398789,"byte_end":398792,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398793,"byte_end":398796,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398797,"byte_end":398804,"line_start":519,"line_end":519,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398805,"byte_end":398832,"line_start":520,"line_end":520,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398833,"byte_end":398854,"line_start":521,"line_end":521,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398855,"byte_end":398894,"line_start":522,"line_end":522,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398895,"byte_end":398912,"line_start":523,"line_end":523,"column_start":1,"column_end":18}},{"value":"/ let result = many1::<Vec<_>, _, _>(digit())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398913,"byte_end":398960,"line_start":524,"line_end":524,"column_start":1,"column_end":48}},{"value":"/     .parse(\"A123\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398961,"byte_end":398984,"line_start":525,"line_end":525,"column_start":1,"column_end":24}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":398985,"byte_end":399014,"line_start":526,"line_end":526,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399015,"byte_end":399022,"line_start":527,"line_end":527,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399023,"byte_end":399030,"line_start":528,"line_end":528,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7242},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399265,"byte_end":399269,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"Sink","qualname":"::parser::repeat::Sink","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7246},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399521,"byte_end":399529,"line_start":559,"line_end":559,"column_start":16,"column_end":24},"name":"SkipMany","qualname":"::parser::repeat::SkipMany","value":"SkipMany { p }","parent":null,"children":[{"krate":0,"index":7249},{"krate":0,"index":7250}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7249},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":400110,"byte_end":400111,"line_start":576,"line_end":576,"column_start":28,"column_end":29},"name":"p","qualname":"::parser::repeat::SkipMany::p","value":"P","parent":{"krate":0,"index":7246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7260},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":400090,"byte_end":400099,"line_start":576,"line_end":576,"column_start":8,"column_end":17},"name":"skip_many","qualname":"::parser::repeat::skip_many","value":"pub fn skip_many<Input, P>(P) -> SkipMany<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` zero or more times ignoring the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7265},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":400235,"byte_end":400244,"line_start":586,"line_end":586,"column_start":16,"column_end":25},"name":"SkipMany1","qualname":"::parser::repeat::SkipMany1","value":"SkipMany1 { p }","parent":null,"children":[{"krate":0,"index":7268},{"krate":0,"index":7269}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7268},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":400831,"byte_end":400832,"line_start":603,"line_end":603,"column_start":29,"column_end":30},"name":"p","qualname":"::parser::repeat::SkipMany1::p","value":"P","parent":{"krate":0,"index":7265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7279},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":400810,"byte_end":400820,"line_start":603,"line_end":603,"column_start":8,"column_end":18},"name":"skip_many1","qualname":"::parser::repeat::skip_many1","value":"pub fn skip_many1<Input, P>(P) -> SkipMany1<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times ignoring the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7284},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":400966,"byte_end":400971,"line_start":613,"line_end":613,"column_start":12,"column_end":17},"name":"SepBy","qualname":"::parser::repeat::SepBy","value":"SepBy {  }","parent":null,"children":[{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2532},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402773,"byte_end":402779,"line_start":673,"line_end":673,"column_start":8,"column_end":14},"name":"sep_by","qualname":"::parser::repeat::sep_by","value":"pub fn sep_by<F, Input, P, S>(P, S) -> SepBy<F, P, S> where Input: Stream,\nF: Extend<P::Output> + Default, P: Parser<Input>, S: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` zero or more time separated by `separator`, returning a collection with the\n values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` zero or more time separated by `separator`, returning a collection with the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402028,"byte_end":402123,"line_start":654,"line_end":654,"column_start":1,"column_end":96}},{"value":"/ values from `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402124,"byte_end":402144,"line_start":655,"line_end":655,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402145,"byte_end":402148,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402149,"byte_end":402243,"line_start":657,"line_end":657,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402244,"byte_end":402340,"line_start":658,"line_end":658,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402341,"byte_end":402393,"line_start":659,"line_end":659,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402394,"byte_end":402397,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402398,"byte_end":402405,"line_start":661,"line_end":661,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402406,"byte_end":402433,"line_start":662,"line_end":662,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402434,"byte_end":402455,"line_start":663,"line_end":663,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402456,"byte_end":402495,"line_start":664,"line_end":664,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402496,"byte_end":402513,"line_start":665,"line_end":665,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_by(digit(), token(','));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402514,"byte_end":402563,"line_start":666,"line_end":666,"column_start":1,"column_end":50}},{"value":"/ let result_ok = parser.parse(\"1,2,3\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402564,"byte_end":402606,"line_start":667,"line_end":667,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402607,"byte_end":402664,"line_start":668,"line_end":668,"column_start":1,"column_end":58}},{"value":"/ let result_ok2 = parser.parse(\"\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402665,"byte_end":402703,"line_start":669,"line_end":669,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(result_ok2, Ok((vec![], \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402704,"byte_end":402749,"line_start":670,"line_end":670,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402750,"byte_end":402757,"line_start":671,"line_end":671,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":402758,"byte_end":402765,"line_start":672,"line_end":672,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7304},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":403066,"byte_end":403072,"line_start":688,"line_end":688,"column_start":12,"column_end":18},"name":"SepBy1","qualname":"::parser::repeat::SepBy1","value":"SepBy1 {  }","parent":null,"children":[{"krate":0,"index":7308},{"krate":0,"index":7309},{"krate":0,"index":7310}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2549},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405881,"byte_end":405888,"line_start":780,"line_end":780,"column_start":8,"column_end":15},"name":"sep_by1","qualname":"::parser::repeat::sep_by1","value":"pub fn sep_by1<F, Input, P, S>(P, S) -> SepBy1<F, P, S> where Input: Stream,\nF: Extend<P::Output> + Default, P: Parser<Input>, S: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` one or more time separated by `separator`, returning a collection with the\n values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` one or more time separated by `separator`, returning a collection with the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":404742,"byte_end":404836,"line_start":752,"line_end":752,"column_start":1,"column_end":95}},{"value":"/ values from `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":404837,"byte_end":404857,"line_start":753,"line_end":753,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":404858,"byte_end":404861,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":404862,"byte_end":404956,"line_start":755,"line_end":755,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":404957,"byte_end":405053,"line_start":756,"line_end":756,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by1::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405054,"byte_end":405107,"line_start":757,"line_end":757,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405108,"byte_end":405111,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405112,"byte_end":405119,"line_start":759,"line_end":759,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405120,"byte_end":405147,"line_start":760,"line_end":760,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405148,"byte_end":405169,"line_start":761,"line_end":761,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405170,"byte_end":405209,"line_start":762,"line_end":762,"column_start":1,"column_end":40}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405210,"byte_end":405242,"line_start":763,"line_end":763,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405243,"byte_end":405303,"line_start":764,"line_end":764,"column_start":1,"column_end":61}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405304,"byte_end":405321,"line_start":765,"line_end":765,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_by1(digit(), token(','));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405322,"byte_end":405372,"line_start":766,"line_end":766,"column_start":1,"column_end":51}},{"value":"/ let result_ok = parser.easy_parse(position::Stream::new(\"1,2,3\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405373,"byte_end":405442,"line_start":767,"line_end":767,"column_start":1,"column_end":70}},{"value":"/                       .map(|(vec, state)| (vec, state.input));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405443,"byte_end":405509,"line_start":768,"line_end":768,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405510,"byte_end":405567,"line_start":769,"line_end":769,"column_start":1,"column_end":58}},{"value":"/ let result_err = parser.easy_parse(position::Stream::new(\"\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405568,"byte_end":405634,"line_start":770,"line_end":770,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_err, Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405635,"byte_end":405680,"line_start":771,"line_end":771,"column_start":1,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405681,"byte_end":405725,"line_start":772,"line_end":772,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405726,"byte_end":405747,"line_start":773,"line_end":773,"column_start":1,"column_end":22}},{"value":"/         easy::Error::end_of_input(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405748,"byte_end":405788,"line_start":774,"line_end":774,"column_start":1,"column_end":41}},{"value":"/         easy::Error::Expected(\"digit\".into())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405789,"byte_end":405838,"line_start":775,"line_end":775,"column_start":1,"column_end":50}},{"value":"/     ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405839,"byte_end":405848,"line_start":776,"line_end":776,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405849,"byte_end":405857,"line_start":777,"line_end":777,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405858,"byte_end":405865,"line_start":778,"line_end":778,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":405866,"byte_end":405873,"line_start":779,"line_end":779,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7324},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":406177,"byte_end":406185,"line_start":795,"line_end":795,"column_start":12,"column_end":20},"name":"SepEndBy","qualname":"::parser::repeat::SepEndBy","value":"SepEndBy {  }","parent":null,"children":[{"krate":0,"index":7328},{"krate":0,"index":7329},{"krate":0,"index":7330}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2565},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407959,"byte_end":407969,"line_start":854,"line_end":854,"column_start":8,"column_end":18},"name":"sep_end_by","qualname":"::parser::repeat::sep_end_by","value":"pub fn sep_end_by<F, Input, P, S>(P, S) -> SepEndBy<F, P, S> where\nInput: Stream, F: Extend<P::Output> + Default, P: Parser<Input>,\nS: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` zero or more times separated and ended by `separator`, returning a collection\n with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` zero or more times separated and ended by `separator`, returning a collection","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407181,"byte_end":407278,"line_start":835,"line_end":835,"column_start":1,"column_end":98}},{"value":"/ with the values from `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407279,"byte_end":407308,"line_start":836,"line_end":836,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407309,"byte_end":407312,"line_start":837,"line_end":837,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be supplied, either by","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407313,"byte_end":407407,"line_start":838,"line_end":838,"column_start":1,"column_end":95}},{"value":"/ annotating the resulting type binding `let collection: Vec<_> = ...` or by specializing when","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407408,"byte_end":407504,"line_start":839,"line_end":839,"column_start":1,"column_end":97}},{"value":"/ calling `sep_by`, `sep_by::<Vec<_>, _, _>(...)`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407505,"byte_end":407556,"line_start":840,"line_end":840,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407557,"byte_end":407560,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407561,"byte_end":407568,"line_start":842,"line_end":842,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407569,"byte_end":407596,"line_start":843,"line_end":843,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407597,"byte_end":407618,"line_start":844,"line_end":844,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407619,"byte_end":407658,"line_start":845,"line_end":845,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407659,"byte_end":407676,"line_start":846,"line_end":846,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_end_by(digit(), token(';'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407677,"byte_end":407730,"line_start":847,"line_end":847,"column_start":1,"column_end":54}},{"value":"/ let result_ok = parser.parse(\"1;2;3;\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407731,"byte_end":407774,"line_start":848,"line_end":848,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407775,"byte_end":407832,"line_start":849,"line_end":849,"column_start":1,"column_end":58}},{"value":"/ let result_ok2 = parser.parse(\"1;2;3\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407833,"byte_end":407876,"line_start":850,"line_end":850,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(result_ok2, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407877,"byte_end":407935,"line_start":851,"line_end":851,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407936,"byte_end":407943,"line_start":852,"line_end":852,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":407944,"byte_end":407951,"line_start":853,"line_end":853,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7342},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":408262,"byte_end":408271,"line_start":869,"line_end":869,"column_start":12,"column_end":21},"name":"SepEndBy1","qualname":"::parser::repeat::SepEndBy1","value":"SepEndBy1 {  }","parent":null,"children":[{"krate":0,"index":7346},{"krate":0,"index":7347},{"krate":0,"index":7348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2583},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411261,"byte_end":411272,"line_start":966,"line_end":966,"column_start":8,"column_end":19},"name":"sep_end_by1","qualname":"::parser::repeat::sep_end_by1","value":"pub fn sep_end_by1<F, Input, P, S>(P, S) -> SepEndBy1<F, P, S> where\nInput: Stream, F: Extend<P::Output> + Default, P: Parser<Input>,\nS: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `parser` one or more times separated and ended by `separator`, returning a collection\n with the values from `p`.","sig":null,"attributes":[{"value":"/ Parses `parser` one or more times separated and ended by `separator`, returning a collection","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410106,"byte_end":410202,"line_start":938,"line_end":938,"column_start":1,"column_end":97}},{"value":"/ with the values from `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410203,"byte_end":410232,"line_start":939,"line_end":939,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410233,"byte_end":410236,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ If the returned collection cannot be inferred type annotations must be","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410237,"byte_end":410311,"line_start":941,"line_end":941,"column_start":1,"column_end":75}},{"value":"/ supplied, either by annotating the resulting type binding `let collection: Vec<_> = ...` or by","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410312,"byte_end":410410,"line_start":942,"line_end":942,"column_start":1,"column_end":99}},{"value":"/ specializing when calling `sep_by`, `sep_by1::<Vec<_>, _, _>(...)`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410411,"byte_end":410482,"line_start":943,"line_end":943,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410483,"byte_end":410486,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410487,"byte_end":410494,"line_start":945,"line_end":945,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410495,"byte_end":410522,"line_start":946,"line_end":946,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410523,"byte_end":410544,"line_start":947,"line_end":947,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410545,"byte_end":410584,"line_start":948,"line_end":948,"column_start":1,"column_end":40}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410585,"byte_end":410617,"line_start":949,"line_end":949,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410618,"byte_end":410678,"line_start":950,"line_end":950,"column_start":1,"column_end":61}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410679,"byte_end":410696,"line_start":951,"line_end":951,"column_start":1,"column_end":18}},{"value":"/ let mut parser = sep_end_by1(digit(), token(';'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410697,"byte_end":410751,"line_start":952,"line_end":952,"column_start":1,"column_end":55}},{"value":"/ let result_ok = parser.easy_parse(position::Stream::new(\"1;2;3;\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410752,"byte_end":410822,"line_start":953,"line_end":953,"column_start":1,"column_end":71}},{"value":"/                       .map(|(vec, state)| (vec, state.input));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410823,"byte_end":410889,"line_start":954,"line_end":954,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_ok, Ok((vec!['1', '2', '3'], \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410890,"byte_end":410947,"line_start":955,"line_end":955,"column_start":1,"column_end":58}},{"value":"/ let result_err = parser.easy_parse(position::Stream::new(\"\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":410948,"byte_end":411014,"line_start":956,"line_end":956,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(result_err, Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411015,"byte_end":411060,"line_start":957,"line_end":957,"column_start":1,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411061,"byte_end":411105,"line_start":958,"line_end":958,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411106,"byte_end":411127,"line_start":959,"line_end":959,"column_start":1,"column_end":22}},{"value":"/         easy::Error::end_of_input(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411128,"byte_end":411168,"line_start":960,"line_end":960,"column_start":1,"column_end":41}},{"value":"/         easy::Error::Expected(\"digit\".into())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411169,"byte_end":411218,"line_start":961,"line_end":961,"column_start":1,"column_end":50}},{"value":"/     ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411219,"byte_end":411228,"line_start":962,"line_end":962,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411229,"byte_end":411237,"line_start":963,"line_end":963,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411238,"byte_end":411245,"line_start":964,"line_end":964,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411246,"byte_end":411253,"line_start":965,"line_end":965,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7360},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411567,"byte_end":411574,"line_start":981,"line_end":981,"column_start":12,"column_end":19},"name":"Chainl1","qualname":"::parser::repeat::Chainl1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2597},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413940,"byte_end":413947,"line_start":1060,"line_end":1060,"column_start":8,"column_end":15},"name":"chainl1","qualname":"::parser::repeat::chainl1","value":"pub fn chainl1<Input, P, Op>(P, Op) -> Chainl1<P, Op> where Input: Stream,\nP: Parser<Input>, Op: Parser<Input>, Op::Output: FnOnce(P::Output, P::Output)\n-> P::Output","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` 1 or more times separated by `op`. The value returned is the one produced by the\n left associative application of the function returned by the parser `op`.","sig":null,"attributes":[{"value":"/ Parses `p` 1 or more times separated by `op`. The value returned is the one produced by the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413405,"byte_end":413500,"line_start":1046,"line_end":1046,"column_start":1,"column_end":96}},{"value":"/ left associative application of the function returned by the parser `op`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413501,"byte_end":413578,"line_start":1047,"line_end":1047,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413579,"byte_end":413582,"line_start":1048,"line_end":1048,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413583,"byte_end":413590,"line_start":1049,"line_end":1049,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413591,"byte_end":413618,"line_start":1050,"line_end":1050,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413619,"byte_end":413640,"line_start":1051,"line_end":1051,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413641,"byte_end":413680,"line_start":1052,"line_end":1052,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413681,"byte_end":413698,"line_start":1053,"line_end":1053,"column_start":1,"column_end":18}},{"value":"/ let number = digit().map(|c: char| c.to_digit(10).unwrap());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413699,"byte_end":413763,"line_start":1054,"line_end":1054,"column_start":1,"column_end":65}},{"value":"/ let sub = token('-').map(|_| |l: u32, r: u32| l - r);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413764,"byte_end":413821,"line_start":1055,"line_end":1055,"column_start":1,"column_end":58}},{"value":"/ let mut parser = chainl1(number, sub);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413822,"byte_end":413864,"line_start":1056,"line_end":1056,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(parser.parse(\"9-3-5\"), Ok((1, \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413865,"byte_end":413916,"line_start":1057,"line_end":1057,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413917,"byte_end":413924,"line_start":1058,"line_end":1058,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":413925,"byte_end":413932,"line_start":1059,"line_end":1059,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7375},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":414191,"byte_end":414198,"line_start":1071,"line_end":1071,"column_start":12,"column_end":19},"name":"Chainr1","qualname":"::parser::repeat::Chainr1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2609},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416321,"byte_end":416328,"line_start":1132,"line_end":1132,"column_start":8,"column_end":15},"name":"chainr1","qualname":"::parser::repeat::chainr1","value":"pub fn chainr1<Input, P, Op>(P, Op) -> Chainr1<P, Op> where Input: Stream,\nP: Parser<Input>, Op: Parser<Input>, Op::Output: FnOnce(P::Output, P::Output)\n-> P::Output","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` one or more times separated by `op`. The value returned is the one produced by the\n right associative application of the function returned by `op`.","sig":null,"attributes":[{"value":"/ Parses `p` one or more times separated by `op`. The value returned is the one produced by the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":415787,"byte_end":415884,"line_start":1118,"line_end":1118,"column_start":1,"column_end":98}},{"value":"/ right associative application of the function returned by `op`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":415885,"byte_end":415952,"line_start":1119,"line_end":1119,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":415953,"byte_end":415956,"line_start":1120,"line_end":1120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":415957,"byte_end":415964,"line_start":1121,"line_end":1121,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":415965,"byte_end":415992,"line_start":1122,"line_end":1122,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":415993,"byte_end":416014,"line_start":1123,"line_end":1123,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416015,"byte_end":416054,"line_start":1124,"line_end":1124,"column_start":1,"column_end":40}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416055,"byte_end":416072,"line_start":1125,"line_end":1125,"column_start":1,"column_end":18}},{"value":"/ let number = digit().map(|c: char| c.to_digit(10).unwrap());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416073,"byte_end":416137,"line_start":1126,"line_end":1126,"column_start":1,"column_end":65}},{"value":"/ let pow = token('^').map(|_| |l: u32, r: u32| l.pow(r));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416138,"byte_end":416198,"line_start":1127,"line_end":1127,"column_start":1,"column_end":61}},{"value":"/ let mut parser = chainr1(number, pow);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416199,"byte_end":416241,"line_start":1128,"line_end":1128,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(parser.parse(\"2^3^2\"), Ok((512, \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416242,"byte_end":416299,"line_start":1129,"line_end":1129,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416300,"byte_end":416305,"line_start":1130,"line_end":1130,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416306,"byte_end":416313,"line_start":1131,"line_end":1131,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7388},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416572,"byte_end":416581,"line_start":1143,"line_end":1143,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::parser::repeat::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":7391},{"krate":0,"index":7392}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2621},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":419178,"byte_end":419188,"line_start":1217,"line_end":1217,"column_start":8,"column_end":18},"name":"take_until","qualname":"::parser::repeat::take_until","value":"pub fn take_until<F, Input, P>(P) -> TakeUntil<F, P> where Input: Stream,\nF: Extend<<Input as StreamOnce>::Token> + Default, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Takes input until `end` is encountered or `end` indicates that it has committed input before\n failing (`attempt` can be used to make it look like it has not committed any input)","sig":null,"attributes":[{"value":"/ Takes input until `end` is encountered or `end` indicates that it has committed input before","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418135,"byte_end":418231,"line_start":1194,"line_end":1194,"column_start":1,"column_end":97}},{"value":"/ failing (`attempt` can be used to make it look like it has not committed any input)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418232,"byte_end":418319,"line_start":1195,"line_end":1195,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418320,"byte_end":418323,"line_start":1196,"line_end":1196,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418324,"byte_end":418331,"line_start":1197,"line_end":1197,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418332,"byte_end":418359,"line_start":1198,"line_end":1198,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418360,"byte_end":418381,"line_start":1199,"line_end":1199,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::char;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418382,"byte_end":418414,"line_start":1200,"line_end":1200,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::byte;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418415,"byte_end":418447,"line_start":1201,"line_end":1201,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::combinator::attempt;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418448,"byte_end":418495,"line_start":1202,"line_end":1202,"column_start":1,"column_end":48}},{"value":"/ # use combine::parser::repeat::take_until;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418496,"byte_end":418542,"line_start":1203,"line_end":1203,"column_start":1,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418543,"byte_end":418560,"line_start":1204,"line_end":1204,"column_start":1,"column_end":18}},{"value":"/ let mut char_parser = take_until(char::digit());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418561,"byte_end":418613,"line_start":1205,"line_end":1205,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(char_parser.parse(\"abc123\"), Ok((\"abc\".to_string(), \"123\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418614,"byte_end":418690,"line_start":1206,"line_end":1206,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418691,"byte_end":418694,"line_start":1207,"line_end":1207,"column_start":1,"column_end":4}},{"value":"/ let mut byte_parser = take_until(byte::bytes(&b\"TAG\"[..]));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418695,"byte_end":418758,"line_start":1208,"line_end":1208,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(byte_parser.parse(&b\"123TAG\"[..]), Ok((b\"123\".to_vec(), &b\"TAG\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418759,"byte_end":418845,"line_start":1209,"line_end":1209,"column_start":1,"column_end":87}},{"value":"/ assert!(byte_parser.parse(&b\"123TATAG\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418846,"byte_end":418904,"line_start":1210,"line_end":1210,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418905,"byte_end":418908,"line_start":1211,"line_end":1211,"column_start":1,"column_end":4}},{"value":"/ // `attempt` must be used if the `end` should be consume input before failing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418909,"byte_end":418990,"line_start":1212,"line_end":1212,"column_start":1,"column_end":82}},{"value":"/ let mut byte_parser = take_until(attempt(byte::bytes(&b\"TAG\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":418991,"byte_end":419063,"line_start":1213,"line_end":1213,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(byte_parser.parse(&b\"123TATAG\"[..]), Ok((b\"123TA\".to_vec(), &b\"TAG\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":419064,"byte_end":419154,"line_start":1214,"line_end":1214,"column_start":1,"column_end":91}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":419155,"byte_end":419162,"line_start":1215,"line_end":1215,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":419163,"byte_end":419170,"line_start":1216,"line_end":1216,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7402},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":419426,"byte_end":419435,"line_start":1230,"line_end":1230,"column_start":16,"column_end":25},"name":"SkipUntil","qualname":"::parser::repeat::SkipUntil","value":"SkipUntil { end }","parent":null,"children":[{"krate":0,"index":7405},{"krate":0,"index":7406}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7405},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":420652,"byte_end":420655,"line_start":1255,"line_end":1255,"column_start":33,"column_end":36},"name":"end","qualname":"::parser::repeat::SkipUntil::end","value":"P","parent":{"krate":0,"index":7402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7416},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":420631,"byte_end":420641,"line_start":1255,"line_end":1255,"column_start":12,"column_end":22},"name":"skip_until","qualname":"::parser::repeat::skip_until","value":"pub fn skip_until<Input, P>(P) -> SkipUntil<Input, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Skips input until `end` is encountered or `end` indicates that it has committed input before\n failing (`attempt` can be used to make it look like it has not committed any input)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7421},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":420820,"byte_end":420831,"line_start":1265,"line_end":1265,"column_start":12,"column_end":23},"name":"RepeatUntil","qualname":"::parser::repeat::RepeatUntil","value":"RepeatUntil {  }","parent":null,"children":[{"krate":0,"index":7425},{"krate":0,"index":7426},{"krate":0,"index":7427}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2634},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":422767,"byte_end":422779,"line_start":1325,"line_end":1325,"column_start":8,"column_end":20},"name":"repeat_until","qualname":"::parser::repeat::repeat_until","value":"pub fn repeat_until<F, Input, P, E>(P, E) -> RepeatUntil<F, P, E> where\nInput: Stream, F: Extend<P::Output> + Default, P: Parser<Input>,\nE: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7439},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":423057,"byte_end":423072,"line_start":1340,"line_end":1340,"column_start":16,"column_end":31},"name":"SkipRepeatUntil","qualname":"::parser::repeat::SkipRepeatUntil","value":"SkipRepeatUntil { parser, end }","parent":null,"children":[{"krate":0,"index":7443},{"krate":0,"index":7444},{"krate":0,"index":7445}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7443},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":424390,"byte_end":424396,"line_start":1366,"line_end":1366,"column_start":43,"column_end":49},"name":"parser","qualname":"::parser::repeat::SkipRepeatUntil::parser","value":"P","parent":{"krate":0,"index":7439},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7444},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":424401,"byte_end":424404,"line_start":1366,"line_end":1366,"column_start":54,"column_end":57},"name":"end","qualname":"::parser::repeat::SkipRepeatUntil::end","value":"E","parent":{"krate":0,"index":7439},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7456},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":424359,"byte_end":424376,"line_start":1366,"line_end":1366,"column_start":12,"column_end":29},"name":"repeat_skip_until","qualname":"::parser::repeat::repeat_skip_until","value":"pub fn repeat_skip_until<Input, P, E>(P, E) -> SkipRepeatUntil<Input, P, E>\nwhere\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, P: Parser<Input>, E: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Skips input until `end` is encountered or `end` indicates that it has committed input before\n failing (`attempt` can be used to continue skipping even if `end` has committed input)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":7462},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":424604,"byte_end":424616,"line_start":1377,"line_end":1377,"column_start":12,"column_end":24},"name":"EscapedState","qualname":"::parser::repeat::EscapedState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2639},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":424657,"byte_end":424664,"line_start":1379,"line_end":1379,"column_start":12,"column_end":19},"name":"Escaped","qualname":"::parser::repeat::Escaped","value":"Escaped {  }","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2655},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428212,"byte_end":428219,"line_start":1472,"line_end":1472,"column_start":8,"column_end":15},"name":"escaped","qualname":"::parser::repeat::escaped","value":"pub fn escaped<Input, P, Q>(P, <Input as StreamOnce>::Token, Q)\n-> Escaped<P, Q, Input::Token> where Input: Stream, P: Parser<Input>,\n<Input as StreamOnce>::Token: PartialEq, Q: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses an escaped string by first applying `parser` which accept the normal characters which do\n not need escaping. Once `parser` can not consume any more input it checks if the next token\n is `escape`. If it is then `escape_parser` is used to parse the escaped character and then\n resumes parsing using `parser`. If `escape` was not found then the parser finishes\n successfully.","sig":null,"attributes":[{"value":"/ Parses an escaped string by first applying `parser` which accept the normal characters which do","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427102,"byte_end":427201,"line_start":1448,"line_end":1448,"column_start":1,"column_end":100}},{"value":"/ not need escaping. Once `parser` can not consume any more input it checks if the next token","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427202,"byte_end":427297,"line_start":1449,"line_end":1449,"column_start":1,"column_end":96}},{"value":"/ is `escape`. If it is then `escape_parser` is used to parse the escaped character and then","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427298,"byte_end":427392,"line_start":1450,"line_end":1450,"column_start":1,"column_end":95}},{"value":"/ resumes parsing using `parser`. If `escape` was not found then the parser finishes","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427393,"byte_end":427479,"line_start":1451,"line_end":1451,"column_start":1,"column_end":87}},{"value":"/ successfully.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427480,"byte_end":427497,"line_start":1452,"line_end":1452,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427498,"byte_end":427501,"line_start":1453,"line_end":1453,"column_start":1,"column_end":4}},{"value":"/ This returns `()` since there isn't a good way to collect the output of the parsers so it is","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427502,"byte_end":427598,"line_start":1454,"line_end":1454,"column_start":1,"column_end":97}},{"value":"/ best paired with one of the `recognize` parsers.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427599,"byte_end":427651,"line_start":1455,"line_end":1455,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427652,"byte_end":427655,"line_start":1456,"line_end":1456,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427656,"byte_end":427663,"line_start":1457,"line_end":1457,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427664,"byte_end":427691,"line_start":1458,"line_end":1458,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427692,"byte_end":427713,"line_start":1459,"line_end":1459,"column_start":1,"column_end":22}},{"value":"/ # use combine::parser::repeat::escaped;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427714,"byte_end":427757,"line_start":1460,"line_end":1460,"column_start":1,"column_end":44}},{"value":"/ # use combine::parser::char;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427758,"byte_end":427790,"line_start":1461,"line_end":1461,"column_start":1,"column_end":33}},{"value":"/ # use combine::parser::range::{recognize, take_while1};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427791,"byte_end":427850,"line_start":1462,"line_end":1462,"column_start":1,"column_end":60}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427851,"byte_end":427868,"line_start":1463,"line_end":1463,"column_start":1,"column_end":18}},{"value":"/     let mut parser = recognize(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427869,"byte_end":427904,"line_start":1464,"line_end":1464,"column_start":1,"column_end":36}},{"value":"/         escaped(take_while1(|c| c != '\"' && c != '\\\\'), '\\\\', one_of(r#\"nr\"\\\"#.chars()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427905,"byte_end":427997,"line_start":1465,"line_end":1465,"column_start":1,"column_end":93}},{"value":"/     );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":427998,"byte_end":428008,"line_start":1466,"line_end":1466,"column_start":1,"column_end":11}},{"value":"/     assert_eq!(parser.parse(r#\"ab\\\"12\\n\\rc\"\"#), Ok((r#\"ab\\\"12\\n\\rc\"#, r#\"\"\"#)));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428009,"byte_end":428093,"line_start":1467,"line_end":1467,"column_start":1,"column_end":85}},{"value":"/     assert!(parser.parse(r#\"\\\"#).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428094,"byte_end":428141,"line_start":1468,"line_end":1468,"column_start":1,"column_end":48}},{"value":"/     assert!(parser.parse(r#\"\\a\"#).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428142,"byte_end":428190,"line_start":1469,"line_end":1469,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428191,"byte_end":428196,"line_start":1470,"line_end":1470,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428197,"byte_end":428204,"line_start":1471,"line_end":1471,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2659},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428551,"byte_end":428558,"line_start":1490,"line_end":1490,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::parser::repeat::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2681},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431784,"byte_end":431791,"line_start":1607,"line_end":1607,"column_start":8,"column_end":15},"name":"iterate","qualname":"::parser::repeat::iterate","value":"pub fn iterate<F, J, P, I, Q>(J, P) -> Iterate<F, J, P> where\nP: FnMut(&J::Item, &mut I) -> Q, Q: Parser<I>, I: Stream, J: IntoIterator +\nClone, F: Extend<Q::Output> + Default","parent":null,"children":[],"decl_id":null,"docs":"\n ```\n # use combine::parser::repeat::{count_min_max, iterate};\n # use combine::*;","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431494,"byte_end":431497,"line_start":1597,"line_end":1597,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431498,"byte_end":431505,"line_start":1598,"line_end":1598,"column_start":1,"column_end":8}},{"value":"/ # use combine::parser::repeat::{count_min_max, iterate};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431506,"byte_end":431566,"line_start":1599,"line_end":1599,"column_start":1,"column_end":61}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431567,"byte_end":431588,"line_start":1600,"line_end":1600,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431589,"byte_end":431592,"line_start":1601,"line_end":1601,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431593,"byte_end":431608,"line_start":1602,"line_end":1602,"column_start":1,"column_end":16}},{"value":"/     iterate(0..3, |&i, _| count_min_max(i, i, any())).parse(\"abbccc\"),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431609,"byte_end":431683,"line_start":1603,"line_end":1603,"column_start":1,"column_end":75}},{"value":"/     Ok((vec![\"\".to_string(), \"a\".to_string(), \"bb\".to_string()], \"ccc\")),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431684,"byte_end":431761,"line_start":1604,"line_end":1604,"column_start":1,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431762,"byte_end":431768,"line_start":1605,"line_end":1605,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":431769,"byte_end":431776,"line_start":1606,"line_end":1606,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2687},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::parser::sequence","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":10058},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":10068},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2714},{"krate":0,"index":2718},{"krate":0,"index":7489},{"krate":0,"index":7494},{"krate":0,"index":7473},{"krate":0,"index":7477},{"krate":0,"index":7518},{"krate":0,"index":7525},{"krate":0,"index":7500},{"krate":0,"index":7505},{"krate":0,"index":7553},{"krate":0,"index":7562},{"krate":0,"index":7533},{"krate":0,"index":7539},{"krate":0,"index":7594},{"krate":0,"index":7605},{"krate":0,"index":7572},{"krate":0,"index":7579},{"krate":0,"index":7641},{"krate":0,"index":7654},{"krate":0,"index":7617},{"krate":0,"index":7625},{"krate":0,"index":7694},{"krate":0,"index":7709},{"krate":0,"index":7668},{"krate":0,"index":7677},{"krate":0,"index":7753},{"krate":0,"index":7770},{"krate":0,"index":7725},{"krate":0,"index":7735},{"krate":0,"index":7818},{"krate":0,"index":7837},{"krate":0,"index":7788},{"krate":0,"index":7799},{"krate":0,"index":7889},{"krate":0,"index":7910},{"krate":0,"index":7857},{"krate":0,"index":7869},{"krate":0,"index":7966},{"krate":0,"index":7989},{"krate":0,"index":7932},{"krate":0,"index":7945},{"krate":0,"index":8049},{"krate":0,"index":8074},{"krate":0,"index":8013},{"krate":0,"index":8027},{"krate":0,"index":8138},{"krate":0,"index":8165},{"krate":0,"index":8100},{"krate":0,"index":8115},{"krate":0,"index":8233},{"krate":0,"index":8262},{"krate":0,"index":8193},{"krate":0,"index":8209},{"krate":0,"index":8334},{"krate":0,"index":8365},{"krate":0,"index":8292},{"krate":0,"index":8309},{"krate":0,"index":8441},{"krate":0,"index":8474},{"krate":0,"index":8397},{"krate":0,"index":8415},{"krate":0,"index":8554},{"krate":0,"index":8589},{"krate":0,"index":8508},{"krate":0,"index":8527},{"krate":0,"index":8673},{"krate":0,"index":8710},{"krate":0,"index":8625},{"krate":0,"index":8645},{"krate":0,"index":8798},{"krate":0,"index":8837},{"krate":0,"index":8748},{"krate":0,"index":8769},{"krate":0,"index":8929},{"krate":0,"index":8970},{"krate":0,"index":8877},{"krate":0,"index":8899},{"krate":0,"index":9066},{"krate":0,"index":9109},{"krate":0,"index":9012},{"krate":0,"index":9035},{"krate":0,"index":9153},{"krate":0,"index":9162},{"krate":0,"index":9158},{"krate":0,"index":2730},{"krate":0,"index":2741},{"krate":0,"index":9170},{"krate":0,"index":9179},{"krate":0,"index":9175},{"krate":0,"index":2745},{"krate":0,"index":2754},{"krate":0,"index":9211},{"krate":0,"index":9226},{"krate":0,"index":9220},{"krate":0,"index":9187},{"krate":0,"index":9206},{"krate":0,"index":9237},{"krate":0,"index":9247},{"krate":0,"index":9243},{"krate":0,"index":2758},{"krate":0,"index":2768},{"krate":0,"index":9252},{"krate":0,"index":9262},{"krate":0,"index":9258},{"krate":0,"index":2773},{"krate":0,"index":2783},{"krate":0,"index":9267},{"krate":0,"index":9277},{"krate":0,"index":9273},{"krate":0,"index":2788},{"krate":0,"index":2798}],"decl_id":null,"docs":" Combinators which take multiple parsers and applies them one after another.\n","sig":null,"attributes":[{"value":"/ Combinators which take multiple parsers and applies them one after another.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":432081,"byte_end":432160,"line_start":1,"line_end":1,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":2709},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":432843,"byte_end":432856,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"SequenceState","qualname":"::parser::sequence::SequenceState","value":"SequenceState { value, state }","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2712},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":432873,"byte_end":432878,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"value","qualname":"::parser::sequence::SequenceState::value","value":"std::option::Option<T>","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2713},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":432899,"byte_end":432904,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"state","qualname":"::parser::sequence::SequenceState::state","value":"U","parent":{"krate":0,"index":2709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7489},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442340,"byte_end":442353,"line_start":282,"line_end":282,"column_start":15,"column_end":28},"name":"PartialState1","qualname":"::parser::sequence::PartialState1","value":"PartialState1 { A }","parent":null,"children":[{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7491},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442355,"byte_end":442356,"line_start":282,"line_end":282,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState1::A","value":"A","parent":{"krate":0,"index":7489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7518},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442373,"byte_end":442386,"line_start":283,"line_end":283,"column_start":15,"column_end":28},"name":"PartialState2","qualname":"::parser::sequence::PartialState2","value":"PartialState2 { A, B }","parent":null,"children":[{"krate":0,"index":7521},{"krate":0,"index":7522},{"krate":0,"index":7523},{"krate":0,"index":7524}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7521},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442388,"byte_end":442389,"line_start":283,"line_end":283,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState2::A","value":"A","parent":{"krate":0,"index":7518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7522},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442391,"byte_end":442392,"line_start":283,"line_end":283,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState2::B","value":"B","parent":{"krate":0,"index":7518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7553},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442409,"byte_end":442422,"line_start":284,"line_end":284,"column_start":15,"column_end":28},"name":"PartialState3","qualname":"::parser::sequence::PartialState3","value":"PartialState3 { A, B, C }","parent":null,"children":[{"krate":0,"index":7557},{"krate":0,"index":7558},{"krate":0,"index":7559},{"krate":0,"index":7560},{"krate":0,"index":7561}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7557},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442424,"byte_end":442425,"line_start":284,"line_end":284,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState3::A","value":"A","parent":{"krate":0,"index":7553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7558},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442427,"byte_end":442428,"line_start":284,"line_end":284,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState3::B","value":"B","parent":{"krate":0,"index":7553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7559},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442430,"byte_end":442431,"line_start":284,"line_end":284,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState3::C","value":"C","parent":{"krate":0,"index":7553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7594},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442448,"byte_end":442461,"line_start":285,"line_end":285,"column_start":15,"column_end":28},"name":"PartialState4","qualname":"::parser::sequence::PartialState4","value":"PartialState4 { A, B, C, D }","parent":null,"children":[{"krate":0,"index":7599},{"krate":0,"index":7600},{"krate":0,"index":7601},{"krate":0,"index":7602},{"krate":0,"index":7603},{"krate":0,"index":7604}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7599},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442463,"byte_end":442464,"line_start":285,"line_end":285,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState4::A","value":"A","parent":{"krate":0,"index":7594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7600},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442466,"byte_end":442467,"line_start":285,"line_end":285,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState4::B","value":"B","parent":{"krate":0,"index":7594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7601},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442469,"byte_end":442470,"line_start":285,"line_end":285,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState4::C","value":"C","parent":{"krate":0,"index":7594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7602},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442472,"byte_end":442473,"line_start":285,"line_end":285,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState4::D","value":"D","parent":{"krate":0,"index":7594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7641},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442490,"byte_end":442503,"line_start":286,"line_end":286,"column_start":15,"column_end":28},"name":"PartialState5","qualname":"::parser::sequence::PartialState5","value":"PartialState5 { A, B, C, D, E }","parent":null,"children":[{"krate":0,"index":7647},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7650},{"krate":0,"index":7651},{"krate":0,"index":7652},{"krate":0,"index":7653}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7647},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442505,"byte_end":442506,"line_start":286,"line_end":286,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState5::A","value":"A","parent":{"krate":0,"index":7641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7648},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442508,"byte_end":442509,"line_start":286,"line_end":286,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState5::B","value":"B","parent":{"krate":0,"index":7641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7649},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442511,"byte_end":442512,"line_start":286,"line_end":286,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState5::C","value":"C","parent":{"krate":0,"index":7641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7650},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442514,"byte_end":442515,"line_start":286,"line_end":286,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState5::D","value":"D","parent":{"krate":0,"index":7641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7651},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442517,"byte_end":442518,"line_start":286,"line_end":286,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState5::E","value":"E","parent":{"krate":0,"index":7641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7694},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442535,"byte_end":442548,"line_start":287,"line_end":287,"column_start":15,"column_end":28},"name":"PartialState6","qualname":"::parser::sequence::PartialState6","value":"PartialState6 { A, B, C, D, E, F }","parent":null,"children":[{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7701},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442550,"byte_end":442551,"line_start":287,"line_end":287,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState6::A","value":"A","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7702},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442553,"byte_end":442554,"line_start":287,"line_end":287,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState6::B","value":"B","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7703},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442556,"byte_end":442557,"line_start":287,"line_end":287,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState6::C","value":"C","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7704},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442559,"byte_end":442560,"line_start":287,"line_end":287,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState6::D","value":"D","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7705},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442562,"byte_end":442563,"line_start":287,"line_end":287,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState6::E","value":"E","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7706},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442565,"byte_end":442566,"line_start":287,"line_end":287,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState6::F","value":"F","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7753},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442583,"byte_end":442596,"line_start":288,"line_end":288,"column_start":15,"column_end":28},"name":"PartialState7","qualname":"::parser::sequence::PartialState7","value":"PartialState7 { A, B, C, D, E, F, G }","parent":null,"children":[{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7764},{"krate":0,"index":7765},{"krate":0,"index":7766},{"krate":0,"index":7767},{"krate":0,"index":7768},{"krate":0,"index":7769}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7761},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442598,"byte_end":442599,"line_start":288,"line_end":288,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState7::A","value":"A","parent":{"krate":0,"index":7753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7762},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442601,"byte_end":442602,"line_start":288,"line_end":288,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState7::B","value":"B","parent":{"krate":0,"index":7753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7763},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442604,"byte_end":442605,"line_start":288,"line_end":288,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState7::C","value":"C","parent":{"krate":0,"index":7753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7764},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442607,"byte_end":442608,"line_start":288,"line_end":288,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState7::D","value":"D","parent":{"krate":0,"index":7753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7765},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442610,"byte_end":442611,"line_start":288,"line_end":288,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState7::E","value":"E","parent":{"krate":0,"index":7753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7766},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442613,"byte_end":442614,"line_start":288,"line_end":288,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState7::F","value":"F","parent":{"krate":0,"index":7753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7767},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442616,"byte_end":442617,"line_start":288,"line_end":288,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState7::G","value":"G","parent":{"krate":0,"index":7753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7818},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442634,"byte_end":442647,"line_start":289,"line_end":289,"column_start":15,"column_end":28},"name":"PartialState8","qualname":"::parser::sequence::PartialState8","value":"PartialState8 { A, B, C, D, E, F, G, H }","parent":null,"children":[{"krate":0,"index":7827},{"krate":0,"index":7828},{"krate":0,"index":7829},{"krate":0,"index":7830},{"krate":0,"index":7831},{"krate":0,"index":7832},{"krate":0,"index":7833},{"krate":0,"index":7834},{"krate":0,"index":7835},{"krate":0,"index":7836}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7827},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442649,"byte_end":442650,"line_start":289,"line_end":289,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState8::A","value":"A","parent":{"krate":0,"index":7818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7828},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442652,"byte_end":442653,"line_start":289,"line_end":289,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState8::B","value":"B","parent":{"krate":0,"index":7818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7829},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442655,"byte_end":442656,"line_start":289,"line_end":289,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState8::C","value":"C","parent":{"krate":0,"index":7818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7830},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442658,"byte_end":442659,"line_start":289,"line_end":289,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState8::D","value":"D","parent":{"krate":0,"index":7818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7831},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442661,"byte_end":442662,"line_start":289,"line_end":289,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState8::E","value":"E","parent":{"krate":0,"index":7818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7832},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442664,"byte_end":442665,"line_start":289,"line_end":289,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState8::F","value":"F","parent":{"krate":0,"index":7818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7833},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442667,"byte_end":442668,"line_start":289,"line_end":289,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState8::G","value":"G","parent":{"krate":0,"index":7818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7834},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442670,"byte_end":442671,"line_start":289,"line_end":289,"column_start":51,"column_end":52},"name":"H","qualname":"::parser::sequence::PartialState8::H","value":"H","parent":{"krate":0,"index":7818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7889},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442688,"byte_end":442701,"line_start":290,"line_end":290,"column_start":15,"column_end":28},"name":"PartialState9","qualname":"::parser::sequence::PartialState9","value":"PartialState9 { A, B, C, D, E, F, G, H, I }","parent":null,"children":[{"krate":0,"index":7899},{"krate":0,"index":7900},{"krate":0,"index":7901},{"krate":0,"index":7902},{"krate":0,"index":7903},{"krate":0,"index":7904},{"krate":0,"index":7905},{"krate":0,"index":7906},{"krate":0,"index":7907},{"krate":0,"index":7908},{"krate":0,"index":7909}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7899},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442703,"byte_end":442704,"line_start":290,"line_end":290,"column_start":30,"column_end":31},"name":"A","qualname":"::parser::sequence::PartialState9::A","value":"A","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7900},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442706,"byte_end":442707,"line_start":290,"line_end":290,"column_start":33,"column_end":34},"name":"B","qualname":"::parser::sequence::PartialState9::B","value":"B","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7901},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442709,"byte_end":442710,"line_start":290,"line_end":290,"column_start":36,"column_end":37},"name":"C","qualname":"::parser::sequence::PartialState9::C","value":"C","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7902},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442712,"byte_end":442713,"line_start":290,"line_end":290,"column_start":39,"column_end":40},"name":"D","qualname":"::parser::sequence::PartialState9::D","value":"D","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7903},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442715,"byte_end":442716,"line_start":290,"line_end":290,"column_start":42,"column_end":43},"name":"E","qualname":"::parser::sequence::PartialState9::E","value":"E","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7904},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442718,"byte_end":442719,"line_start":290,"line_end":290,"column_start":45,"column_end":46},"name":"F","qualname":"::parser::sequence::PartialState9::F","value":"F","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7905},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442721,"byte_end":442722,"line_start":290,"line_end":290,"column_start":48,"column_end":49},"name":"G","qualname":"::parser::sequence::PartialState9::G","value":"G","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7906},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442724,"byte_end":442725,"line_start":290,"line_end":290,"column_start":51,"column_end":52},"name":"H","qualname":"::parser::sequence::PartialState9::H","value":"H","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7907},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442727,"byte_end":442728,"line_start":290,"line_end":290,"column_start":54,"column_end":55},"name":"I","qualname":"::parser::sequence::PartialState9::I","value":"I","parent":{"krate":0,"index":7889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7966},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442745,"byte_end":442759,"line_start":291,"line_end":291,"column_start":15,"column_end":29},"name":"PartialState10","qualname":"::parser::sequence::PartialState10","value":"PartialState10 { A, B, C, D, E, F, G, H, I, J }","parent":null,"children":[{"krate":0,"index":7977},{"krate":0,"index":7978},{"krate":0,"index":7979},{"krate":0,"index":7980},{"krate":0,"index":7981},{"krate":0,"index":7982},{"krate":0,"index":7983},{"krate":0,"index":7984},{"krate":0,"index":7985},{"krate":0,"index":7986},{"krate":0,"index":7987},{"krate":0,"index":7988}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7977},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442761,"byte_end":442762,"line_start":291,"line_end":291,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState10::A","value":"A","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7978},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442764,"byte_end":442765,"line_start":291,"line_end":291,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState10::B","value":"B","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7979},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442767,"byte_end":442768,"line_start":291,"line_end":291,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState10::C","value":"C","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7980},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442770,"byte_end":442771,"line_start":291,"line_end":291,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState10::D","value":"D","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7981},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442773,"byte_end":442774,"line_start":291,"line_end":291,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState10::E","value":"E","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7982},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442776,"byte_end":442777,"line_start":291,"line_end":291,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState10::F","value":"F","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7983},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442779,"byte_end":442780,"line_start":291,"line_end":291,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState10::G","value":"G","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7984},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442782,"byte_end":442783,"line_start":291,"line_end":291,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState10::H","value":"H","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7985},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442785,"byte_end":442786,"line_start":291,"line_end":291,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState10::I","value":"I","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7986},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442788,"byte_end":442789,"line_start":291,"line_end":291,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState10::J","value":"J","parent":{"krate":0,"index":7966},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8049},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442806,"byte_end":442820,"line_start":292,"line_end":292,"column_start":15,"column_end":29},"name":"PartialState11","qualname":"::parser::sequence::PartialState11","value":"PartialState11 { A, B, C, D, E, F, G, H, I, J, K }","parent":null,"children":[{"krate":0,"index":8061},{"krate":0,"index":8062},{"krate":0,"index":8063},{"krate":0,"index":8064},{"krate":0,"index":8065},{"krate":0,"index":8066},{"krate":0,"index":8067},{"krate":0,"index":8068},{"krate":0,"index":8069},{"krate":0,"index":8070},{"krate":0,"index":8071},{"krate":0,"index":8072},{"krate":0,"index":8073}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8061},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442822,"byte_end":442823,"line_start":292,"line_end":292,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState11::A","value":"A","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8062},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442825,"byte_end":442826,"line_start":292,"line_end":292,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState11::B","value":"B","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8063},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442828,"byte_end":442829,"line_start":292,"line_end":292,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState11::C","value":"C","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8064},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442831,"byte_end":442832,"line_start":292,"line_end":292,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState11::D","value":"D","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8065},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442834,"byte_end":442835,"line_start":292,"line_end":292,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState11::E","value":"E","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8066},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442837,"byte_end":442838,"line_start":292,"line_end":292,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState11::F","value":"F","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8067},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442840,"byte_end":442841,"line_start":292,"line_end":292,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState11::G","value":"G","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8068},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442843,"byte_end":442844,"line_start":292,"line_end":292,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState11::H","value":"H","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8069},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442846,"byte_end":442847,"line_start":292,"line_end":292,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState11::I","value":"I","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8070},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442849,"byte_end":442850,"line_start":292,"line_end":292,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState11::J","value":"J","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8071},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442852,"byte_end":442853,"line_start":292,"line_end":292,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState11::K","value":"K","parent":{"krate":0,"index":8049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8138},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442870,"byte_end":442884,"line_start":293,"line_end":293,"column_start":15,"column_end":29},"name":"PartialState12","qualname":"::parser::sequence::PartialState12","value":"PartialState12 { A, B, C, D, E, F, G, H, I, J, K, L }","parent":null,"children":[{"krate":0,"index":8151},{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8154},{"krate":0,"index":8155},{"krate":0,"index":8156},{"krate":0,"index":8157},{"krate":0,"index":8158},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8164}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8151},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442886,"byte_end":442887,"line_start":293,"line_end":293,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState12::A","value":"A","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8152},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442889,"byte_end":442890,"line_start":293,"line_end":293,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState12::B","value":"B","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8153},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442892,"byte_end":442893,"line_start":293,"line_end":293,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState12::C","value":"C","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8154},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442895,"byte_end":442896,"line_start":293,"line_end":293,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState12::D","value":"D","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8155},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442898,"byte_end":442899,"line_start":293,"line_end":293,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState12::E","value":"E","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8156},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442901,"byte_end":442902,"line_start":293,"line_end":293,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState12::F","value":"F","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8157},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442904,"byte_end":442905,"line_start":293,"line_end":293,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState12::G","value":"G","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8158},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442907,"byte_end":442908,"line_start":293,"line_end":293,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState12::H","value":"H","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8159},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442910,"byte_end":442911,"line_start":293,"line_end":293,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState12::I","value":"I","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8160},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442913,"byte_end":442914,"line_start":293,"line_end":293,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState12::J","value":"J","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8161},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442916,"byte_end":442917,"line_start":293,"line_end":293,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState12::K","value":"K","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8162},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442919,"byte_end":442920,"line_start":293,"line_end":293,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState12::L","value":"L","parent":{"krate":0,"index":8138},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8233},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442937,"byte_end":442951,"line_start":294,"line_end":294,"column_start":15,"column_end":29},"name":"PartialState13","qualname":"::parser::sequence::PartialState13","value":"PartialState13 { A, B, C, D, E, F, G, H, I, J, K, L, M }","parent":null,"children":[{"krate":0,"index":8247},{"krate":0,"index":8248},{"krate":0,"index":8249},{"krate":0,"index":8250},{"krate":0,"index":8251},{"krate":0,"index":8252},{"krate":0,"index":8253},{"krate":0,"index":8254},{"krate":0,"index":8255},{"krate":0,"index":8256},{"krate":0,"index":8257},{"krate":0,"index":8258},{"krate":0,"index":8259},{"krate":0,"index":8260},{"krate":0,"index":8261}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8247},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442953,"byte_end":442954,"line_start":294,"line_end":294,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState13::A","value":"A","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8248},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442956,"byte_end":442957,"line_start":294,"line_end":294,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState13::B","value":"B","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8249},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442959,"byte_end":442960,"line_start":294,"line_end":294,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState13::C","value":"C","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8250},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442962,"byte_end":442963,"line_start":294,"line_end":294,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState13::D","value":"D","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8251},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442965,"byte_end":442966,"line_start":294,"line_end":294,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState13::E","value":"E","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8252},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442968,"byte_end":442969,"line_start":294,"line_end":294,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState13::F","value":"F","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8253},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442971,"byte_end":442972,"line_start":294,"line_end":294,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState13::G","value":"G","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8254},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442974,"byte_end":442975,"line_start":294,"line_end":294,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState13::H","value":"H","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8255},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442977,"byte_end":442978,"line_start":294,"line_end":294,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState13::I","value":"I","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8256},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442980,"byte_end":442981,"line_start":294,"line_end":294,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState13::J","value":"J","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8257},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442983,"byte_end":442984,"line_start":294,"line_end":294,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState13::K","value":"K","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8258},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442986,"byte_end":442987,"line_start":294,"line_end":294,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState13::L","value":"L","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8259},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":442989,"byte_end":442990,"line_start":294,"line_end":294,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState13::M","value":"M","parent":{"krate":0,"index":8233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8334},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443007,"byte_end":443021,"line_start":295,"line_end":295,"column_start":15,"column_end":29},"name":"PartialState14","qualname":"::parser::sequence::PartialState14","value":"PartialState14 { A, B, C, D, E, F, G, H, I, J, K, L, M, N }","parent":null,"children":[{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8351},{"krate":0,"index":8352},{"krate":0,"index":8353},{"krate":0,"index":8354},{"krate":0,"index":8355},{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":8358},{"krate":0,"index":8359},{"krate":0,"index":8360},{"krate":0,"index":8361},{"krate":0,"index":8362},{"krate":0,"index":8363},{"krate":0,"index":8364}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8349},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443023,"byte_end":443024,"line_start":295,"line_end":295,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState14::A","value":"A","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8350},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443026,"byte_end":443027,"line_start":295,"line_end":295,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState14::B","value":"B","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8351},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443029,"byte_end":443030,"line_start":295,"line_end":295,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState14::C","value":"C","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8352},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443032,"byte_end":443033,"line_start":295,"line_end":295,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState14::D","value":"D","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8353},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443035,"byte_end":443036,"line_start":295,"line_end":295,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState14::E","value":"E","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8354},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443038,"byte_end":443039,"line_start":295,"line_end":295,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState14::F","value":"F","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8355},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443041,"byte_end":443042,"line_start":295,"line_end":295,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState14::G","value":"G","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8356},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443044,"byte_end":443045,"line_start":295,"line_end":295,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState14::H","value":"H","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8357},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443047,"byte_end":443048,"line_start":295,"line_end":295,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState14::I","value":"I","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8358},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443050,"byte_end":443051,"line_start":295,"line_end":295,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState14::J","value":"J","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8359},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443053,"byte_end":443054,"line_start":295,"line_end":295,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState14::K","value":"K","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8360},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443056,"byte_end":443057,"line_start":295,"line_end":295,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState14::L","value":"L","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8361},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443059,"byte_end":443060,"line_start":295,"line_end":295,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState14::M","value":"M","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8362},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443062,"byte_end":443063,"line_start":295,"line_end":295,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState14::N","value":"N","parent":{"krate":0,"index":8334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8441},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443080,"byte_end":443094,"line_start":296,"line_end":296,"column_start":15,"column_end":29},"name":"PartialState15","qualname":"::parser::sequence::PartialState15","value":"PartialState15 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P }","parent":null,"children":[{"krate":0,"index":8457},{"krate":0,"index":8458},{"krate":0,"index":8459},{"krate":0,"index":8460},{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":8465},{"krate":0,"index":8466},{"krate":0,"index":8467},{"krate":0,"index":8468},{"krate":0,"index":8469},{"krate":0,"index":8470},{"krate":0,"index":8471},{"krate":0,"index":8472},{"krate":0,"index":8473}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8457},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443096,"byte_end":443097,"line_start":296,"line_end":296,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState15::A","value":"A","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8458},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443099,"byte_end":443100,"line_start":296,"line_end":296,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState15::B","value":"B","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8459},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443102,"byte_end":443103,"line_start":296,"line_end":296,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState15::C","value":"C","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8460},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443105,"byte_end":443106,"line_start":296,"line_end":296,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState15::D","value":"D","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8461},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443108,"byte_end":443109,"line_start":296,"line_end":296,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState15::E","value":"E","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8462},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443111,"byte_end":443112,"line_start":296,"line_end":296,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState15::F","value":"F","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8463},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443114,"byte_end":443115,"line_start":296,"line_end":296,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState15::G","value":"G","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8464},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443117,"byte_end":443118,"line_start":296,"line_end":296,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState15::H","value":"H","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8465},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443120,"byte_end":443121,"line_start":296,"line_end":296,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState15::I","value":"I","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8466},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443123,"byte_end":443124,"line_start":296,"line_end":296,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState15::J","value":"J","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8467},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443126,"byte_end":443127,"line_start":296,"line_end":296,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState15::K","value":"K","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8468},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443129,"byte_end":443130,"line_start":296,"line_end":296,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState15::L","value":"L","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8469},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443132,"byte_end":443133,"line_start":296,"line_end":296,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState15::M","value":"M","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8470},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443135,"byte_end":443136,"line_start":296,"line_end":296,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState15::N","value":"N","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8471},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443138,"byte_end":443139,"line_start":296,"line_end":296,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState15::P","value":"P","parent":{"krate":0,"index":8441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8554},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443156,"byte_end":443170,"line_start":297,"line_end":297,"column_start":15,"column_end":29},"name":"PartialState16","qualname":"::parser::sequence::PartialState16","value":"PartialState16 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q }","parent":null,"children":[{"krate":0,"index":8571},{"krate":0,"index":8572},{"krate":0,"index":8573},{"krate":0,"index":8574},{"krate":0,"index":8575},{"krate":0,"index":8576},{"krate":0,"index":8577},{"krate":0,"index":8578},{"krate":0,"index":8579},{"krate":0,"index":8580},{"krate":0,"index":8581},{"krate":0,"index":8582},{"krate":0,"index":8583},{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8586},{"krate":0,"index":8587},{"krate":0,"index":8588}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8571},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443172,"byte_end":443173,"line_start":297,"line_end":297,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState16::A","value":"A","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8572},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443175,"byte_end":443176,"line_start":297,"line_end":297,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState16::B","value":"B","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8573},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443178,"byte_end":443179,"line_start":297,"line_end":297,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState16::C","value":"C","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8574},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443181,"byte_end":443182,"line_start":297,"line_end":297,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState16::D","value":"D","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8575},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443184,"byte_end":443185,"line_start":297,"line_end":297,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState16::E","value":"E","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8576},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443187,"byte_end":443188,"line_start":297,"line_end":297,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState16::F","value":"F","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8577},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443190,"byte_end":443191,"line_start":297,"line_end":297,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState16::G","value":"G","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8578},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443193,"byte_end":443194,"line_start":297,"line_end":297,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState16::H","value":"H","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8579},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443196,"byte_end":443197,"line_start":297,"line_end":297,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState16::I","value":"I","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8580},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443199,"byte_end":443200,"line_start":297,"line_end":297,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState16::J","value":"J","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8581},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443202,"byte_end":443203,"line_start":297,"line_end":297,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState16::K","value":"K","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8582},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443205,"byte_end":443206,"line_start":297,"line_end":297,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState16::L","value":"L","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8583},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443208,"byte_end":443209,"line_start":297,"line_end":297,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState16::M","value":"M","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8584},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443211,"byte_end":443212,"line_start":297,"line_end":297,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState16::N","value":"N","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8585},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443214,"byte_end":443215,"line_start":297,"line_end":297,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState16::P","value":"P","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8586},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443217,"byte_end":443218,"line_start":297,"line_end":297,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState16::Q","value":"Q","parent":{"krate":0,"index":8554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8673},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443235,"byte_end":443249,"line_start":298,"line_end":298,"column_start":15,"column_end":29},"name":"PartialState17","qualname":"::parser::sequence::PartialState17","value":"PartialState17 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R }","parent":null,"children":[{"krate":0,"index":8691},{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694},{"krate":0,"index":8695},{"krate":0,"index":8696},{"krate":0,"index":8697},{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8701},{"krate":0,"index":8702},{"krate":0,"index":8703},{"krate":0,"index":8704},{"krate":0,"index":8705},{"krate":0,"index":8706},{"krate":0,"index":8707},{"krate":0,"index":8708},{"krate":0,"index":8709}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8691},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443251,"byte_end":443252,"line_start":298,"line_end":298,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState17::A","value":"A","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8692},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443254,"byte_end":443255,"line_start":298,"line_end":298,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState17::B","value":"B","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8693},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443257,"byte_end":443258,"line_start":298,"line_end":298,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState17::C","value":"C","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8694},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443260,"byte_end":443261,"line_start":298,"line_end":298,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState17::D","value":"D","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8695},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443263,"byte_end":443264,"line_start":298,"line_end":298,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState17::E","value":"E","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8696},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443266,"byte_end":443267,"line_start":298,"line_end":298,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState17::F","value":"F","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8697},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443269,"byte_end":443270,"line_start":298,"line_end":298,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState17::G","value":"G","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8698},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443272,"byte_end":443273,"line_start":298,"line_end":298,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState17::H","value":"H","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8699},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443275,"byte_end":443276,"line_start":298,"line_end":298,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState17::I","value":"I","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8700},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443278,"byte_end":443279,"line_start":298,"line_end":298,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState17::J","value":"J","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8701},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443281,"byte_end":443282,"line_start":298,"line_end":298,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState17::K","value":"K","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8702},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443284,"byte_end":443285,"line_start":298,"line_end":298,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState17::L","value":"L","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8703},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443287,"byte_end":443288,"line_start":298,"line_end":298,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState17::M","value":"M","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8704},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443290,"byte_end":443291,"line_start":298,"line_end":298,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState17::N","value":"N","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8705},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443293,"byte_end":443294,"line_start":298,"line_end":298,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState17::P","value":"P","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8706},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443296,"byte_end":443297,"line_start":298,"line_end":298,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState17::Q","value":"Q","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8707},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443299,"byte_end":443300,"line_start":298,"line_end":298,"column_start":79,"column_end":80},"name":"R","qualname":"::parser::sequence::PartialState17::R","value":"R","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8798},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443317,"byte_end":443331,"line_start":299,"line_end":299,"column_start":15,"column_end":29},"name":"PartialState18","qualname":"::parser::sequence::PartialState18","value":"PartialState18 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S }","parent":null,"children":[{"krate":0,"index":8817},{"krate":0,"index":8818},{"krate":0,"index":8819},{"krate":0,"index":8820},{"krate":0,"index":8821},{"krate":0,"index":8822},{"krate":0,"index":8823},{"krate":0,"index":8824},{"krate":0,"index":8825},{"krate":0,"index":8826},{"krate":0,"index":8827},{"krate":0,"index":8828},{"krate":0,"index":8829},{"krate":0,"index":8830},{"krate":0,"index":8831},{"krate":0,"index":8832},{"krate":0,"index":8833},{"krate":0,"index":8834},{"krate":0,"index":8835},{"krate":0,"index":8836}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8817},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443333,"byte_end":443334,"line_start":299,"line_end":299,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState18::A","value":"A","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8818},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443336,"byte_end":443337,"line_start":299,"line_end":299,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState18::B","value":"B","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8819},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443339,"byte_end":443340,"line_start":299,"line_end":299,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState18::C","value":"C","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8820},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443342,"byte_end":443343,"line_start":299,"line_end":299,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState18::D","value":"D","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8821},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443345,"byte_end":443346,"line_start":299,"line_end":299,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState18::E","value":"E","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8822},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443348,"byte_end":443349,"line_start":299,"line_end":299,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState18::F","value":"F","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8823},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443351,"byte_end":443352,"line_start":299,"line_end":299,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState18::G","value":"G","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8824},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443354,"byte_end":443355,"line_start":299,"line_end":299,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState18::H","value":"H","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8825},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443357,"byte_end":443358,"line_start":299,"line_end":299,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState18::I","value":"I","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8826},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443360,"byte_end":443361,"line_start":299,"line_end":299,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState18::J","value":"J","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8827},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443363,"byte_end":443364,"line_start":299,"line_end":299,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState18::K","value":"K","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8828},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443366,"byte_end":443367,"line_start":299,"line_end":299,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState18::L","value":"L","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8829},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443369,"byte_end":443370,"line_start":299,"line_end":299,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState18::M","value":"M","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8830},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443372,"byte_end":443373,"line_start":299,"line_end":299,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState18::N","value":"N","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8831},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443375,"byte_end":443376,"line_start":299,"line_end":299,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState18::P","value":"P","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8832},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443378,"byte_end":443379,"line_start":299,"line_end":299,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState18::Q","value":"Q","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8833},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443381,"byte_end":443382,"line_start":299,"line_end":299,"column_start":79,"column_end":80},"name":"R","qualname":"::parser::sequence::PartialState18::R","value":"R","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8834},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443384,"byte_end":443385,"line_start":299,"line_end":299,"column_start":82,"column_end":83},"name":"S","qualname":"::parser::sequence::PartialState18::S","value":"S","parent":{"krate":0,"index":8798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8929},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443402,"byte_end":443416,"line_start":300,"line_end":300,"column_start":15,"column_end":29},"name":"PartialState19","qualname":"::parser::sequence::PartialState19","value":"PartialState19 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S, T }","parent":null,"children":[{"krate":0,"index":8949},{"krate":0,"index":8950},{"krate":0,"index":8951},{"krate":0,"index":8952},{"krate":0,"index":8953},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960},{"krate":0,"index":8961},{"krate":0,"index":8962},{"krate":0,"index":8963},{"krate":0,"index":8964},{"krate":0,"index":8965},{"krate":0,"index":8966},{"krate":0,"index":8967},{"krate":0,"index":8968},{"krate":0,"index":8969}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8949},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443418,"byte_end":443419,"line_start":300,"line_end":300,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState19::A","value":"A","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8950},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443421,"byte_end":443422,"line_start":300,"line_end":300,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState19::B","value":"B","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8951},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443424,"byte_end":443425,"line_start":300,"line_end":300,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState19::C","value":"C","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8952},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443427,"byte_end":443428,"line_start":300,"line_end":300,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState19::D","value":"D","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8953},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443430,"byte_end":443431,"line_start":300,"line_end":300,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState19::E","value":"E","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8954},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443433,"byte_end":443434,"line_start":300,"line_end":300,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState19::F","value":"F","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8955},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443436,"byte_end":443437,"line_start":300,"line_end":300,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState19::G","value":"G","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8956},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443439,"byte_end":443440,"line_start":300,"line_end":300,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState19::H","value":"H","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8957},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443442,"byte_end":443443,"line_start":300,"line_end":300,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState19::I","value":"I","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8958},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443445,"byte_end":443446,"line_start":300,"line_end":300,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState19::J","value":"J","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8959},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443448,"byte_end":443449,"line_start":300,"line_end":300,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState19::K","value":"K","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8960},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443451,"byte_end":443452,"line_start":300,"line_end":300,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState19::L","value":"L","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8961},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443454,"byte_end":443455,"line_start":300,"line_end":300,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState19::M","value":"M","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8962},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443457,"byte_end":443458,"line_start":300,"line_end":300,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState19::N","value":"N","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8963},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443460,"byte_end":443461,"line_start":300,"line_end":300,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState19::P","value":"P","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8964},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443463,"byte_end":443464,"line_start":300,"line_end":300,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState19::Q","value":"Q","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8965},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443466,"byte_end":443467,"line_start":300,"line_end":300,"column_start":79,"column_end":80},"name":"R","qualname":"::parser::sequence::PartialState19::R","value":"R","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8966},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443469,"byte_end":443470,"line_start":300,"line_end":300,"column_start":82,"column_end":83},"name":"S","qualname":"::parser::sequence::PartialState19::S","value":"S","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8967},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443472,"byte_end":443473,"line_start":300,"line_end":300,"column_start":85,"column_end":86},"name":"T","qualname":"::parser::sequence::PartialState19::T","value":"T","parent":{"krate":0,"index":8929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9066},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443490,"byte_end":443504,"line_start":301,"line_end":301,"column_start":15,"column_end":29},"name":"PartialState20","qualname":"::parser::sequence::PartialState20","value":"PartialState20 { A, B, C, D, E, F, G, H, I, J, K, L, M, N, P, Q, R, S, T, U }","parent":null,"children":[{"krate":0,"index":9087},{"krate":0,"index":9088},{"krate":0,"index":9089},{"krate":0,"index":9090},{"krate":0,"index":9091},{"krate":0,"index":9092},{"krate":0,"index":9093},{"krate":0,"index":9094},{"krate":0,"index":9095},{"krate":0,"index":9096},{"krate":0,"index":9097},{"krate":0,"index":9098},{"krate":0,"index":9099},{"krate":0,"index":9100},{"krate":0,"index":9101},{"krate":0,"index":9102},{"krate":0,"index":9103},{"krate":0,"index":9104},{"krate":0,"index":9105},{"krate":0,"index":9106},{"krate":0,"index":9107},{"krate":0,"index":9108}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433553,"byte_end":433577,"line_start":68,"line_end":68,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9087},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443506,"byte_end":443507,"line_start":301,"line_end":301,"column_start":31,"column_end":32},"name":"A","qualname":"::parser::sequence::PartialState20::A","value":"A","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9088},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443509,"byte_end":443510,"line_start":301,"line_end":301,"column_start":34,"column_end":35},"name":"B","qualname":"::parser::sequence::PartialState20::B","value":"B","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9089},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443512,"byte_end":443513,"line_start":301,"line_end":301,"column_start":37,"column_end":38},"name":"C","qualname":"::parser::sequence::PartialState20::C","value":"C","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9090},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443515,"byte_end":443516,"line_start":301,"line_end":301,"column_start":40,"column_end":41},"name":"D","qualname":"::parser::sequence::PartialState20::D","value":"D","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9091},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443518,"byte_end":443519,"line_start":301,"line_end":301,"column_start":43,"column_end":44},"name":"E","qualname":"::parser::sequence::PartialState20::E","value":"E","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9092},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443521,"byte_end":443522,"line_start":301,"line_end":301,"column_start":46,"column_end":47},"name":"F","qualname":"::parser::sequence::PartialState20::F","value":"F","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9093},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443524,"byte_end":443525,"line_start":301,"line_end":301,"column_start":49,"column_end":50},"name":"G","qualname":"::parser::sequence::PartialState20::G","value":"G","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9094},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443527,"byte_end":443528,"line_start":301,"line_end":301,"column_start":52,"column_end":53},"name":"H","qualname":"::parser::sequence::PartialState20::H","value":"H","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9095},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443530,"byte_end":443531,"line_start":301,"line_end":301,"column_start":55,"column_end":56},"name":"I","qualname":"::parser::sequence::PartialState20::I","value":"I","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9096},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443533,"byte_end":443534,"line_start":301,"line_end":301,"column_start":58,"column_end":59},"name":"J","qualname":"::parser::sequence::PartialState20::J","value":"J","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9097},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443536,"byte_end":443537,"line_start":301,"line_end":301,"column_start":61,"column_end":62},"name":"K","qualname":"::parser::sequence::PartialState20::K","value":"K","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9098},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443539,"byte_end":443540,"line_start":301,"line_end":301,"column_start":64,"column_end":65},"name":"L","qualname":"::parser::sequence::PartialState20::L","value":"L","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9099},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443542,"byte_end":443543,"line_start":301,"line_end":301,"column_start":67,"column_end":68},"name":"M","qualname":"::parser::sequence::PartialState20::M","value":"M","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9100},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443545,"byte_end":443546,"line_start":301,"line_end":301,"column_start":70,"column_end":71},"name":"N","qualname":"::parser::sequence::PartialState20::N","value":"N","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9101},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443548,"byte_end":443549,"line_start":301,"line_end":301,"column_start":73,"column_end":74},"name":"P","qualname":"::parser::sequence::PartialState20::P","value":"P","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9102},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443551,"byte_end":443552,"line_start":301,"line_end":301,"column_start":76,"column_end":77},"name":"Q","qualname":"::parser::sequence::PartialState20::Q","value":"Q","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9103},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443554,"byte_end":443555,"line_start":301,"line_end":301,"column_start":79,"column_end":80},"name":"R","qualname":"::parser::sequence::PartialState20::R","value":"R","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9104},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443557,"byte_end":443558,"line_start":301,"line_end":301,"column_start":82,"column_end":83},"name":"S","qualname":"::parser::sequence::PartialState20::S","value":"S","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9105},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443560,"byte_end":443561,"line_start":301,"line_end":301,"column_start":85,"column_end":86},"name":"T","qualname":"::parser::sequence::PartialState20::T","value":"T","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9106},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":443563,"byte_end":443564,"line_start":301,"line_end":301,"column_start":88,"column_end":89},"name":"U","qualname":"::parser::sequence::PartialState20::U","value":"U","parent":{"krate":0,"index":9066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9153},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":450123,"byte_end":450127,"line_start":495,"line_end":495,"column_start":12,"column_end":16},"name":"With","qualname":"::parser::sequence::With","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2741},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":451114,"byte_end":451118,"line_start":533,"line_end":533,"column_start":8,"column_end":12},"name":"with","qualname":"::parser::sequence::with","value":"pub fn with<Input, P1, P2>(P1, P2) -> With<P1, P2> where Input: Stream,\nP1: Parser<Input>, P2: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p1.with(p2)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p1.with(p2)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":451014,"byte_end":451048,"line_start":530,"line_end":530,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":451049,"byte_end":451052,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ [`p1.with(p2)`]: ../trait.Parser.html#method.with","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":451053,"byte_end":451106,"line_start":532,"line_end":532,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":9170},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":451303,"byte_end":451307,"line_start":543,"line_end":543,"column_start":12,"column_end":16},"name":"Skip","qualname":"::parser::sequence::Skip","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2754},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":451999,"byte_end":452003,"line_start":570,"line_end":570,"column_start":8,"column_end":12},"name":"skip","qualname":"::parser::sequence::skip","value":"pub fn skip<Input, P1, P2>(P1, P2) -> Skip<P1, P2> where Input: Stream,\nP1: Parser<Input>, P2: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9211},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":452206,"byte_end":452213,"line_start":581,"line_end":581,"column_start":16,"column_end":23},"name":"Between","qualname":"::parser::sequence::Between","value":"Between { open, close, parser }","parent":null,"children":[{"krate":0,"index":9216},{"krate":0,"index":9217},{"krate":0,"index":9218},{"krate":0,"index":9219}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9216},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":452753,"byte_end":452757,"line_start":597,"line_end":597,"column_start":32,"column_end":36},"name":"open","qualname":"::parser::sequence::Between::open","value":"L","parent":{"krate":0,"index":9211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9217},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":452762,"byte_end":452767,"line_start":597,"line_end":597,"column_start":41,"column_end":46},"name":"close","qualname":"::parser::sequence::Between::close","value":"R","parent":{"krate":0,"index":9211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9218},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":452772,"byte_end":452778,"line_start":597,"line_end":597,"column_start":51,"column_end":57},"name":"parser","qualname":"::parser::sequence::Between::parser","value":"P","parent":{"krate":0,"index":9211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9206},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":452729,"byte_end":452736,"line_start":597,"line_end":597,"column_start":8,"column_end":15},"name":"between","qualname":"::parser::sequence::between","value":"pub fn between<Input, L, R, P>(L, R, P) -> Between<Input, L, R, P> where\n<Input as\ncrate::stream::StreamOnce>::Error: crate::error::ParseError<<Input as\n                                                            crate::stream::StreamOnce>::Token,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Range,\n                                                            <Input as\n                                                            crate::stream::StreamOnce>::Position>,\nInput: crate::stream::Stream, Input: Stream, L: Parser<Input>,\nR: Parser<Input>, P: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Parses `open` followed by `parser` followed by `close`.\n Returns the value of `parser`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":19186,"byte_end":19195,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":9237},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":453048,"byte_end":453052,"line_start":613,"line_end":613,"column_start":12,"column_end":16},"name":"Then","qualname":"::parser::sequence::Then","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2768},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":455365,"byte_end":455369,"line_start":692,"line_end":692,"column_start":8,"column_end":12},"name":"then","qualname":"::parser::sequence::then","value":"pub fn then<Input, P, F, N>(P, F) -> Then<P, F> where Input: Stream,\nF: FnMut(P::Output) -> N, P: Parser<Input>, N: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then(f)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":455269,"byte_end":455301,"line_start":689,"line_end":689,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":455302,"byte_end":455305,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ [`p.then(f)`]: ../trait.Parser.html#method.then","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":455306,"byte_end":455357,"line_start":691,"line_end":691,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9252},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":455565,"byte_end":455576,"line_start":703,"line_end":703,"column_start":12,"column_end":23},"name":"ThenPartial","qualname":"::parser::sequence::ThenPartial","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2783},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":457857,"byte_end":457869,"line_start":778,"line_end":778,"column_start":8,"column_end":20},"name":"then_partial","qualname":"::parser::sequence::then_partial","value":"pub fn then_partial<Input, P, F, N>(P, F) -> ThenPartial<P, F> where\nInput: Stream, F: FnMut(&mut P::Output) -> N, P: Parser<Input>,\nN: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then_partial(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then_partial(f)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":457737,"byte_end":457777,"line_start":775,"line_end":775,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":457778,"byte_end":457781,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ [`p.then_partial(f)`]: ../trait.Parser.html#method.then_partial","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":457782,"byte_end":457849,"line_start":777,"line_end":777,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9267},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":458266,"byte_end":458273,"line_start":800,"line_end":800,"column_start":12,"column_end":19},"name":"ThenRef","qualname":"::parser::sequence::ThenRef","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2798},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":460769,"byte_end":460777,"line_start":885,"line_end":885,"column_start":8,"column_end":16},"name":"then_ref","qualname":"::parser::sequence::then_ref","value":"pub fn then_ref<Input, P, F, N>(P, F) -> ThenRef<P, F> where Input: Stream,\nF: FnMut(&P::Output) -> N, P: Parser<Input>, N: Parser<Input>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to [`p.then_ref(f)`].","sig":null,"attributes":[{"value":"/ Equivalent to [`p.then_ref(f)`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":460665,"byte_end":460701,"line_start":882,"line_end":882,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":460702,"byte_end":460705,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ [`p.then_ref(f)`]: ../trait.Parser.html#method.then","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":460706,"byte_end":460761,"line_start":884,"line_end":884,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":2803},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::parser::token","value":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":10090},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":9282},{"krate":0,"index":9289},{"krate":0,"index":9286},{"krate":0,"index":2821},{"krate":0,"index":2826},{"krate":0,"index":9291},{"krate":0,"index":9300},{"krate":0,"index":9296},{"krate":0,"index":2828},{"krate":0,"index":2832},{"krate":0,"index":2839},{"krate":0,"index":9303},{"krate":0,"index":9312},{"krate":0,"index":9308},{"krate":0,"index":2842},{"krate":0,"index":2849},{"krate":0,"index":9315},{"krate":0,"index":9322},{"krate":0,"index":9319},{"krate":0,"index":2853},{"krate":0,"index":2860},{"krate":0,"index":9324},{"krate":0,"index":9333},{"krate":0,"index":2862},{"krate":0,"index":2872},{"krate":0,"index":9339},{"krate":0,"index":9346},{"krate":0,"index":2877},{"krate":0,"index":2884},{"krate":0,"index":9351},{"krate":0,"index":9357},{"krate":0,"index":9354},{"krate":0,"index":2888},{"krate":0,"index":2893},{"krate":0,"index":9359},{"krate":0,"index":9368},{"krate":0,"index":9364},{"krate":0,"index":2895},{"krate":0,"index":2904},{"krate":0,"index":9371},{"krate":0,"index":9380},{"krate":0,"index":9376},{"krate":0,"index":2907},{"krate":0,"index":2915},{"krate":0,"index":9383},{"krate":0,"index":9393},{"krate":0,"index":9389},{"krate":0,"index":2918},{"krate":0,"index":2924},{"krate":0,"index":9396},{"krate":0,"index":9406},{"krate":0,"index":9402},{"krate":0,"index":2927},{"krate":0,"index":2934},{"krate":0,"index":9409},{"krate":0,"index":9416},{"krate":0,"index":9413},{"krate":0,"index":2938},{"krate":0,"index":2944}],"decl_id":null,"docs":" Parsers working with single stream items.\n","sig":null,"attributes":[{"value":"/ Parsers working with single stream items.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":460946,"byte_end":460991,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":9282},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461258,"byte_end":461261,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Any","qualname":"::parser::token::Any","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2826},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461989,"byte_end":461992,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"any","qualname":"::parser::token::any","value":"pub fn any<Input>() -> Any<Input> where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses any token.","sig":null,"attributes":[{"value":"/ Parses any token.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461571,"byte_end":461592,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461593,"byte_end":461596,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461597,"byte_end":461604,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461605,"byte_end":461632,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461633,"byte_end":461654,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461655,"byte_end":461672,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ let mut char_parser = any();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461673,"byte_end":461705,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(char_parser.parse(\"!\").map(|x| x.0), Ok('!'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461706,"byte_end":461767,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/ assert!(char_parser.parse(\"\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461768,"byte_end":461812,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ let mut byte_parser = any();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461813,"byte_end":461845,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(byte_parser.parse(&b\"!\"[..]).map(|x| x.0), Ok(b'!'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461846,"byte_end":461914,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ assert!(byte_parser.parse(&b\"\"[..]).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461915,"byte_end":461965,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461966,"byte_end":461973,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461974,"byte_end":461981,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9291},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":462101,"byte_end":462108,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"Satisfy","qualname":"::parser::token::Satisfy","value":"Satisfy {  }","parent":null,"children":[{"krate":0,"index":9294},{"krate":0,"index":9295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2839},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463469,"byte_end":463476,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"satisfy","qualname":"::parser::token::satisfy","value":"pub fn satisfy<Input, P>(P) -> Satisfy<Input, P> where Input: Stream,\nP: FnMut(Input::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Parses a token and succeeds depending on the result of `predicate`.","sig":null,"attributes":[{"value":"/ Parses a token and succeeds depending on the result of `predicate`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463124,"byte_end":463195,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463196,"byte_end":463199,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463200,"byte_end":463207,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463208,"byte_end":463235,"line_start":96,"line_end":96,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463236,"byte_end":463257,"line_start":97,"line_end":97,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463258,"byte_end":463275,"line_start":98,"line_end":98,"column_start":1,"column_end":18}},{"value":"/ let mut parser = satisfy(|c| c == '!' || c == '?');","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463276,"byte_end":463331,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(parser.parse(\"!\").map(|x| x.0), Ok('!'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463332,"byte_end":463388,"line_start":100,"line_end":100,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(parser.parse(\"?\").map(|x| x.0), Ok('?'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463389,"byte_end":463445,"line_start":101,"line_end":101,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463446,"byte_end":463453,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463454,"byte_end":463461,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9303},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463691,"byte_end":463701,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"SatisfyMap","qualname":"::parser::token::SatisfyMap","value":"SatisfyMap {  }","parent":null,"children":[{"krate":0,"index":9306},{"krate":0,"index":9307}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2849},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464805,"byte_end":464816,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"satisfy_map","qualname":"::parser::token::satisfy_map","value":"pub fn satisfy_map<Input, P, R>(P) -> SatisfyMap<Input, P> where\nInput: Stream, P: FnMut(Input::Token) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Parses a token and passes it to `predicate`. If `predicate` returns `Some` the parser succeeds\n and returns the value inside the `Option`. If `predicate` returns `None` the parser fails\n without consuming any input.","sig":null,"attributes":[{"value":"/ Parses a token and passes it to `predicate`. If `predicate` returns `Some` the parser succeeds","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464107,"byte_end":464205,"line_start":134,"line_end":134,"column_start":1,"column_end":99}},{"value":"/ and returns the value inside the `Option`. If `predicate` returns `None` the parser fails","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464206,"byte_end":464299,"line_start":135,"line_end":135,"column_start":1,"column_end":94}},{"value":"/ without consuming any input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464300,"byte_end":464332,"line_start":136,"line_end":136,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464333,"byte_end":464336,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464337,"byte_end":464344,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464345,"byte_end":464372,"line_start":139,"line_end":139,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464373,"byte_end":464394,"line_start":140,"line_end":140,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464395,"byte_end":464412,"line_start":141,"line_end":141,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464413,"byte_end":464444,"line_start":142,"line_end":142,"column_start":1,"column_end":32}},{"value":"/ enum YesNo {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464445,"byte_end":464461,"line_start":143,"line_end":143,"column_start":1,"column_end":17}},{"value":"/     Yes,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464462,"byte_end":464474,"line_start":144,"line_end":144,"column_start":1,"column_end":13}},{"value":"/     No,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464475,"byte_end":464486,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464487,"byte_end":464492,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/ let mut parser = satisfy_map(|c| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464493,"byte_end":464531,"line_start":147,"line_end":147,"column_start":1,"column_end":39}},{"value":"/     match c {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464532,"byte_end":464549,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/         'Y' => Some(YesNo::Yes),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464550,"byte_end":464586,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/         'N' => Some(YesNo::No),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464587,"byte_end":464622,"line_start":150,"line_end":150,"column_start":1,"column_end":36}},{"value":"/         _ => None,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464623,"byte_end":464645,"line_start":151,"line_end":151,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464646,"byte_end":464655,"line_start":152,"line_end":152,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464656,"byte_end":464663,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(parser.parse(\"Y\").map(|x| x.0), Ok(YesNo::Yes));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464664,"byte_end":464727,"line_start":154,"line_end":154,"column_start":1,"column_end":64}},{"value":"/ assert!(parser.parse(\"A\").map(|x| x.0).is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464728,"byte_end":464781,"line_start":155,"line_end":155,"column_start":1,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464782,"byte_end":464789,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":464790,"byte_end":464797,"line_start":157,"line_end":157,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9315},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465045,"byte_end":465050,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"Token","qualname":"::parser::token::Token","value":"Token {  }","parent":null,"children":[{"krate":0,"index":9317},{"krate":0,"index":9318}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2860},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465959,"byte_end":465964,"line_start":208,"line_end":208,"column_start":8,"column_end":13},"name":"token","qualname":"::parser::token::token","value":"pub fn token<Input>(Input::Token) -> Token<Input> where Input: Stream,\nInput::Token: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Parses a character and succeeds if the character is equal to `c`.","sig":null,"attributes":[{"value":"/ Parses a character and succeeds if the character is equal to `c`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465682,"byte_end":465751,"line_start":196,"line_end":196,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465752,"byte_end":465755,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465756,"byte_end":465763,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465764,"byte_end":465791,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465792,"byte_end":465813,"line_start":200,"line_end":200,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465814,"byte_end":465831,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/ let result = token('!')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465832,"byte_end":465859,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/     .parse(\"!\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465860,"byte_end":465879,"line_start":203,"line_end":203,"column_start":1,"column_end":20}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465880,"byte_end":465902,"line_start":204,"line_end":204,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok('!'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465903,"byte_end":465935,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465936,"byte_end":465943,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465944,"byte_end":465951,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9324},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":466151,"byte_end":466157,"line_start":220,"line_end":220,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::parser::token::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":9329},{"krate":0,"index":9330},{"krate":0,"index":9331},{"krate":0,"index":9332}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2872},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":469099,"byte_end":469105,"line_start":310,"line_end":310,"column_start":8,"column_end":14},"name":"tokens","qualname":"::parser::token::tokens","value":"pub fn tokens<C, E, T, Input>(C, E, T) -> Tokens<C, E, T, Input> where\nC: FnMut(T::Item, Input::Token) -> bool, T: Clone + IntoIterator,\nInput: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses multiple tokens.","sig":null,"attributes":[{"value":"/ Parses multiple tokens.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468272,"byte_end":468299,"line_start":285,"line_end":285,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468300,"byte_end":468303,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Consumes items from the input and compares them to the values from `tokens` using the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468304,"byte_end":468393,"line_start":287,"line_end":287,"column_start":1,"column_end":90}},{"value":"/ comparison function `cmp`. Succeeds if all the items from `tokens` are matched in the input","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468394,"byte_end":468489,"line_start":288,"line_end":288,"column_start":1,"column_end":96}},{"value":"/ stream and fails otherwise with `expected` used as part of the error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468490,"byte_end":468563,"line_start":289,"line_end":289,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468564,"byte_end":468567,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468568,"byte_end":468575,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468576,"byte_end":468603,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468604,"byte_end":468625,"line_start":293,"line_end":293,"column_start":1,"column_end":22}},{"value":"/ # use combine::error;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468626,"byte_end":468651,"line_start":294,"line_end":294,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468652,"byte_end":468669,"line_start":295,"line_end":295,"column_start":1,"column_end":18}},{"value":"/ let result = tokens(|l, r| l.eq_ignore_ascii_case(&r), \"abc\", \"abc\".chars())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468670,"byte_end":468750,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/     .parse(\"AbC\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468751,"byte_end":468772,"line_start":297,"line_end":297,"column_start":1,"column_end":22}},{"value":"/     .map(|x| x.0.as_str());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468773,"byte_end":468804,"line_start":298,"line_end":298,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(result, Ok(\"abc\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468805,"byte_end":468839,"line_start":299,"line_end":299,"column_start":1,"column_end":35}},{"value":"/ let result = tokens(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468840,"byte_end":468864,"line_start":300,"line_end":300,"column_start":1,"column_end":25}},{"value":"/     |&l, r| (if l < r { r - l } else { l - r }) <= 2,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468865,"byte_end":468922,"line_start":301,"line_end":301,"column_start":1,"column_end":58}},{"value":"/     error::Range(&b\"025\"[..]),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468923,"byte_end":468957,"line_start":302,"line_end":302,"column_start":1,"column_end":35}},{"value":"/     &b\"025\"[..]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468958,"byte_end":468977,"line_start":303,"line_end":303,"column_start":1,"column_end":20}},{"value":"/ )","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468978,"byte_end":468983,"line_start":304,"line_end":304,"column_start":1,"column_end":6}},{"value":"/     .parse(&b\"123\"[..])","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":468984,"byte_end":469011,"line_start":305,"line_end":305,"column_start":1,"column_end":28}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":469012,"byte_end":469034,"line_start":306,"line_end":306,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"025\"[..]));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":469035,"byte_end":469075,"line_start":307,"line_end":307,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":469076,"byte_end":469083,"line_start":308,"line_end":308,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":469084,"byte_end":469091,"line_start":309,"line_end":309,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9339},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":469408,"byte_end":469417,"line_start":325,"line_end":325,"column_start":12,"column_end":21},"name":"TokensCmp","qualname":"::parser::token::TokensCmp","value":"TokensCmp {  }","parent":null,"children":[{"krate":0,"index":9343},{"krate":0,"index":9344},{"krate":0,"index":9345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2884},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472029,"byte_end":472039,"line_start":410,"line_end":410,"column_start":8,"column_end":18},"name":"tokens_cmp","qualname":"::parser::token::tokens_cmp","value":"pub fn tokens_cmp<C, T, I>(T, C) -> TokensCmp<C, T, I> where\nC: FnMut(T::Item, I::Token) -> bool, T: Clone + IntoIterator, I: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parses multiple tokens.","sig":null,"attributes":[{"value":"/ Parses multiple tokens.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471244,"byte_end":471271,"line_start":385,"line_end":385,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471272,"byte_end":471275,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ Consumes items from the input and compares them to the values from `tokens` using the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471276,"byte_end":471365,"line_start":387,"line_end":387,"column_start":1,"column_end":90}},{"value":"/ comparison function `cmp`. Succeeds if all the items from `tokens` are matched in the input","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471366,"byte_end":471461,"line_start":388,"line_end":388,"column_start":1,"column_end":96}},{"value":"/ stream and fails otherwise.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471462,"byte_end":471493,"line_start":389,"line_end":389,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471494,"byte_end":471497,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471498,"byte_end":471505,"line_start":391,"line_end":391,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471506,"byte_end":471533,"line_start":392,"line_end":392,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471534,"byte_end":471555,"line_start":393,"line_end":393,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471556,"byte_end":471573,"line_start":394,"line_end":394,"column_start":1,"column_end":18}},{"value":"/ # #[allow(deprecated)]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471574,"byte_end":471600,"line_start":395,"line_end":395,"column_start":1,"column_end":27}},{"value":"/ # use std::ascii::AsciiExt;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471601,"byte_end":471632,"line_start":396,"line_end":396,"column_start":1,"column_end":32}},{"value":"/ let result = tokens_cmp(\"abc\".chars(), |l, r| l.eq_ignore_ascii_case(&r))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471633,"byte_end":471710,"line_start":397,"line_end":397,"column_start":1,"column_end":78}},{"value":"/     .parse(\"AbC\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471711,"byte_end":471732,"line_start":398,"line_end":398,"column_start":1,"column_end":22}},{"value":"/     .map(|x| x.0.as_str());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471733,"byte_end":471764,"line_start":399,"line_end":399,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(result, Ok(\"abc\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471765,"byte_end":471799,"line_start":400,"line_end":400,"column_start":1,"column_end":35}},{"value":"/ let result = tokens_cmp(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471800,"byte_end":471828,"line_start":401,"line_end":401,"column_start":1,"column_end":29}},{"value":"/     &b\"025\"[..],","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471829,"byte_end":471849,"line_start":402,"line_end":402,"column_start":1,"column_end":21}},{"value":"/     |&l, r| (if l < r { r - l } else { l - r }) <= 2,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471850,"byte_end":471907,"line_start":403,"line_end":403,"column_start":1,"column_end":58}},{"value":"/ )","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471908,"byte_end":471913,"line_start":404,"line_end":404,"column_start":1,"column_end":6}},{"value":"/     .parse(&b\"123\"[..])","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471914,"byte_end":471941,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471942,"byte_end":471964,"line_start":406,"line_end":406,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(&b\"025\"[..]));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":471965,"byte_end":472005,"line_start":407,"line_end":407,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472006,"byte_end":472013,"line_start":408,"line_end":408,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472014,"byte_end":472021,"line_start":409,"line_end":409,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9351},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472301,"byte_end":472309,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"Position","qualname":"::parser::token::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":9353}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2893},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":473186,"byte_end":473194,"line_start":459,"line_end":459,"column_start":8,"column_end":16},"name":"position","qualname":"::parser::token::position","value":"pub fn position<Input>() -> Position<Input> where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Parser which just returns the current position in the stream.","sig":null,"attributes":[{"value":"/ Parser which just returns the current position in the stream.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472669,"byte_end":472734,"line_start":444,"line_end":444,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472735,"byte_end":472738,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472739,"byte_end":472746,"line_start":446,"line_end":446,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472747,"byte_end":472774,"line_start":447,"line_end":447,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472775,"byte_end":472796,"line_start":448,"line_end":448,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472797,"byte_end":472857,"line_start":449,"line_end":449,"column_start":1,"column_end":61}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472858,"byte_end":472875,"line_start":450,"line_end":450,"column_start":1,"column_end":18}},{"value":"/ let result = (position(), token('!'), position())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472876,"byte_end":472929,"line_start":451,"line_end":451,"column_start":1,"column_end":54}},{"value":"/     .parse(position::Stream::new(\"!\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472930,"byte_end":472972,"line_start":452,"line_end":452,"column_start":1,"column_end":43}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472973,"byte_end":472995,"line_start":453,"line_end":453,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok((SourcePosition { line: 1, column: 1 },","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472996,"byte_end":473061,"line_start":454,"line_end":454,"column_start":1,"column_end":66}},{"value":"/                        '!',","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":473062,"byte_end":473093,"line_start":455,"line_end":455,"column_start":1,"column_end":32}},{"value":"/                        SourcePosition { line: 1, column: 2 })));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":473094,"byte_end":473162,"line_start":456,"line_end":456,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":473163,"byte_end":473170,"line_start":457,"line_end":457,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":473171,"byte_end":473178,"line_start":458,"line_end":458,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9359},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":473338,"byte_end":473343,"line_start":469,"line_end":469,"column_start":12,"column_end":17},"name":"OneOf","qualname":"::parser::token::OneOf","value":"OneOf {  }","parent":null,"children":[{"krate":0,"index":9362},{"krate":0,"index":9363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2904},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474347,"byte_end":474353,"line_start":509,"line_end":509,"column_start":8,"column_end":14},"name":"one_of","qualname":"::parser::token::one_of","value":"pub fn one_of<T, Input>(T) -> OneOf<T, Input> where T: Clone + IntoIterator,\nInput: Stream, Input::Token: PartialEq<T::Item>","parent":null,"children":[],"decl_id":null,"docs":" Extract one token and succeeds if it is part of `tokens`.","sig":null,"attributes":[{"value":"/ Extract one token and succeeds if it is part of `tokens`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474059,"byte_end":474120,"line_start":498,"line_end":498,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474121,"byte_end":474124,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474125,"byte_end":474132,"line_start":500,"line_end":500,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474133,"byte_end":474160,"line_start":501,"line_end":501,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474161,"byte_end":474182,"line_start":502,"line_end":502,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474183,"byte_end":474200,"line_start":503,"line_end":503,"column_start":1,"column_end":18}},{"value":"/ let result = many(one_of(\"abc\".chars()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474201,"byte_end":474245,"line_start":504,"line_end":504,"column_start":1,"column_end":45}},{"value":"/     .parse(\"abd\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474246,"byte_end":474268,"line_start":505,"line_end":505,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok((String::from(\"ab\"), \"d\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474269,"byte_end":474323,"line_start":506,"line_end":506,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474324,"byte_end":474331,"line_start":507,"line_end":507,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474332,"byte_end":474339,"line_start":508,"line_end":508,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9371},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474589,"byte_end":474595,"line_start":522,"line_end":522,"column_start":12,"column_end":18},"name":"NoneOf","qualname":"::parser::token::NoneOf","value":"NoneOf {  }","parent":null,"children":[{"krate":0,"index":9374},{"krate":0,"index":9375}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2915},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475834,"byte_end":475841,"line_start":567,"line_end":567,"column_start":8,"column_end":15},"name":"none_of","qualname":"::parser::token::none_of","value":"pub fn none_of<T, Input>(T) -> NoneOf<T, Input> where T: Clone + IntoIterator,\nInput: Stream, Input::Token: PartialEq<T::Item>","parent":null,"children":[],"decl_id":null,"docs":" Extract one token and succeeds if it is not part of `tokens`.","sig":null,"attributes":[{"value":"/ Extract one token and succeeds if it is not part of `tokens`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475104,"byte_end":475169,"line_start":545,"line_end":545,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475170,"byte_end":475173,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475174,"byte_end":475181,"line_start":547,"line_end":547,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475182,"byte_end":475209,"line_start":548,"line_end":548,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475210,"byte_end":475231,"line_start":549,"line_end":549,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475232,"byte_end":475264,"line_start":550,"line_end":550,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475265,"byte_end":475301,"line_start":551,"line_end":551,"column_start":1,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475302,"byte_end":475319,"line_start":552,"line_end":552,"column_start":1,"column_end":18}},{"value":"/ let mut parser = many1(none_of(b\"abc\".iter().cloned()));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475320,"byte_end":475380,"line_start":553,"line_end":553,"column_start":1,"column_end":61}},{"value":"/ let result = parser.easy_parse(position::Stream::new(&b\"xyb\"[..]))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475381,"byte_end":475451,"line_start":554,"line_end":554,"column_start":1,"column_end":71}},{"value":"/     .map(|(output, input)| (output, input.input));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475452,"byte_end":475506,"line_start":555,"line_end":555,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(result, Ok((b\"xy\"[..].to_owned(), &b\"b\"[..])));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475507,"byte_end":475569,"line_start":556,"line_end":556,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475570,"byte_end":475573,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ let result = parser.easy_parse(position::Stream::new(&b\"ab\"[..]));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475574,"byte_end":475644,"line_start":558,"line_end":558,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475645,"byte_end":475686,"line_start":559,"line_end":559,"column_start":1,"column_end":42}},{"value":"/     position: 0,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475687,"byte_end":475707,"line_start":560,"line_end":560,"column_start":1,"column_end":21}},{"value":"/     errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475708,"byte_end":475729,"line_start":561,"line_end":561,"column_start":1,"column_end":22}},{"value":"/         easy::Error::Unexpected(easy::Info::Token(b'a')),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475730,"byte_end":475791,"line_start":562,"line_end":562,"column_start":1,"column_end":62}},{"value":"/     ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475792,"byte_end":475801,"line_start":563,"line_end":563,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475802,"byte_end":475810,"line_start":564,"line_end":564,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475811,"byte_end":475818,"line_start":565,"line_end":565,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":475819,"byte_end":475826,"line_start":566,"line_end":566,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9383},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476079,"byte_end":476084,"line_start":580,"line_end":580,"column_start":12,"column_end":17},"name":"Value","qualname":"::parser::token::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2924},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476680,"byte_end":476685,"line_start":606,"line_end":606,"column_start":8,"column_end":13},"name":"value","qualname":"::parser::token::value","value":"pub fn value<Input, T>(T) -> Value<Input, T> where Input: Stream, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Always returns the value `v` without consuming any input.","sig":null,"attributes":[{"value":"/ Always returns the value `v` without consuming any input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476403,"byte_end":476464,"line_start":594,"line_end":594,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476465,"byte_end":476468,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476469,"byte_end":476476,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476477,"byte_end":476504,"line_start":597,"line_end":597,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476505,"byte_end":476526,"line_start":598,"line_end":598,"column_start":1,"column_end":22}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476527,"byte_end":476544,"line_start":599,"line_end":599,"column_start":1,"column_end":18}},{"value":"/ let result = value(42)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476545,"byte_end":476571,"line_start":600,"line_end":600,"column_start":1,"column_end":27}},{"value":"/     .parse(\"hello world\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476572,"byte_end":476601,"line_start":601,"line_end":601,"column_start":1,"column_end":30}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476602,"byte_end":476624,"line_start":602,"line_end":602,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(42));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476625,"byte_end":476656,"line_start":603,"line_end":603,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476657,"byte_end":476664,"line_start":604,"line_end":604,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476665,"byte_end":476672,"line_start":605,"line_end":605,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9396},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476825,"byte_end":476832,"line_start":615,"line_end":615,"column_start":12,"column_end":19},"name":"Produce","qualname":"::parser::token::Produce","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2934},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477556,"byte_end":477563,"line_start":642,"line_end":642,"column_start":8,"column_end":15},"name":"produce","qualname":"::parser::token::produce","value":"pub fn produce<Input, F, R>(F) -> Produce<Input, F> where Input: Stream,\nF: FnMut() -> R","parent":null,"children":[],"decl_id":null,"docs":" Always returns the value produced by calling `f`.","sig":null,"attributes":[{"value":"/ Always returns the value produced by calling `f`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477159,"byte_end":477212,"line_start":629,"line_end":629,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477213,"byte_end":477216,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ Can be used when `value` is unable to be used for lack of `Clone` implementation on the value.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477217,"byte_end":477315,"line_start":631,"line_end":631,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477316,"byte_end":477319,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477320,"byte_end":477327,"line_start":633,"line_end":633,"column_start":1,"column_end":8}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477328,"byte_end":477349,"line_start":634,"line_end":634,"column_start":1,"column_end":22}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477350,"byte_end":477381,"line_start":635,"line_end":635,"column_start":1,"column_end":32}},{"value":"/ struct NoClone;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477382,"byte_end":477401,"line_start":636,"line_end":636,"column_start":1,"column_end":20}},{"value":"/ let result = produce(|| vec![NoClone])","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477402,"byte_end":477444,"line_start":637,"line_end":637,"column_start":1,"column_end":43}},{"value":"/     .parse(\"hello world\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477445,"byte_end":477474,"line_start":638,"line_end":638,"column_start":1,"column_end":30}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477475,"byte_end":477497,"line_start":639,"line_end":639,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(result, Ok(vec![NoClone]));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477498,"byte_end":477540,"line_start":640,"line_end":640,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477541,"byte_end":477548,"line_start":641,"line_end":641,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9409},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477717,"byte_end":477720,"line_start":651,"line_end":651,"column_start":12,"column_end":15},"name":"Eof","qualname":"::parser::token::Eof","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2944},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":479113,"byte_end":479116,"line_start":695,"line_end":695,"column_start":8,"column_end":11},"name":"eof","qualname":"::parser::token::eof","value":"pub fn eof<Input>() -> Eof<Input> where Input: Stream","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if the stream is at end of input, fails otherwise.","sig":null,"attributes":[{"value":"/ Succeeds only if the stream is at end of input, fails otherwise.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478447,"byte_end":478515,"line_start":676,"line_end":676,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478516,"byte_end":478519,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478520,"byte_end":478527,"line_start":678,"line_end":678,"column_start":1,"column_end":8}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478528,"byte_end":478555,"line_start":679,"line_end":679,"column_start":1,"column_end":28}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478556,"byte_end":478577,"line_start":680,"line_end":680,"column_start":1,"column_end":22}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478578,"byte_end":478610,"line_start":681,"line_end":681,"column_start":1,"column_end":33}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478611,"byte_end":478671,"line_start":682,"line_end":682,"column_start":1,"column_end":61}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478672,"byte_end":478689,"line_start":683,"line_end":683,"column_start":1,"column_end":18}},{"value":"/ let mut parser = eof();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478690,"byte_end":478717,"line_start":684,"line_end":684,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(parser.easy_parse(position::Stream::new(\"\")), Ok(((), position::Stream::new(\"\"))));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478718,"byte_end":478816,"line_start":685,"line_end":685,"column_start":1,"column_end":99}},{"value":"/ assert_eq!(parser.easy_parse(position::Stream::new(\"x\")), Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478817,"byte_end":478897,"line_start":686,"line_end":686,"column_start":1,"column_end":81}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478898,"byte_end":478942,"line_start":687,"line_end":687,"column_start":1,"column_end":45}},{"value":"/     errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478943,"byte_end":478964,"line_start":688,"line_end":688,"column_start":1,"column_end":22}},{"value":"/         easy::Error::Unexpected('x'.into()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":478965,"byte_end":479013,"line_start":689,"line_end":689,"column_start":1,"column_end":49}},{"value":"/         easy::Error::Expected(\"end of input\".into())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":479014,"byte_end":479070,"line_start":690,"line_end":690,"column_start":1,"column_end":57}},{"value":"/     ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":479071,"byte_end":479080,"line_start":691,"line_end":691,"column_start":1,"column_end":10}},{"value":"/ }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":479081,"byte_end":479089,"line_start":692,"line_end":692,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":479090,"byte_end":479097,"line_start":693,"line_end":693,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":479098,"byte_end":479105,"line_start":694,"line_end":694,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2946},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212259,"byte_end":212265,"line_start":81,"line_end":81,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parser::Parser","value":"Parser<Input: Stream>","parent":null,"children":[{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2969},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2975},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2990},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3013},{"krate":0,"index":3015}],"decl_id":null,"docs":" By implementing the `Parser` trait a type says that it can be used to parse an input stream\n into the type `Output`.","sig":null,"attributes":[{"value":"/ By implementing the `Parser` trait a type says that it can be used to parse an input stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211583,"byte_end":211678,"line_start":69,"line_end":69,"column_start":1,"column_end":96}},{"value":"/ into the type `Output`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211679,"byte_end":211706,"line_start":70,"line_end":70,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211707,"byte_end":211710,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ All methods have a default implementation but there needs to be at least an implementation of","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211711,"byte_end":211808,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ [`parse_stream`], [`parse_stream`], or [`parse_lazy`]. If the last is implemented, an","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211809,"byte_end":211898,"line_start":73,"line_end":73,"column_start":1,"column_end":90}},{"value":"/ implementation of [`add_error`] may also be required. See the documentation for","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211899,"byte_end":211982,"line_start":74,"line_end":74,"column_start":1,"column_end":84}},{"value":"/ [`parse_lazy`] for details.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211983,"byte_end":212014,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212015,"byte_end":212018,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`parse_stream`]: trait.Parser.html#method.parse_stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212019,"byte_end":212078,"line_start":77,"line_end":77,"column_start":1,"column_end":60}},{"value":"/ [`parse_stream`]: trait.Parser.html#method.parse_stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212079,"byte_end":212138,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ [`parse_lazy`]: trait.Parser.html#method.parse_lazy","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212139,"byte_end":212194,"line_start":79,"line_end":79,"column_start":1,"column_end":56}},{"value":"/ [`add_error`]: trait.Parser.html#method.add_error","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212195,"byte_end":212248,"line_start":80,"line_end":80,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2948},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212356,"byte_end":212362,"line_start":83,"line_end":83,"column_start":10,"column_end":16},"name":"Output","qualname":"::parser::Parser::Output","value":"type Output;","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" The type which is returned if the parser is successful.\n","sig":null,"attributes":[{"value":"/ The type which is returned if the parser is successful.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212287,"byte_end":212346,"line_start":82,"line_end":82,"column_start":5,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":2949},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212538,"byte_end":212550,"line_start":88,"line_end":88,"column_start":10,"column_end":22},"name":"PartialState","qualname":"::parser::Parser::PartialState","value":"type PartialState: Default;","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Determines the state necessary to resume parsing after more input is supplied.","sig":null,"attributes":[{"value":"/ Determines the state necessary to resume parsing after more input is supplied.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212369,"byte_end":212451,"line_start":85,"line_end":85,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212456,"byte_end":212459,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If partial parsing is not supported this can be set to `()`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212464,"byte_end":212528,"line_start":87,"line_end":87,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213191,"byte_end":213196,"line_start":102,"line_end":102,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parser::parse","value":"pub fn parse(&mut Self, Input)\n-> Result<(Self::Output, Input), <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Entry point of the parser. Takes some input and tries to parse it.","sig":null,"attributes":[{"value":"/ Entry point of the parser. Takes some input and tries to parse it.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212566,"byte_end":212636,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212641,"byte_end":212644,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212649,"byte_end":212731,"line_start":92,"line_end":92,"column_start":5,"column_end":87}},{"value":"/ error otherwise.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212736,"byte_end":212756,"line_start":93,"line_end":93,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212761,"byte_end":212764,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This is the most straightforward entry point to a parser. Since it does not decorate the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212769,"byte_end":212861,"line_start":95,"line_end":95,"column_start":5,"column_end":97}},{"value":"/ input in any way you may find the error messages a hard to read. If that is the case you","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212866,"byte_end":212958,"line_start":96,"line_end":96,"column_start":5,"column_end":97}},{"value":"/ may want to try wrapping your input with an [`easy::Stream`] or call [`easy_parse`]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":212963,"byte_end":213050,"line_start":97,"line_end":97,"column_start":5,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213055,"byte_end":213067,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213072,"byte_end":213075,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`easy::Stream`]: super::easy::Stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213080,"byte_end":213121,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ [`easy_parse`]: super::parser::EasyParser::easy_parse","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213126,"byte_end":213183,"line_start":101,"line_end":101,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213720,"byte_end":213736,"line_start":117,"line_end":117,"column_start":8,"column_end":24},"name":"parse_with_state","qualname":"::parser::Parser::parse_with_state","value":"pub fn parse_with_state(&mut Self, &mut Input, &mut Self::PartialState)\n-> Result<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Entry point of the parser when using partial parsing.\n Takes some input and tries to parse it.","sig":null,"attributes":[{"value":"/ Entry point of the parser when using partial parsing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213487,"byte_end":213544,"line_start":112,"line_end":112,"column_start":5,"column_end":62}},{"value":"/ Takes some input and tries to parse it.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213549,"byte_end":213592,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213597,"byte_end":213600,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213605,"byte_end":213687,"line_start":115,"line_end":115,"column_start":5,"column_end":87}},{"value":"/ error otherwise.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":213692,"byte_end":213712,"line_start":116,"line_end":116,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214561,"byte_end":214573,"line_start":138,"line_end":138,"column_start":8,"column_end":20},"name":"parse_stream","qualname":"::parser::Parser::parse_stream","value":"pub fn parse_stream(&mut Self, &mut Input)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214060,"byte_end":214144,"line_start":128,"line_end":128,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214149,"byte_end":214152,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Semantically equivalent to [`parse_stream`], except this method returns a flattened result","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214157,"byte_end":214251,"line_start":130,"line_end":130,"column_start":5,"column_end":99}},{"value":"/ type, combining `Result` and [`Commit`] into a single [`ParseResult`].","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214256,"byte_end":214330,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214335,"byte_end":214338,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: super::stream::StreamOnce::uncons","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214343,"byte_end":214400,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ [`parse_stream`]: Parser::parse_stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214405,"byte_end":214447,"line_start":134,"line_end":134,"column_start":5,"column_end":47}},{"value":"/ [`Commit`]: super::error::Commit","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214452,"byte_end":214488,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/ [`ParseResult`]: super::error::ParseResult","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214493,"byte_end":214539,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":214544,"byte_end":214553,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":216359,"byte_end":216369,"line_start":177,"line_end":177,"column_start":8,"column_end":18},"name":"parse_lazy","qualname":"::parser::Parser::parse_lazy","value":"pub fn parse_lazy(&mut Self, &mut Input)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` by calling [`Stream::uncons`] one or more times.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215291,"byte_end":215375,"line_start":158,"line_end":158,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215380,"byte_end":215383,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Specialized version of [`parse_stream`] which permits error value creation to be","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215388,"byte_end":215472,"line_start":160,"line_end":160,"column_start":5,"column_end":89}},{"value":"/ skipped in the common case.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215477,"byte_end":215508,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215513,"byte_end":215516,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ When this parser returns `PeekErr`, this method is allowed to return an empty","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215521,"byte_end":215602,"line_start":163,"line_end":163,"column_start":5,"column_end":86}},{"value":"/ [`Error`]. The error value that would have been returned can instead be obtained by","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215607,"byte_end":215694,"line_start":164,"line_end":164,"column_start":5,"column_end":92}},{"value":"/ calling [`add_error`]. This allows a parent parser such as `choice` to skip the creation of","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215699,"byte_end":215794,"line_start":165,"line_end":165,"column_start":5,"column_end":100}},{"value":"/ an unnecessary error value, if an alternative parser succeeds.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215799,"byte_end":215865,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215870,"byte_end":215873,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Parsers should seek to implement this function instead of the above two if errors can be","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215878,"byte_end":215970,"line_start":168,"line_end":168,"column_start":5,"column_end":97}},{"value":"/ encountered before consuming input. The default implementation always returns all errors,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":215975,"byte_end":216068,"line_start":169,"line_end":169,"column_start":5,"column_end":98}},{"value":"/ with [`add_error`] being a no-op.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":216073,"byte_end":216110,"line_start":170,"line_end":170,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":216115,"byte_end":216118,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Stream::uncons`]: super::stream::StreamOnce::uncons","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":216123,"byte_end":216180,"line_start":172,"line_end":172,"column_start":5,"column_end":62}},{"value":"/ [`parse_stream`]: Parser::parse_stream","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":216185,"byte_end":216227,"line_start":173,"line_end":173,"column_start":5,"column_end":47}},{"value":"/ [`Error`]: super::stream::StreamOnce::Error","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":216232,"byte_end":216279,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ [`add_error`]: trait.Parser.html#method.add_error","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":216284,"byte_end":216337,"line_start":175,"line_end":175,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":216342,"byte_end":216351,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217429,"byte_end":217438,"line_start":203,"line_end":203,"column_start":8,"column_end":17},"name":"add_error","qualname":"::parser::Parser::add_error","value":"pub fn add_error(&mut Self, &mut Tracked<<Input as StreamOnce>::Error>)","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Adds the first error that would normally be returned by this parser if it failed with an\n `PeekErr` result.","sig":null,"attributes":[{"value":"/ Adds the first error that would normally be returned by this parser if it failed with an","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217187,"byte_end":217279,"line_start":197,"line_end":197,"column_start":5,"column_end":97}},{"value":"/ `PeekErr` result.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217284,"byte_end":217305,"line_start":198,"line_end":198,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217310,"byte_end":217313,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ See [`parse_lazy`] for details.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217318,"byte_end":217353,"line_start":200,"line_end":200,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217358,"byte_end":217361,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`parse_lazy`]: trait.Parser.html#method.parse_lazy","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217366,"byte_end":217421,"line_start":202,"line_end":202,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2955},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217585,"byte_end":217605,"line_start":207,"line_end":207,"column_start":8,"column_end":28},"name":"parse_stream_partial","qualname":"::parser::Parser::parse_stream_partial","value":"pub fn parse_stream_partial(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Like `parse_stream` but supports partial parsing.\n","sig":null,"attributes":[{"value":"/ Like `parse_stream` but supports partial parsing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217510,"byte_end":217563,"line_start":205,"line_end":205,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":217568,"byte_end":217577,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218766,"byte_end":218777,"line_start":237,"line_end":237,"column_start":8,"column_end":19},"name":"parse_first","qualname":"::parser::Parser::parse_first","value":"pub fn parse_first(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses using the stream `input` and allows itself to be resumed at a later point using\n `parse_partial` by storing the necessary intermediate state in `state`.","sig":null,"attributes":[{"value":"/ Parses using the stream `input` and allows itself to be resumed at a later point using","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218316,"byte_end":218406,"line_start":227,"line_end":227,"column_start":5,"column_end":95}},{"value":"/ `parse_partial` by storing the necessary intermediate state in `state`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218411,"byte_end":218486,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218491,"byte_end":218494,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Unlike `parse_partial` function this is allowed to assume that there is no partial state to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218499,"byte_end":218594,"line_start":230,"line_end":230,"column_start":5,"column_end":100}},{"value":"/ resume.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218599,"byte_end":218610,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218615,"byte_end":218618,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218623,"byte_end":218672,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/ Always overridden by the `parse_mode!` macro","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218677,"byte_end":218725,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218730,"byte_end":218739,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219309,"byte_end":219322,"line_start":252,"line_end":252,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parser::Parser::parse_partial","value":"pub fn parse_partial(&mut Self, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses using the stream `input` and allows itself to be resumed at a later point using\n `parse_partial` by storing the necessary intermediate state in `state`","sig":null,"attributes":[{"value":"/ Parses using the stream `input` and allows itself to be resumed at a later point using","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":218984,"byte_end":219074,"line_start":245,"line_end":245,"column_start":5,"column_end":95}},{"value":"/ `parse_partial` by storing the necessary intermediate state in `state`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219079,"byte_end":219153,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219158,"byte_end":219161,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219166,"byte_end":219215,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/ Always overridden by the `parse_mode!` macro","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219220,"byte_end":219268,"line_start":249,"line_end":249,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219273,"byte_end":219282,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219632,"byte_end":219642,"line_start":264,"line_end":264,"column_start":8,"column_end":18},"name":"parse_mode","qualname":"::parser::Parser::parse_mode","value":"pub fn parse_mode<M>(&mut Self, M, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error> where M: ParseMode,\nSelf: Sized","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219542,"byte_end":219591,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219615,"byte_end":219624,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":220014,"byte_end":220029,"line_start":280,"line_end":280,"column_start":8,"column_end":23},"name":"parse_mode_impl","qualname":"::parser::Parser::parse_mode_impl","value":"pub fn parse_mode_impl<M>(&mut Self, M, &mut Input, &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error> where M: ParseMode,\nSelf: Sized","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219924,"byte_end":219973,"line_start":277,"line_end":277,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":219997,"byte_end":220006,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":220506,"byte_end":220526,"line_start":300,"line_end":300,"column_start":8,"column_end":28},"name":"parse_committed_mode","qualname":"::parser::Parser::parse_committed_mode","value":"pub fn parse_committed_mode<M>(&mut Self, M, &mut Input,\n                               &mut Self::PartialState)\n-> ParseResult<Self::Output, <Input as StreamOnce>::Error> where M: ParseMode,\nSelf: Sized","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":220416,"byte_end":220465,"line_start":297,"line_end":297,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":220489,"byte_end":220498,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221122,"byte_end":221134,"line_start":321,"line_end":321,"column_start":8,"column_end":20},"name":"parser_count","qualname":"::parser::Parser::parser_count","value":"pub fn parser_count(&Self) -> ErrorOffset","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Returns how many parsers this parser contains","sig":null,"attributes":[{"value":"/ Returns how many parsers this parser contains","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":220954,"byte_end":221003,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221008,"byte_end":221011,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Internal API: This should not be implemented explicitly outside of combine.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221016,"byte_end":221095,"line_start":319,"line_end":319,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221299,"byte_end":221327,"line_start":327,"line_end":327,"column_start":8,"column_end":36},"name":"add_committed_expected_error","qualname":"::parser::Parser::add_committed_expected_error","value":"pub fn add_committed_expected_error(&mut Self,\n                                    &mut Tracked<<Input as\n                                                 StreamOnce>::Error>)","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Internal API: This should not be implemented explicitly outside of combine.\n","sig":null,"attributes":[{"value":"/ Internal API: This should not be implemented explicitly outside of combine.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221193,"byte_end":221272,"line_start":325,"line_end":325,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222323,"byte_end":222329,"line_start":354,"line_end":354,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::parser::Parser::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Borrows a parser instead of consuming it.","sig":null,"attributes":[{"value":"/ Borrows a parser instead of consuming it.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221404,"byte_end":221449,"line_start":330,"line_end":330,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221454,"byte_end":221457,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Used to apply parser combinators on `self` without losing ownership.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221462,"byte_end":221534,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221539,"byte_end":221542,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221547,"byte_end":221554,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221559,"byte_end":221586,"line_start":335,"line_end":335,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221591,"byte_end":221612,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ # use combine::error::Commit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221617,"byte_end":221650,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221655,"byte_end":221704,"line_start":338,"line_end":338,"column_start":5,"column_end":54}},{"value":"/ fn test(input: &mut &'static str) -> StdParseResult<(char, char), &'static str> {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221709,"byte_end":221794,"line_start":339,"line_end":339,"column_start":5,"column_end":90}},{"value":"/     let mut p = digit();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221799,"byte_end":221827,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/     let ((d, _), committed) = (p.by_ref(), letter()).parse_stream(input).into_result()?;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221832,"byte_end":221924,"line_start":341,"line_end":341,"column_start":5,"column_end":97}},{"value":"/     let (d2, committed) = committed.combine(|_| p.parse_stream(input).into_result())?;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":221929,"byte_end":222019,"line_start":342,"line_end":342,"column_start":5,"column_end":95}},{"value":"/     Ok(((d, d2), committed))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222024,"byte_end":222056,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222061,"byte_end":222066,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222071,"byte_end":222074,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222079,"byte_end":222094,"line_start":346,"line_end":346,"column_start":5,"column_end":20}},{"value":"/     let mut input = \"1a23\";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222099,"byte_end":222130,"line_start":347,"line_end":347,"column_start":5,"column_end":36}},{"value":"/     assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222135,"byte_end":222154,"line_start":348,"line_end":348,"column_start":5,"column_end":24}},{"value":"/         test(&mut input).map(|(t, c)| (t, c.map(|_| input))),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222159,"byte_end":222224,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/         Ok((('1', '2'), Commit::Commit(\"3\")))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222229,"byte_end":222278,"line_start":350,"line_end":350,"column_start":5,"column_end":54}},{"value":"/     );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222283,"byte_end":222293,"line_start":351,"line_end":351,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222298,"byte_end":222303,"line_start":352,"line_end":352,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222308,"byte_end":222315,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222855,"byte_end":222859,"line_start":376,"line_end":376,"column_start":8,"column_end":12},"name":"with","qualname":"::parser::Parser::with","value":"pub fn with<P2>(Self, P2) -> With<Self, P2> where Self: Sized,\nP2: Parser<Input>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Discards the value of the `self` parser and returns the value of `p`.\n Fails if any of the parsers fails.","sig":null,"attributes":[{"value":"/ Discards the value of the `self` parser and returns the value of `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222415,"byte_end":222488,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/ Fails if any of the parsers fails.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222493,"byte_end":222531,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222536,"byte_end":222539,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222544,"byte_end":222551,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222556,"byte_end":222583,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222588,"byte_end":222609,"line_start":366,"line_end":366,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222614,"byte_end":222653,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222658,"byte_end":222675,"line_start":368,"line_end":368,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222680,"byte_end":222704,"line_start":369,"line_end":369,"column_start":5,"column_end":29}},{"value":"/     .with(token('i'))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222709,"byte_end":222734,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222739,"byte_end":222759,"line_start":371,"line_end":371,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222764,"byte_end":222786,"line_start":372,"line_end":372,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok('i'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222791,"byte_end":222823,"line_start":373,"line_end":373,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222828,"byte_end":222835,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222840,"byte_end":222847,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223432,"byte_end":223436,"line_start":399,"line_end":399,"column_start":8,"column_end":12},"name":"skip","qualname":"::parser::Parser::skip","value":"pub fn skip<P2>(Self, P2) -> Skip<Self, P2> where Self: Sized,\nP2: Parser<Input>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Discards the value of the `p` parser and returns the value of `self`.\n Fails if any of the parsers fails.","sig":null,"attributes":[{"value":"/ Discards the value of the `p` parser and returns the value of `self`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":222992,"byte_end":223065,"line_start":384,"line_end":384,"column_start":5,"column_end":78}},{"value":"/ Fails if any of the parsers fails.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223070,"byte_end":223108,"line_start":385,"line_end":385,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223113,"byte_end":223116,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223121,"byte_end":223128,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223133,"byte_end":223160,"line_start":388,"line_end":388,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223165,"byte_end":223186,"line_start":389,"line_end":389,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223191,"byte_end":223230,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223235,"byte_end":223252,"line_start":391,"line_end":391,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223257,"byte_end":223281,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/     .skip(token('i'))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223286,"byte_end":223311,"line_start":393,"line_end":393,"column_start":5,"column_end":30}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223316,"byte_end":223336,"line_start":394,"line_end":394,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223341,"byte_end":223363,"line_start":395,"line_end":395,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok('9'));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223368,"byte_end":223400,"line_start":396,"line_end":396,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223405,"byte_end":223412,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223417,"byte_end":223424,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224050,"byte_end":224053,"line_start":423,"line_end":423,"column_start":8,"column_end":11},"name":"and","qualname":"::parser::Parser::and","value":"pub fn and<P2>(Self, P2) -> (Self, P2) where Self: Sized, P2: Parser<Input>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses with `self` followed by `p`.\n Succeeds if both parsers succeed, otherwise fails.\n Returns a tuple with both values on success.","sig":null,"attributes":[{"value":"/ Parses with `self` followed by `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223569,"byte_end":223608,"line_start":407,"line_end":407,"column_start":5,"column_end":44}},{"value":"/ Succeeds if both parsers succeed, otherwise fails.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223613,"byte_end":223667,"line_start":408,"line_end":408,"column_start":5,"column_end":59}},{"value":"/ Returns a tuple with both values on success.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223672,"byte_end":223720,"line_start":409,"line_end":409,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223725,"byte_end":223728,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223733,"byte_end":223740,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223745,"byte_end":223772,"line_start":412,"line_end":412,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223777,"byte_end":223798,"line_start":413,"line_end":413,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223803,"byte_end":223842,"line_start":414,"line_end":414,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223847,"byte_end":223864,"line_start":415,"line_end":415,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223869,"byte_end":223893,"line_start":416,"line_end":416,"column_start":5,"column_end":29}},{"value":"/     .and(token('i'))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223898,"byte_end":223922,"line_start":417,"line_end":417,"column_start":5,"column_end":29}},{"value":"/     .parse(\"9i\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223927,"byte_end":223947,"line_start":418,"line_end":418,"column_start":5,"column_end":25}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223952,"byte_end":223974,"line_start":419,"line_end":419,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok(('9', 'i')));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":223979,"byte_end":224018,"line_start":420,"line_end":420,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224023,"byte_end":224030,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224035,"byte_end":224042,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225470,"byte_end":225472,"line_start":460,"line_end":460,"column_start":8,"column_end":10},"name":"or","qualname":"::parser::Parser::or","value":"pub fn or<P2>(Self, P2) -> Or<Self, P2> where Self: Sized, P2: Parser<Input,\nOutput = Self::Output>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Returns a parser which attempts to parse using `self`. If `self` fails without committing\n it tries to consume the same input using `p`.","sig":null,"attributes":[{"value":"/ Returns a parser which attempts to parse using `self`. If `self` fails without committing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224178,"byte_end":224271,"line_start":431,"line_end":431,"column_start":5,"column_end":98}},{"value":"/ it tries to consume the same input using `p`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224276,"byte_end":224325,"line_start":432,"line_end":432,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224330,"byte_end":224333,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ If you are looking to chain 3 or more parsers using `or` you may consider using the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224338,"byte_end":224425,"line_start":434,"line_end":434,"column_start":5,"column_end":92}},{"value":"/ [`choice!`] macro instead, which can be clearer and may result in a faster parser.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224430,"byte_end":224516,"line_start":435,"line_end":435,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224521,"byte_end":224524,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224529,"byte_end":224536,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224541,"byte_end":224568,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224573,"byte_end":224594,"line_start":439,"line_end":439,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, string};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224599,"byte_end":224648,"line_start":440,"line_end":440,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224653,"byte_end":224670,"line_start":441,"line_end":441,"column_start":5,"column_end":22}},{"value":"/ let mut parser = string(\"let\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224675,"byte_end":224709,"line_start":442,"line_end":442,"column_start":5,"column_end":39}},{"value":"/     .or(digit().map(|_| \"digit\"))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224714,"byte_end":224751,"line_start":443,"line_end":443,"column_start":5,"column_end":42}},{"value":"/     .or(string(\"led\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224756,"byte_end":224783,"line_start":444,"line_end":444,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(parser.parse(\"let\"), Ok((\"let\", \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224788,"byte_end":224841,"line_start":445,"line_end":445,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parser.parse(\"1\"), Ok((\"digit\", \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224846,"byte_end":224899,"line_start":446,"line_end":446,"column_start":5,"column_end":58}},{"value":"/ assert!(parser.parse(\"led\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224904,"byte_end":224946,"line_start":447,"line_end":447,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224951,"byte_end":224954,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut parser2 = string(\"two\").or(string(\"three\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":224959,"byte_end":225015,"line_start":449,"line_end":449,"column_start":5,"column_end":61}},{"value":"/ // Fails as the parser for \"two\" consumes the first 't' before failing","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225020,"byte_end":225094,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ assert!(parser2.parse(\"three\").is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225099,"byte_end":225144,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225149,"byte_end":225152,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ // Use 'attempt' to make failing parsers always act as if they have not committed any input","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225157,"byte_end":225252,"line_start":453,"line_end":453,"column_start":5,"column_end":100}},{"value":"/ let mut parser3 = attempt(string(\"two\")).or(attempt(string(\"three\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225257,"byte_end":225331,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(parser3.parse(\"three\"), Ok((\"three\", \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225336,"byte_end":225394,"line_start":455,"line_end":455,"column_start":5,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225399,"byte_end":225406,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225411,"byte_end":225418,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225423,"byte_end":225426,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [`choice!`]: super::choice!","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225431,"byte_end":225462,"line_start":459,"line_end":459,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226700,"byte_end":226704,"line_start":497,"line_end":497,"column_start":8,"column_end":12},"name":"then","qualname":"::parser::Parser::then","value":"pub fn then<N, F>(Self, F) -> Then<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> N, N: Parser<Input>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses using `self` and then passes the value to `f` which returns a parser used to parse\n the rest of the input.","sig":null,"attributes":[{"value":"/ Parses using `self` and then passes the value to `f` which returns a parser used to parse","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225624,"byte_end":225717,"line_start":468,"line_end":468,"column_start":5,"column_end":98}},{"value":"/ the rest of the input.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225722,"byte_end":225748,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225753,"byte_end":225756,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Since the parser returned from `f` must have a single type it can be useful to use the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225761,"byte_end":225851,"line_start":471,"line_end":471,"column_start":5,"column_end":95}},{"value":"/ [`left`](Parser::left) and [`right`](Parser::right) methods to merge parsers of differing types into one.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225856,"byte_end":225965,"line_start":472,"line_end":472,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225970,"byte_end":225973,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ If you are using partial parsing you may want to use [`then_partial`](Parser::then_partial) instead.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":225978,"byte_end":226082,"line_start":474,"line_end":474,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226087,"byte_end":226090,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226095,"byte_end":226102,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226107,"byte_end":226137,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226142,"byte_end":226169,"line_start":478,"line_end":478,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226174,"byte_end":226195,"line_start":479,"line_end":479,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226200,"byte_end":226239,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ # use combine::error::Commit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226244,"byte_end":226277,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226282,"byte_end":226314,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226319,"byte_end":226336,"line_start":483,"line_end":483,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226341,"byte_end":226365,"line_start":484,"line_end":484,"column_start":5,"column_end":29}},{"value":"/     .then(|d| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226370,"byte_end":226389,"line_start":485,"line_end":485,"column_start":5,"column_end":24}},{"value":"/         if d == '9' {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226394,"byte_end":226419,"line_start":486,"line_end":486,"column_start":5,"column_end":30}},{"value":"/             value(9).left()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226424,"byte_end":226455,"line_start":487,"line_end":487,"column_start":5,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226460,"byte_end":226473,"line_start":488,"line_end":488,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226478,"byte_end":226496,"line_start":489,"line_end":489,"column_start":5,"column_end":23}},{"value":"/             unexpected_any(d).message(\"Not a nine\").right()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226501,"byte_end":226564,"line_start":490,"line_end":490,"column_start":5,"column_end":68}},{"value":"/         }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226569,"byte_end":226582,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226587,"byte_end":226597,"line_start":492,"line_end":492,"column_start":5,"column_end":15}},{"value":"/     .easy_parse(\"9\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226602,"byte_end":226627,"line_start":493,"line_end":493,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((9, \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226632,"byte_end":226668,"line_start":494,"line_end":494,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226673,"byte_end":226680,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226685,"byte_end":226692,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228091,"byte_end":228103,"line_start":536,"line_end":536,"column_start":8,"column_end":20},"name":"then_partial","qualname":"::parser::Parser::then_partial","value":"pub fn then_partial<N, F>(Self, F) -> ThenPartial<Self, F> where Self: Sized,\nF: FnMut(&mut Self::Output) -> N, N: Parser<Input>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Variant of [`then`](Parser::then) which parses using `self` and then passes the value to `f` as a `&mut` reference.","sig":null,"attributes":[{"value":"/ Variant of [`then`](Parser::then) which parses using `self` and then passes the value to `f` as a `&mut` reference.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226873,"byte_end":226992,"line_start":506,"line_end":506,"column_start":5,"column_end":124}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":226997,"byte_end":227000,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Useful when doing partial parsing since it does not need to store the parser returned by","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227005,"byte_end":227097,"line_start":508,"line_end":508,"column_start":5,"column_end":97}},{"value":"/ `f` in the partial state. Instead it will call `f` each to request a new parser each time","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227102,"byte_end":227195,"line_start":509,"line_end":509,"column_start":5,"column_end":98}},{"value":"/ parsing resumes and that parser is needed.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227200,"byte_end":227246,"line_start":510,"line_end":510,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227251,"byte_end":227254,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Since the parser returned from `f` must have a single type it can be useful to use the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227259,"byte_end":227349,"line_start":512,"line_end":512,"column_start":5,"column_end":95}},{"value":"/ [`left`](Parser::left) and [`right`](Parser::right) methods to merge parsers of differing types into one.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227354,"byte_end":227463,"line_start":513,"line_end":513,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227468,"byte_end":227471,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227476,"byte_end":227483,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227488,"byte_end":227518,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227523,"byte_end":227550,"line_start":517,"line_end":517,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227555,"byte_end":227576,"line_start":518,"line_end":518,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227581,"byte_end":227620,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ # use combine::error::Commit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227625,"byte_end":227658,"line_start":520,"line_end":520,"column_start":5,"column_end":38}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227663,"byte_end":227695,"line_start":521,"line_end":521,"column_start":5,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227700,"byte_end":227717,"line_start":522,"line_end":522,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227722,"byte_end":227746,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/     .then_partial(|d| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227751,"byte_end":227778,"line_start":524,"line_end":524,"column_start":5,"column_end":32}},{"value":"/         if *d == '9' {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227783,"byte_end":227809,"line_start":525,"line_end":525,"column_start":5,"column_end":31}},{"value":"/             value(9).left()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227814,"byte_end":227845,"line_start":526,"line_end":526,"column_start":5,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227850,"byte_end":227863,"line_start":527,"line_end":527,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227868,"byte_end":227886,"line_start":528,"line_end":528,"column_start":5,"column_end":23}},{"value":"/             unexpected_any(*d).message(\"Not a nine\").right()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227891,"byte_end":227955,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227960,"byte_end":227973,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227978,"byte_end":227988,"line_start":531,"line_end":531,"column_start":5,"column_end":15}},{"value":"/     .easy_parse(\"9\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":227993,"byte_end":228018,"line_start":532,"line_end":532,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((9, \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228023,"byte_end":228059,"line_start":533,"line_end":533,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228064,"byte_end":228071,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228076,"byte_end":228083,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2981},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229299,"byte_end":229307,"line_start":572,"line_end":572,"column_start":8,"column_end":16},"name":"then_ref","qualname":"::parser::Parser::then_ref","value":"pub fn then_ref<N, F>(Self, F) -> ThenRef<Self, F> where Self: Sized,\nF: FnMut(&Self::Output) -> N, N: Parser<Input>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses using `self` and then passes a reference to the value to `f` which returns a parser\n used to parse the rest of the input. The value is then combined with the output of `f`.","sig":null,"attributes":[{"value":"/ Parses using `self` and then passes a reference to the value to `f` which returns a parser","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228292,"byte_end":228386,"line_start":545,"line_end":545,"column_start":5,"column_end":99}},{"value":"/ used to parse the rest of the input. The value is then combined with the output of `f`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228391,"byte_end":228482,"line_start":546,"line_end":546,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228487,"byte_end":228490,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Since the parser returned from `f` must have a single type it can be useful to use the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228495,"byte_end":228585,"line_start":548,"line_end":548,"column_start":5,"column_end":95}},{"value":"/ `left` and `right` methods to merge parsers of differing types into one.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228590,"byte_end":228666,"line_start":549,"line_end":549,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228671,"byte_end":228674,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228679,"byte_end":228686,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228691,"byte_end":228721,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228726,"byte_end":228753,"line_start":553,"line_end":553,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228758,"byte_end":228779,"line_start":554,"line_end":554,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228784,"byte_end":228823,"line_start":555,"line_end":555,"column_start":5,"column_end":44}},{"value":"/ # use combine::error::Commit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228828,"byte_end":228861,"line_start":556,"line_end":556,"column_start":5,"column_end":38}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228866,"byte_end":228898,"line_start":557,"line_end":557,"column_start":5,"column_end":37}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228903,"byte_end":228920,"line_start":558,"line_end":558,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228925,"byte_end":228949,"line_start":559,"line_end":559,"column_start":5,"column_end":29}},{"value":"/     .then_ref(|d| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228954,"byte_end":228977,"line_start":560,"line_end":560,"column_start":5,"column_end":28}},{"value":"/         if *d == '9' {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":228982,"byte_end":229008,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/             digit().left()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229013,"byte_end":229043,"line_start":562,"line_end":562,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229048,"byte_end":229061,"line_start":563,"line_end":563,"column_start":5,"column_end":18}},{"value":"/         else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229066,"byte_end":229084,"line_start":564,"line_end":564,"column_start":5,"column_end":23}},{"value":"/             unexpected_any(*d).message(\"Not a nine\").right()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229089,"byte_end":229153,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229158,"byte_end":229171,"line_start":566,"line_end":566,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229176,"byte_end":229186,"line_start":567,"line_end":567,"column_start":5,"column_end":15}},{"value":"/     .easy_parse(\"98\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229191,"byte_end":229217,"line_start":568,"line_end":568,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(result, Ok((('9', '8'), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229222,"byte_end":229267,"line_start":569,"line_end":569,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229272,"byte_end":229279,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229284,"byte_end":229291,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229851,"byte_end":229854,"line_start":595,"line_end":595,"column_start":8,"column_end":11},"name":"map","qualname":"::parser::Parser::map","value":"pub fn map<F, B>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> B","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Uses `f` to map over the parsed value.","sig":null,"attributes":[{"value":"/ Uses `f` to map over the parsed value.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229484,"byte_end":229526,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229531,"byte_end":229534,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229539,"byte_end":229546,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229551,"byte_end":229578,"line_start":584,"line_end":584,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229583,"byte_end":229604,"line_start":585,"line_end":585,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229609,"byte_end":229648,"line_start":586,"line_end":586,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229653,"byte_end":229670,"line_start":587,"line_end":587,"column_start":5,"column_end":22}},{"value":"/ let result = digit()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229675,"byte_end":229699,"line_start":588,"line_end":588,"column_start":5,"column_end":29}},{"value":"/     .map(|c| c == '9')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229704,"byte_end":229730,"line_start":589,"line_end":589,"column_start":5,"column_end":31}},{"value":"/     .parse(\"9\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229735,"byte_end":229754,"line_start":590,"line_end":590,"column_start":5,"column_end":24}},{"value":"/     .map(|x| x.0);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229759,"byte_end":229781,"line_start":591,"line_end":591,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(result, Ok(true));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229786,"byte_end":229819,"line_start":592,"line_end":592,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229824,"byte_end":229831,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229836,"byte_end":229843,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2987},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":229998,"byte_end":230007,"line_start":603,"line_end":603,"column_start":8,"column_end":17},"name":"map_input","qualname":"::parser::Parser::map_input","value":"pub fn map_input<F, B>(Self, F) -> MapInput<Self, F> where Self: Sized,\nF: FnMut(Self::Output, &mut Input) -> B","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230663,"byte_end":230671,"line_start":625,"line_end":625,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::parser::Parser::flat_map","value":"pub fn flat_map<F, B>(Self, F) -> FlatMap<Self, F> where Self: Sized,\nF: FnMut(Self::Output) -> Result<B, <Input as StreamOnce>::Error>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Uses `f` to map over the output of `self`. If `f` returns an error the parser fails.","sig":null,"attributes":[{"value":"/ Uses `f` to map over the output of `self`. If `f` returns an error the parser fails.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230171,"byte_end":230259,"line_start":611,"line_end":611,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230264,"byte_end":230267,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230272,"byte_end":230279,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230284,"byte_end":230311,"line_start":614,"line_end":614,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230316,"byte_end":230337,"line_start":615,"line_end":615,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230342,"byte_end":230381,"line_start":616,"line_end":616,"column_start":5,"column_end":44}},{"value":"/ # use combine::parser::range::take;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230386,"byte_end":230425,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230430,"byte_end":230447,"line_start":618,"line_end":618,"column_start":5,"column_end":22}},{"value":"/ let result = take(4)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230452,"byte_end":230476,"line_start":619,"line_end":619,"column_start":5,"column_end":29}},{"value":"/     .flat_map(|bs| many(digit()).parse(bs).map(|t| t.0))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230481,"byte_end":230541,"line_start":620,"line_end":620,"column_start":5,"column_end":65}},{"value":"/     .parse(\"12abcd\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230546,"byte_end":230571,"line_start":621,"line_end":621,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(result, Ok((String::from(\"12\"), \"cd\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230576,"byte_end":230631,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230636,"byte_end":230643,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230648,"byte_end":230655,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231634,"byte_end":231641,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"message","qualname":"::parser::Parser::message","value":"pub fn message<S>(Self, S) -> Message<Self, S> where Self: Sized,\nS: for<'s> ErrorInfo","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses with `self` and if it fails, adds the message `msg` to the error.","sig":null,"attributes":[{"value":"/ Parses with `self` and if it fails, adds the message `msg` to the error.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230859,"byte_end":230935,"line_start":633,"line_end":633,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230940,"byte_end":230943,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230948,"byte_end":230955,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230960,"byte_end":230990,"line_start":636,"line_end":636,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":230995,"byte_end":231022,"line_start":637,"line_end":637,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231027,"byte_end":231048,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231053,"byte_end":231085,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231090,"byte_end":231150,"line_start":640,"line_end":640,"column_start":5,"column_end":65}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231155,"byte_end":231172,"line_start":641,"line_end":641,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231177,"byte_end":231204,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     .message(\"Not a nine\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231209,"byte_end":231239,"line_start":643,"line_end":643,"column_start":5,"column_end":35}},{"value":"/     .easy_parse(position::Stream::new(\"8\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231244,"byte_end":231292,"line_start":644,"line_end":644,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231297,"byte_end":231338,"line_start":645,"line_end":645,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231343,"byte_end":231387,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231392,"byte_end":231413,"line_start":647,"line_end":647,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231418,"byte_end":231466,"line_start":648,"line_end":648,"column_start":5,"column_end":53}},{"value":"/         easy::Error::Expected('9'.into()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231471,"byte_end":231517,"line_start":649,"line_end":649,"column_start":5,"column_end":51}},{"value":"/         easy::Error::Message(\"Not a nine\".into())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231522,"byte_end":231575,"line_start":650,"line_end":650,"column_start":5,"column_end":58}},{"value":"/     ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231580,"byte_end":231589,"line_start":651,"line_end":651,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231594,"byte_end":231602,"line_start":652,"line_end":652,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231607,"byte_end":231614,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231619,"byte_end":231626,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233107,"byte_end":233115,"line_start":697,"line_end":697,"column_start":8,"column_end":16},"name":"expected","qualname":"::parser::Parser::expected","value":"pub fn expected<S>(Self, S) -> Expected<Self, S> where Self: Sized,\nS: for<'s> ErrorInfo","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses with `self` and if it fails without consuming any input any expected errors are\n replaced by `msg`. `msg` is then used in error messages as \"Expected `msg`\".","sig":null,"attributes":[{"value":"/ Parses with `self` and if it fails without consuming any input any expected errors are","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231816,"byte_end":231906,"line_start":663,"line_end":663,"column_start":5,"column_end":95}},{"value":"/ replaced by `msg`. `msg` is then used in error messages as \"Expected `msg`\".","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231911,"byte_end":231991,"line_start":664,"line_end":664,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":231996,"byte_end":231999,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232004,"byte_end":232011,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232016,"byte_end":232046,"line_start":667,"line_end":667,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232051,"byte_end":232078,"line_start":668,"line_end":668,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232083,"byte_end":232104,"line_start":669,"line_end":669,"column_start":5,"column_end":26}},{"value":"/ # use combine::error;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232109,"byte_end":232134,"line_start":670,"line_end":670,"column_start":5,"column_end":30}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232139,"byte_end":232171,"line_start":671,"line_end":671,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232176,"byte_end":232236,"line_start":672,"line_end":672,"column_start":5,"column_end":65}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232241,"byte_end":232258,"line_start":673,"line_end":673,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232263,"byte_end":232290,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     .expected(\"nine\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232295,"byte_end":232320,"line_start":675,"line_end":675,"column_start":5,"column_end":30}},{"value":"/     .easy_parse(position::Stream::new(\"8\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232325,"byte_end":232373,"line_start":676,"line_end":676,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232378,"byte_end":232419,"line_start":677,"line_end":677,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232424,"byte_end":232468,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232473,"byte_end":232494,"line_start":679,"line_end":679,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232499,"byte_end":232547,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/         easy::Error::Expected(\"nine\".into())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232552,"byte_end":232600,"line_start":681,"line_end":681,"column_start":5,"column_end":53}},{"value":"/     ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232605,"byte_end":232614,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232619,"byte_end":232627,"line_start":683,"line_end":683,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232632,"byte_end":232635,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let result = token('9')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232640,"byte_end":232667,"line_start":685,"line_end":685,"column_start":5,"column_end":32}},{"value":"/     .expected(error::Format(format_args!(\"That is not a nine!\")))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232672,"byte_end":232741,"line_start":686,"line_end":686,"column_start":5,"column_end":74}},{"value":"/     .easy_parse(position::Stream::new(\"8\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232746,"byte_end":232794,"line_start":687,"line_end":687,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232799,"byte_end":232840,"line_start":688,"line_end":688,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232845,"byte_end":232889,"line_start":689,"line_end":689,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232894,"byte_end":232915,"line_start":690,"line_end":690,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232920,"byte_end":232968,"line_start":691,"line_end":691,"column_start":5,"column_end":53}},{"value":"/         easy::Error::Expected(\"That is not a nine!\".to_string().into())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":232973,"byte_end":233048,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/     ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233053,"byte_end":233062,"line_start":693,"line_end":693,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233067,"byte_end":233075,"line_start":694,"line_end":694,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233080,"byte_end":233087,"line_start":695,"line_end":695,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233092,"byte_end":233099,"line_start":696,"line_end":696,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234048,"byte_end":234054,"line_start":727,"line_end":727,"column_start":8,"column_end":14},"name":"silent","qualname":"::parser::Parser::silent","value":"pub fn silent(Self) -> Silent<Self> where Self: Sized","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses with `self`, if it fails without consuming any input any expected errors that would\n otherwise be emitted by `self` are suppressed.","sig":null,"attributes":[{"value":"/ Parses with `self`, if it fails without consuming any input any expected errors that would","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233292,"byte_end":233386,"line_start":705,"line_end":705,"column_start":5,"column_end":99}},{"value":"/ otherwise be emitted by `self` are suppressed.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233391,"byte_end":233441,"line_start":706,"line_end":706,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233446,"byte_end":233449,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233454,"byte_end":233461,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #![cfg(feature = \"std\")]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233466,"byte_end":233496,"line_start":709,"line_end":709,"column_start":5,"column_end":35}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233501,"byte_end":233528,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233533,"byte_end":233554,"line_start":711,"line_end":711,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::easy;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233559,"byte_end":233591,"line_start":712,"line_end":712,"column_start":5,"column_end":37}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233596,"byte_end":233656,"line_start":713,"line_end":713,"column_start":5,"column_end":65}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233661,"byte_end":233678,"line_start":714,"line_end":714,"column_start":5,"column_end":22}},{"value":"/ let result = token('9')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233683,"byte_end":233710,"line_start":715,"line_end":715,"column_start":5,"column_end":32}},{"value":"/     .expected(\"nine\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233715,"byte_end":233740,"line_start":716,"line_end":716,"column_start":5,"column_end":30}},{"value":"/     .silent()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233745,"byte_end":233762,"line_start":717,"line_end":717,"column_start":5,"column_end":22}},{"value":"/     .easy_parse(position::Stream::new(\"8\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233767,"byte_end":233815,"line_start":718,"line_end":718,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, Err(easy::Errors {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233820,"byte_end":233861,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/     position: SourcePosition::default(),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233866,"byte_end":233910,"line_start":720,"line_end":720,"column_start":5,"column_end":49}},{"value":"/     errors: vec![","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233915,"byte_end":233936,"line_start":721,"line_end":721,"column_start":5,"column_end":26}},{"value":"/         easy::Error::Unexpected('8'.into()),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233941,"byte_end":233989,"line_start":722,"line_end":722,"column_start":5,"column_end":53}},{"value":"/     ]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":233994,"byte_end":234003,"line_start":723,"line_end":723,"column_start":5,"column_end":14}},{"value":"/ }));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234008,"byte_end":234016,"line_start":724,"line_end":724,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234021,"byte_end":234028,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234033,"byte_end":234040,"line_start":726,"line_end":726,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235100,"byte_end":235108,"line_start":753,"line_end":753,"column_start":8,"column_end":16},"name":"and_then","qualname":"::parser::Parser::and_then","value":"pub fn and_then<F, O, E>(Self, F) -> AndThen<Self, F> where\nSelf: Parser<Input> + Sized, F: FnMut(Self::Output) -> Result<O, E>,\nE: Into<<Input::Error as\n        ParseError<Input::Token, Input::Range, Input::Position>>::StreamError>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Parses with `self` and applies `f` on the result if `self` parses successfully.\n `f` may optionally fail with an error which is automatically converted to a `ParseError`.","sig":null,"attributes":[{"value":"/ Parses with `self` and applies `f` on the result if `self` parses successfully.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234146,"byte_end":234229,"line_start":734,"line_end":734,"column_start":5,"column_end":88}},{"value":"/ `f` may optionally fail with an error which is automatically converted to a `ParseError`.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234234,"byte_end":234327,"line_start":735,"line_end":735,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234332,"byte_end":234335,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234340,"byte_end":234347,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234352,"byte_end":234379,"line_start":738,"line_end":738,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234384,"byte_end":234405,"line_start":739,"line_end":739,"column_start":5,"column_end":26}},{"value":"/ # use combine::stream::position::{self, SourcePosition};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234410,"byte_end":234470,"line_start":740,"line_end":740,"column_start":5,"column_end":65}},{"value":"/ # use combine::parser::char::digit;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234475,"byte_end":234514,"line_start":741,"line_end":741,"column_start":5,"column_end":44}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234519,"byte_end":234536,"line_start":742,"line_end":742,"column_start":5,"column_end":22}},{"value":"/ let mut parser = many1(digit())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234541,"byte_end":234576,"line_start":743,"line_end":743,"column_start":5,"column_end":40}},{"value":"/     .and_then(|s: String| s.parse::<i32>());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234581,"byte_end":234629,"line_start":744,"line_end":744,"column_start":5,"column_end":53}},{"value":"/ let result = parser.easy_parse(position::Stream::new(\"1234\")).map(|(x, state)| (x, state.input));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234634,"byte_end":234735,"line_start":745,"line_end":745,"column_start":5,"column_end":106}},{"value":"/ assert_eq!(result, Ok((1234, \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234740,"byte_end":234779,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/ let result = parser.easy_parse(position::Stream::new(\"999999999999999999999999\"));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234784,"byte_end":234870,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234875,"byte_end":234904,"line_start":748,"line_end":748,"column_start":5,"column_end":34}},{"value":"/ // Errors are report as if they occurred at the start of the parse","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234909,"byte_end":234979,"line_start":749,"line_end":749,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(result.unwrap_err().position, SourcePosition { line: 1, column: 1 });","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":234984,"byte_end":235068,"line_start":750,"line_end":750,"column_start":5,"column_end":89}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235073,"byte_end":235080,"line_start":751,"line_end":751,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235085,"byte_end":235092,"line_start":752,"line_end":752,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236226,"byte_end":236230,"line_start":787,"line_end":787,"column_start":8,"column_end":12},"name":"iter","qualname":"::parser::Parser::iter","value":"pub fn iter(Self, &mut Input)\n-> Iter<, Input, Self, Self::PartialState, FirstMode> where\nSelf: Parser<Input> + Sized","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]\n when collecting directly into a `Extend` type is not desirable.","sig":null,"attributes":[{"value":"/ Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235416,"byte_end":235508,"line_start":764,"line_end":764,"column_start":5,"column_end":97}},{"value":"/ when collecting directly into a `Extend` type is not desirable.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235513,"byte_end":235580,"line_start":765,"line_end":765,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235585,"byte_end":235588,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235593,"byte_end":235600,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235605,"byte_end":235632,"line_start":768,"line_end":768,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235637,"byte_end":235658,"line_start":769,"line_end":769,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235663,"byte_end":235710,"line_start":770,"line_end":770,"column_start":5,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235715,"byte_end":235732,"line_start":771,"line_end":771,"column_start":5,"column_end":22}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235737,"byte_end":235772,"line_start":772,"line_end":772,"column_start":5,"column_end":40}},{"value":"/ let number = parser(|input| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235777,"byte_end":235810,"line_start":773,"line_end":773,"column_start":5,"column_end":38}},{"value":"/     buffer.clear();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235815,"byte_end":235838,"line_start":774,"line_end":774,"column_start":5,"column_end":28}},{"value":"/     let mut iter = digit().iter(input);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235843,"byte_end":235886,"line_start":775,"line_end":775,"column_start":5,"column_end":48}},{"value":"/     buffer.extend(&mut iter);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235891,"byte_end":235924,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/     let i = buffer.parse::<i32>().unwrap();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235929,"byte_end":235976,"line_start":777,"line_end":777,"column_start":5,"column_end":52}},{"value":"/     iter.into_result(i)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":235981,"byte_end":236008,"line_start":778,"line_end":778,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236013,"byte_end":236020,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ let result = sep_by(number, char(','))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236025,"byte_end":236067,"line_start":780,"line_end":780,"column_start":5,"column_end":47}},{"value":"/     .parse(\"123,45,6\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236072,"byte_end":236099,"line_start":781,"line_end":781,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(result, Ok((vec![123, 45, 6], \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236104,"byte_end":236155,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236160,"byte_end":236167,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236172,"byte_end":236179,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236184,"byte_end":236187,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ [`many`]: repeat::many","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236192,"byte_end":236218,"line_start":786,"line_end":786,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237248,"byte_end":237260,"line_start":817,"line_end":817,"column_start":8,"column_end":20},"name":"partial_iter","qualname":"::parser::Parser::partial_iter","value":"pub fn partial_iter<'a, 's,\n                    M>(Self, M, &'a mut Input, &'s mut Self::PartialState)\n-> Iter where Self: Parser<Input> + Sized, M: ParseMode","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]\n when collecting directly into a `Extend` type is not desirable.","sig":null,"attributes":[{"value":"/ Creates an iterator from a parser and a state. Can be used as an alternative to [`many`]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236438,"byte_end":236530,"line_start":794,"line_end":794,"column_start":5,"column_end":97}},{"value":"/ when collecting directly into a `Extend` type is not desirable.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236535,"byte_end":236602,"line_start":795,"line_end":795,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236607,"byte_end":236610,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236615,"byte_end":236622,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236627,"byte_end":236654,"line_start":798,"line_end":798,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236659,"byte_end":236680,"line_start":799,"line_end":799,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{char, digit};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236685,"byte_end":236732,"line_start":800,"line_end":800,"column_start":5,"column_end":52}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236737,"byte_end":236754,"line_start":801,"line_end":801,"column_start":5,"column_end":22}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236759,"byte_end":236794,"line_start":802,"line_end":802,"column_start":5,"column_end":40}},{"value":"/ let number = parser(|input| {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236799,"byte_end":236832,"line_start":803,"line_end":803,"column_start":5,"column_end":38}},{"value":"/     buffer.clear();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236837,"byte_end":236860,"line_start":804,"line_end":804,"column_start":5,"column_end":28}},{"value":"/     let mut iter = digit().iter(input);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236865,"byte_end":236908,"line_start":805,"line_end":805,"column_start":5,"column_end":48}},{"value":"/     buffer.extend(&mut iter);","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236913,"byte_end":236946,"line_start":806,"line_end":806,"column_start":5,"column_end":38}},{"value":"/     let i = buffer.parse::<i32>().unwrap();","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":236951,"byte_end":236998,"line_start":807,"line_end":807,"column_start":5,"column_end":52}},{"value":"/     iter.into_result(i)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237003,"byte_end":237030,"line_start":808,"line_end":808,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237035,"byte_end":237042,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ let result = sep_by(number, char(','))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237047,"byte_end":237089,"line_start":810,"line_end":810,"column_start":5,"column_end":47}},{"value":"/     .parse(\"123,45,6\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237094,"byte_end":237121,"line_start":811,"line_end":811,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(result, Ok((vec![123, 45, 6], \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237126,"byte_end":237177,"line_start":812,"line_end":812,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237182,"byte_end":237189,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237194,"byte_end":237201,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237206,"byte_end":237209,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ [`many`]: repeat::many","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237214,"byte_end":237240,"line_start":816,"line_end":816,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238365,"byte_end":238370,"line_start":851,"line_end":851,"column_start":8,"column_end":13},"name":"boxed","qualname":"::parser::Parser::boxed","value":"pub fn boxed<'a>(Self)\n-> Box<Parser<Input, Output = Self::Output, PartialState = Self::Output> + 'a>\nwhere Self: Sized + 'a","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Turns the parser into a trait object by putting it in a `Box`. Can be used to easily\n return parsers from functions without naming the type.","sig":null,"attributes":[{"value":"/ Turns the parser into a trait object by putting it in a `Box`. Can be used to easily","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237585,"byte_end":237673,"line_start":830,"line_end":830,"column_start":5,"column_end":93}},{"value":"/ return parsers from functions without naming the type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237678,"byte_end":237736,"line_start":831,"line_end":831,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237741,"byte_end":237744,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237749,"byte_end":237756,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237761,"byte_end":237782,"line_start":834,"line_end":834,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237787,"byte_end":237804,"line_start":835,"line_end":835,"column_start":5,"column_end":22}},{"value":"/ fn test<'input, F>(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237809,"byte_end":237832,"line_start":836,"line_end":836,"column_start":5,"column_end":28}},{"value":"/     c: char,","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237837,"byte_end":237853,"line_start":837,"line_end":837,"column_start":5,"column_end":21}},{"value":"/     f: F)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237858,"byte_end":237871,"line_start":838,"line_end":838,"column_start":5,"column_end":18}},{"value":"/     -> Box<dyn Parser<&'input str, Output = (char, char), PartialState = ()> + 'input>","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237876,"byte_end":237966,"line_start":839,"line_end":839,"column_start":5,"column_end":95}},{"value":"/     where F: FnMut(char) -> bool + 'static","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":237971,"byte_end":238017,"line_start":840,"line_end":840,"column_start":5,"column_end":51}},{"value":"/ {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238022,"byte_end":238027,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/     combine::parser::combinator::no_partial((token(c), satisfy(f))).boxed()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238032,"byte_end":238111,"line_start":842,"line_end":842,"column_start":5,"column_end":84}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238116,"byte_end":238121,"line_start":843,"line_end":843,"column_start":5,"column_end":10}},{"value":"/ let result = test('a', |c| c >= 'a' && c <= 'f')","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238126,"byte_end":238178,"line_start":844,"line_end":844,"column_start":5,"column_end":57}},{"value":"/     .parse(\"ac\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238183,"byte_end":238204,"line_start":845,"line_end":845,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(result, Ok((('a', 'c'), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238209,"byte_end":238254,"line_start":846,"line_end":846,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238259,"byte_end":238266,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238271,"byte_end":238278,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238283,"byte_end":238306,"line_start":849,"line_end":849,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239513,"byte_end":239517,"line_start":886,"line_end":886,"column_start":8,"column_end":12},"name":"left","qualname":"::parser::Parser::left","value":"pub fn left<R>(Self) -> Either<Self, R> where Self: Sized, R: Parser<Input,\nOutput = Self::Output>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Wraps the parser into the [`Either`](combinator::Either) enum which allows combinators such as [`then`](Parser::then) to return\n multiple different parser types (merging them to one)","sig":null,"attributes":[{"value":"/ Wraps the parser into the [`Either`](combinator::Either) enum which allows combinators such as [`then`](Parser::then) to return","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238561,"byte_end":238692,"line_start":860,"line_end":860,"column_start":5,"column_end":136}},{"value":"/ multiple different parser types (merging them to one)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238697,"byte_end":238754,"line_start":861,"line_end":861,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238759,"byte_end":238762,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238767,"byte_end":238774,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238779,"byte_end":238806,"line_start":864,"line_end":864,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238811,"byte_end":238832,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238837,"byte_end":238886,"line_start":866,"line_end":866,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238891,"byte_end":238908,"line_start":867,"line_end":867,"column_start":5,"column_end":22}},{"value":"/ let mut parser = any().then(|c|","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238913,"byte_end":238948,"line_start":868,"line_end":868,"column_start":5,"column_end":40}},{"value":"/     if c == '#' {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238953,"byte_end":238974,"line_start":869,"line_end":869,"column_start":5,"column_end":26}},{"value":"/         skip_many(satisfy(|c| c != '\\n'))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":238979,"byte_end":239024,"line_start":870,"line_end":870,"column_start":5,"column_end":50}},{"value":"/             .with(value(\"\".to_string()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239029,"byte_end":239073,"line_start":871,"line_end":871,"column_start":5,"column_end":49}},{"value":"/             .left()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239078,"byte_end":239101,"line_start":872,"line_end":872,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239106,"byte_end":239122,"line_start":873,"line_end":873,"column_start":5,"column_end":21}},{"value":"/         many1(letter())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239127,"byte_end":239154,"line_start":874,"line_end":874,"column_start":5,"column_end":32}},{"value":"/             .map(move |mut s: String| { s.insert(0, c); s })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239159,"byte_end":239223,"line_start":875,"line_end":875,"column_start":5,"column_end":69}},{"value":"/             .right()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239228,"byte_end":239252,"line_start":876,"line_end":876,"column_start":5,"column_end":29}},{"value":"/     });","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239257,"byte_end":239268,"line_start":877,"line_end":877,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239273,"byte_end":239276,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"ac2\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239281,"byte_end":239318,"line_start":879,"line_end":879,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Ok((\"ac\".to_string(), \"2\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239323,"byte_end":239375,"line_start":880,"line_end":880,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239380,"byte_end":239383,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"# ac2\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239388,"byte_end":239427,"line_start":882,"line_end":882,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(result, Ok((\"\".to_string(), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239432,"byte_end":239481,"line_start":883,"line_end":883,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239486,"byte_end":239493,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239498,"byte_end":239505,"line_start":885,"line_end":885,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240622,"byte_end":240627,"line_start":920,"line_end":920,"column_start":8,"column_end":13},"name":"right","qualname":"::parser::Parser::right","value":"pub fn right<L>(Self) -> Either<L, Self> where Self: Sized, L: Parser<Input,\nOutput = Self::Output>","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Wraps the parser into the [`Either`](combinator::Either) enum which allows combinators such as [`then`](Parser::then) to return\n multiple different parser types (merging them to one)","sig":null,"attributes":[{"value":"/ Wraps the parser into the [`Either`](combinator::Either) enum which allows combinators such as [`then`](Parser::then) to return","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239670,"byte_end":239801,"line_start":894,"line_end":894,"column_start":5,"column_end":136}},{"value":"/ multiple different parser types (merging them to one)","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239806,"byte_end":239863,"line_start":895,"line_end":895,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239868,"byte_end":239871,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239876,"byte_end":239883,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239888,"byte_end":239915,"line_start":898,"line_end":898,"column_start":5,"column_end":32}},{"value":"/ # use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239920,"byte_end":239941,"line_start":899,"line_end":899,"column_start":5,"column_end":26}},{"value":"/ # use combine::parser::char::{digit, letter};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":239946,"byte_end":239995,"line_start":900,"line_end":900,"column_start":5,"column_end":54}},{"value":"/ # fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240000,"byte_end":240017,"line_start":901,"line_end":901,"column_start":5,"column_end":22}},{"value":"/ let mut parser = any().then(|c|","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240022,"byte_end":240057,"line_start":902,"line_end":902,"column_start":5,"column_end":40}},{"value":"/     if c == '#' {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240062,"byte_end":240083,"line_start":903,"line_end":903,"column_start":5,"column_end":26}},{"value":"/         skip_many(satisfy(|c| c != '\\n'))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240088,"byte_end":240133,"line_start":904,"line_end":904,"column_start":5,"column_end":50}},{"value":"/             .with(value(\"\".to_string()))","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240138,"byte_end":240182,"line_start":905,"line_end":905,"column_start":5,"column_end":49}},{"value":"/             .left()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240187,"byte_end":240210,"line_start":906,"line_end":906,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240215,"byte_end":240231,"line_start":907,"line_end":907,"column_start":5,"column_end":21}},{"value":"/         many1(letter())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240236,"byte_end":240263,"line_start":908,"line_end":908,"column_start":5,"column_end":32}},{"value":"/             .map(move |mut s: String| { s.insert(0, c); s })","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240268,"byte_end":240332,"line_start":909,"line_end":909,"column_start":5,"column_end":69}},{"value":"/             .right()","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240337,"byte_end":240361,"line_start":910,"line_end":910,"column_start":5,"column_end":29}},{"value":"/     });","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240366,"byte_end":240377,"line_start":911,"line_end":911,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240382,"byte_end":240385,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"ac2\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240390,"byte_end":240427,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(result, Ok((\"ac\".to_string(), \"2\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240432,"byte_end":240484,"line_start":914,"line_end":914,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240489,"byte_end":240492,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ let result = parser.parse(\"# ac2\");","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240497,"byte_end":240536,"line_start":916,"line_end":916,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(result, Ok((\"\".to_string(), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240541,"byte_end":240590,"line_start":917,"line_end":917,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240595,"byte_end":240602,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240607,"byte_end":240614,"line_start":919,"line_end":919,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241509,"byte_end":241516,"line_start":947,"line_end":947,"column_start":8,"column_end":15},"name":"spanned","qualname":"::parser::Parser::spanned","value":"pub fn spanned(Self) -> Spanned<Self> where Self: Sized","parent":{"krate":0,"index":2946},"children":[],"decl_id":null,"docs":" Marks errors produced inside the `self` parser with the span from the start of the parse to\n the end of it.","sig":null,"attributes":[{"value":"/ Marks errors produced inside the `self` parser with the span from the start of the parse to","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240781,"byte_end":240876,"line_start":928,"line_end":928,"column_start":5,"column_end":100}},{"value":"/ the end of it.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240881,"byte_end":240899,"line_start":929,"line_end":929,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240904,"byte_end":240907,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ [`p.spanned()`]: ../trait.Parser.html#method.spanned","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240912,"byte_end":240968,"line_start":931,"line_end":931,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240973,"byte_end":240976,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240981,"byte_end":240988,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use combine::{*, parser::{char::string, combinator::spanned}};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":240993,"byte_end":241059,"line_start":934,"line_end":934,"column_start":5,"column_end":71}},{"value":"/ use combine::stream::{easy, span};","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241064,"byte_end":241102,"line_start":935,"line_end":935,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241107,"byte_end":241110,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ let input = \"hel\";","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241115,"byte_end":241137,"line_start":937,"line_end":937,"column_start":5,"column_end":27}},{"value":"/ let result = spanned(string(\"hello\")).parse(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241142,"byte_end":241190,"line_start":938,"line_end":938,"column_start":5,"column_end":53}},{"value":"/     span::Stream::<_, easy::Errors<_, _, span::Span<_>>>::from(easy::Stream::from(input)),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241195,"byte_end":241289,"line_start":939,"line_end":939,"column_start":5,"column_end":99}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241294,"byte_end":241300,"line_start":940,"line_end":940,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241305,"byte_end":241334,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241339,"byte_end":241354,"line_start":942,"line_end":942,"column_start":5,"column_end":20}},{"value":"/     result.unwrap_err().position.map(|p| p.translate_position(input)),","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241359,"byte_end":241433,"line_start":943,"line_end":943,"column_start":5,"column_end":79}},{"value":"/     span::Span { start: 0, end: 3 },","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241438,"byte_end":241478,"line_start":944,"line_end":944,"column_start":5,"column_end":45}},{"value":"/ );","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241483,"byte_end":241489,"line_start":945,"line_end":945,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241494,"byte_end":241501,"line_start":946,"line_end":946,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3016},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241772,"byte_end":241782,"line_start":958,"line_end":958,"column_start":11,"column_end":21},"name":"EasyParser","qualname":"::parser::EasyParser","value":"EasyParser<Input: Stream>: Parser<crate::easy::Stream<Input>>","parent":null,"children":[{"krate":0,"index":3018}],"decl_id":null,"docs":" Provides the `easy_parse` method which provides good error messages by default\n","sig":null,"attributes":[{"value":"/ Provides the `easy_parse` method which provides good error messages by default","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241608,"byte_end":241690,"line_start":955,"line_end":955,"column_start":1,"column_end":83}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241691,"byte_end":241714,"line_start":956,"line_end":956,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243359,"byte_end":243369,"line_start":1005,"line_end":1005,"column_start":8,"column_end":18},"name":"easy_parse","qualname":"::parser::EasyParser::easy_parse","value":"pub fn easy_parse(&mut Self, Input)\n->\n    Result<(<Self as Parser<crate::easy::Stream<Input>>>::Output, Input),\n           crate::easy::ParseError<Input>> where Input: Stream,\ncrate::easy::Stream<Input>: StreamOnce<Token = Input::Token, Range =\nInput::Token, Error = Input::Token, Position = Input::Token>,\nInput::Position: Default, Self: Sized + Parser<crate::easy::Stream<Input>>","parent":{"krate":0,"index":3016},"children":[],"decl_id":null,"docs":" Entry point of the parser. Takes some input and tries to parse it, returning an easy to use\n and format error if parsing did not succeed.","sig":null,"attributes":[{"value":"/ Entry point of the parser. Takes some input and tries to parse it, returning an easy to use","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241904,"byte_end":241999,"line_start":963,"line_end":963,"column_start":5,"column_end":100}},{"value":"/ and format error if parsing did not succeed.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242004,"byte_end":242052,"line_start":964,"line_end":964,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242057,"byte_end":242060,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ Returns the parsed result and the remaining input if the parser succeeds, or a","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242065,"byte_end":242147,"line_start":966,"line_end":966,"column_start":5,"column_end":87}},{"value":"/ This function wraps requires `Input == easy::Stream<Input>` which makes it return","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242152,"byte_end":242237,"line_start":967,"line_end":967,"column_start":5,"column_end":90}},{"value":"/ return `easy::Errors` if an error occurs. Due to this wrapping it is recommended that the","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242242,"byte_end":242335,"line_start":968,"line_end":968,"column_start":5,"column_end":98}},{"value":"/ parser `Self` is written with a generic input type.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242340,"byte_end":242395,"line_start":969,"line_end":969,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242400,"byte_end":242403,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242408,"byte_end":242415,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242420,"byte_end":242438,"line_start":972,"line_end":972,"column_start":5,"column_end":23}},{"value":"/ # extern crate combine;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242443,"byte_end":242470,"line_start":973,"line_end":973,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242475,"byte_end":242478,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ use combine::*;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242483,"byte_end":242502,"line_start":975,"line_end":975,"column_start":5,"column_end":24}},{"value":"/ use combine::parser::repeat::many1;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242507,"byte_end":242546,"line_start":976,"line_end":976,"column_start":5,"column_end":44}},{"value":"/ use combine::parser::char::letter;","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242551,"byte_end":242589,"line_start":977,"line_end":977,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242594,"byte_end":242597,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ // Good!","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242602,"byte_end":242614,"line_start":979,"line_end":979,"column_start":5,"column_end":17}},{"value":"/ parser!{","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242619,"byte_end":242631,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/ fn my_parser[Input]()(Input) -> String","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242636,"byte_end":242678,"line_start":981,"line_end":981,"column_start":5,"column_end":47}},{"value":"/     where [Input: Stream<Token = char>]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242683,"byte_end":242726,"line_start":982,"line_end":982,"column_start":5,"column_end":48}},{"value":"/ {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242731,"byte_end":242736,"line_start":983,"line_end":983,"column_start":5,"column_end":10}},{"value":"/     many1::<String, _, _>(letter())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242741,"byte_end":242780,"line_start":984,"line_end":984,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242785,"byte_end":242790,"line_start":985,"line_end":985,"column_start":5,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242795,"byte_end":242800,"line_start":986,"line_end":986,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242805,"byte_end":242808,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ // Won't compile with `easy_parse` since it is specialized on `&str`","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242813,"byte_end":242885,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ parser!{","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242890,"byte_end":242902,"line_start":989,"line_end":989,"column_start":5,"column_end":17}},{"value":"/ fn my_parser2['a]()(&'a str) -> String","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242907,"byte_end":242949,"line_start":990,"line_end":990,"column_start":5,"column_end":47}},{"value":"/     where [&'a str: Stream<Token = char, Range = &'a str>]","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":242954,"byte_end":243016,"line_start":991,"line_end":991,"column_start":5,"column_end":67}},{"value":"/ {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243021,"byte_end":243026,"line_start":992,"line_end":992,"column_start":5,"column_end":10}},{"value":"/     many1(letter())","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243031,"byte_end":243054,"line_start":993,"line_end":993,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243059,"byte_end":243064,"line_start":994,"line_end":994,"column_start":5,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243069,"byte_end":243074,"line_start":995,"line_end":995,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243079,"byte_end":243082,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243087,"byte_end":243102,"line_start":997,"line_end":997,"column_start":5,"column_end":20}},{"value":"/     assert_eq!(my_parser().parse(\"abc\"), Ok((\"abc\".to_string(), \"\")));","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243107,"byte_end":243181,"line_start":998,"line_end":998,"column_start":5,"column_end":79}},{"value":"/     // Would fail to compile if uncommented","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243186,"byte_end":243233,"line_start":999,"line_end":999,"column_start":5,"column_end":52}},{"value":"/     // my_parser2().parse(\"abc\")","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243238,"byte_end":243274,"line_start":1000,"line_end":1000,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243279,"byte_end":243284,"line_start":1001,"line_end":1001,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243289,"byte_end":243296,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243301,"byte_end":243304,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ [`ParseError`]: struct.ParseError.html","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":243309,"byte_end":243351,"line_start":1004,"line_end":1004,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":3031},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":245845,"byte_end":245854,"line_start":1101,"line_end":1101,"column_start":11,"column_end":20},"name":"ParseMode","qualname":"::parser::ParseMode","value":"ParseMode: Copy","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3037}],"decl_id":null,"docs":" Internal API. May break without a semver bump\n Specifies whether the parser must check for partial state that must be resumed\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":245687,"byte_end":245736,"line_start":1098,"line_end":1098,"column_start":1,"column_end":50}},{"value":"/ Specifies whether the parser must check for partial state that must be resumed","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":245752,"byte_end":245834,"line_start":1100,"line_end":1100,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":246015,"byte_end":246023,"line_start":1104,"line_end":1104,"column_start":8,"column_end":16},"name":"is_first","qualname":"::parser::ParseMode::is_first","value":"pub fn is_first(Self) -> bool","parent":{"krate":0,"index":3031},"children":[],"decl_id":null,"docs":" If `true` then the parser has no previous state to resume otherwise the parser *might* have\n state to resume which it must check.\n","sig":null,"attributes":[{"value":"/ If `true` then the parser has no previous state to resume otherwise the parser *might* have","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":245867,"byte_end":245962,"line_start":1102,"line_end":1102,"column_start":5,"column_end":100}},{"value":"/ state to resume which it must check.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":245967,"byte_end":246007,"line_start":1103,"line_end":1103,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":246090,"byte_end":246099,"line_start":1106,"line_end":1106,"column_start":8,"column_end":17},"name":"set_first","qualname":"::parser::ParseMode::set_first","value":"pub fn set_first(&mut Self)","parent":{"krate":0,"index":3031},"children":[],"decl_id":null,"docs":" Puts the mode into `first` parsing.\n","sig":null,"attributes":[{"value":"/ Puts the mode into `first` parsing.","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":246043,"byte_end":246082,"line_start":1105,"line_end":1105,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":246120,"byte_end":246125,"line_start":1108,"line_end":1108,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::ParseMode::parse","value":"pub fn parse<P, Input>(Self, &mut P, &mut Input, &mut P::PartialState)\n-> ParseResult<P::Output, Input::Error> where P: Parser<Input>, Input: Stream","parent":{"krate":0,"index":3031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":246366,"byte_end":246381,"line_start":1119,"line_end":1119,"column_start":8,"column_end":23},"name":"parse_committed","qualname":"::parser::ParseMode::parse_committed","value":"pub fn parse_committed<P,\n                       Input>(Self, &mut P, &mut Input, &mut P::PartialState)\n-> ParseResult<P::Output, <Input as StreamOnce>::Error> where\nP: Parser<Input>, Input: Stream","parent":{"krate":0,"index":3031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":246349,"byte_end":246358,"line_start":1118,"line_end":1118,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9432},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247287,"byte_end":247296,"line_start":1148,"line_end":1148,"column_start":12,"column_end":21},"name":"FirstMode","qualname":"::parser::FirstMode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247188,"byte_end":247237,"line_start":1145,"line_end":1145,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":9437},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247850,"byte_end":247861,"line_start":1174,"line_end":1174,"column_start":12,"column_end":23},"name":"PartialMode","qualname":"::parser::PartialMode","value":"PartialMode { first }","parent":null,"children":[{"krate":0,"index":9438}],"decl_id":null,"docs":" Internal API. May break without a semver bump\n","sig":null,"attributes":[{"value":"/ Internal API. May break without a semver bump","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247742,"byte_end":247791,"line_start":1171,"line_end":1171,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":9438},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247872,"byte_end":247877,"line_start":1175,"line_end":1175,"column_start":9,"column_end":14},"name":"first","qualname":"::parser::PartialMode::first","value":"bool","parent":{"krate":0,"index":9437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9444},"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":23001,"byte_end":23012,"line_start":621,"line_end":621,"column_start":12,"column_end":23},"name":"ErrorOffset","qualname":"::ErrorOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":35862,"byte_end":35868,"line_start":14,"line_end":14,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37361,"byte_end":37365,"line_start":67,"line_end":67,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37815,"byte_end":37819,"line_start":84,"line_end":84,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38105,"byte_end":38109,"line_start":97,"line_end":97,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38394,"byte_end":38398,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38762,"byte_end":38766,"line_start":126,"line_end":126,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38897,"byte_end":38902,"line_start":132,"line_end":132,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39187,"byte_end":39191,"line_start":145,"line_end":145,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39322,"byte_end":39327,"line_start":151,"line_end":151,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39693,"byte_end":39697,"line_start":165,"line_end":165,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39843,"byte_end":39849,"line_start":174,"line_end":174,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40136,"byte_end":40140,"line_start":186,"line_end":186,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40292,"byte_end":40298,"line_start":195,"line_end":195,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41292,"byte_end":41298,"line_start":220,"line_end":220,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41473,"byte_end":41479,"line_start":228,"line_end":228,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41625,"byte_end":41631,"line_start":236,"line_end":236,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52195,"byte_end":52210,"line_start":558,"line_end":558,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52366,"byte_end":52381,"line_start":565,"line_end":565,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52456,"byte_end":52471,"line_start":571,"line_end":571,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52723,"byte_end":52738,"line_start":581,"line_end":581,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":54276,"byte_end":54291,"line_start":651,"line_end":651,"column_start":67,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":55462,"byte_end":55477,"line_start":703,"line_end":703,"column_start":71,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":55930,"byte_end":55945,"line_start":721,"line_end":721,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56403,"byte_end":56420,"line_start":741,"line_end":741,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56576,"byte_end":56593,"line_start":748,"line_end":748,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56668,"byte_end":56685,"line_start":754,"line_end":754,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":57006,"byte_end":57023,"line_start":765,"line_end":765,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":58983,"byte_end":59000,"line_start":840,"line_end":840,"column_start":67,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":60183,"byte_end":60200,"line_start":891,"line_end":891,"column_start":71,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":60653,"byte_end":60670,"line_start":909,"line_end":909,"column_start":52,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61282,"byte_end":61289,"line_start":931,"line_end":931,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62279,"byte_end":62290,"line_start":957,"line_end":957,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":64097,"byte_end":64108,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":64261,"byte_end":64272,"line_start":1033,"line_end":1033,"column_start":60,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":64642,"byte_end":64653,"line_start":1045,"line_end":1045,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":65054,"byte_end":65065,"line_start":1059,"line_end":1059,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123279,"byte_end":123288,"line_start":54,"line_end":54,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":126830,"byte_end":126836,"line_start":182,"line_end":182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":126870,"byte_end":126876,"line_start":184,"line_end":184,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":127223,"byte_end":127229,"line_start":199,"line_end":199,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":131452,"byte_end":131462,"line_start":358,"line_end":358,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":131507,"byte_end":131517,"line_start":360,"line_end":360,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":131921,"byte_end":131931,"line_start":375,"line_end":375,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":143292,"byte_end":143301,"line_start":749,"line_end":749,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":143902,"byte_end":143911,"line_start":768,"line_end":768,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150910,"byte_end":150916,"line_start":38,"line_end":38,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":151529,"byte_end":151535,"line_start":62,"line_end":62,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":152046,"byte_end":152052,"line_start":80,"line_end":80,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":152654,"byte_end":152660,"line_start":102,"line_end":102,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157820,"byte_end":157824,"line_start":105,"line_end":105,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":158198,"byte_end":158202,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":158866,"byte_end":158870,"line_start":149,"line_end":149,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":159438,"byte_end":159442,"line_start":162,"line_end":162,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":159791,"byte_end":159795,"line_start":173,"line_end":173,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":159906,"byte_end":159910,"line_start":178,"line_end":178,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160024,"byte_end":160028,"line_start":184,"line_end":184,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160136,"byte_end":160140,"line_start":190,"line_end":190,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160737,"byte_end":160742,"line_start":209,"line_end":209,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":163729,"byte_end":163734,"line_start":315,"line_end":315,"column_start":81,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":164884,"byte_end":164890,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":165429,"byte_end":165434,"line_start":384,"line_end":384,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":166760,"byte_end":166766,"line_start":416,"line_end":416,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":168827,"byte_end":168832,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":169608,"byte_end":169613,"line_start":531,"line_end":531,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":169975,"byte_end":169980,"line_start":542,"line_end":542,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170125,"byte_end":170130,"line_start":551,"line_end":551,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173665,"byte_end":173671,"line_start":647,"line_end":647,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177408,"byte_end":177414,"line_start":769,"line_end":769,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177632,"byte_end":177638,"line_start":780,"line_end":780,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177948,"byte_end":177953,"line_start":792,"line_end":792,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":178403,"byte_end":178409,"line_start":806,"line_end":806,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":178504,"byte_end":178510,"line_start":812,"line_end":812,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":178944,"byte_end":178950,"line_start":830,"line_end":830,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":179414,"byte_end":179420,"line_start":851,"line_end":851,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":180338,"byte_end":180344,"line_start":888,"line_end":888,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181874,"byte_end":181885,"line_start":48,"line_end":48,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181967,"byte_end":181981,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182089,"byte_end":182095,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183137,"byte_end":183143,"line_start":92,"line_end":92,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183434,"byte_end":183440,"line_start":103,"line_end":103,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183835,"byte_end":183841,"line_start":114,"line_end":114,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":184278,"byte_end":184284,"line_start":128,"line_end":128,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186181,"byte_end":186196,"line_start":200,"line_end":200,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186631,"byte_end":186646,"line_start":228,"line_end":228,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186901,"byte_end":186916,"line_start":238,"line_end":238,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187347,"byte_end":187361,"line_start":257,"line_end":257,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187468,"byte_end":187482,"line_start":263,"line_end":263,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187628,"byte_end":187642,"line_start":269,"line_end":269,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187741,"byte_end":187755,"line_start":275,"line_end":275,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":188297,"byte_end":188311,"line_start":304,"line_end":304,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":188872,"byte_end":188886,"line_start":333,"line_end":333,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":189058,"byte_end":189064,"line_start":341,"line_end":341,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":190775,"byte_end":190781,"line_start":403,"line_end":403,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":192915,"byte_end":192920,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":193232,"byte_end":193237,"line_start":28,"line_end":28,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":193521,"byte_end":193526,"line_start":38,"line_end":38,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":195000,"byte_end":195005,"line_start":109,"line_end":109,"column_start":67,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196092,"byte_end":196098,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196476,"byte_end":196482,"line_start":177,"line_end":177,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":197906,"byte_end":197910,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198070,"byte_end":198074,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198368,"byte_end":198374,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198488,"byte_end":198494,"line_start":46,"line_end":46,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":199229,"byte_end":199235,"line_start":71,"line_end":71,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":199993,"byte_end":199999,"line_start":97,"line_end":97,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":201301,"byte_end":201307,"line_start":144,"line_end":144,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202046,"byte_end":202052,"line_start":12,"line_end":12,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202210,"byte_end":202216,"line_start":22,"line_end":22,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202560,"byte_end":202566,"line_start":39,"line_end":39,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202942,"byte_end":202948,"line_start":58,"line_end":58,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":204115,"byte_end":204121,"line_start":21,"line_end":21,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":204504,"byte_end":204509,"line_start":35,"line_end":35,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":204643,"byte_end":204648,"line_start":42,"line_end":42,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205048,"byte_end":205055,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205734,"byte_end":205741,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206098,"byte_end":206105,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206196,"byte_end":206203,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":207193,"byte_end":207200,"line_start":137,"line_end":137,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71872,"byte_end":71877,"line_start":165,"line_end":165,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74481,"byte_end":74486,"line_start":244,"line_end":244,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87037,"byte_end":87050,"line_start":749,"line_end":749,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87141,"byte_end":87154,"line_start":755,"line_end":755,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87301,"byte_end":87314,"line_start":765,"line_end":765,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87639,"byte_end":87652,"line_start":782,"line_end":782,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87997,"byte_end":88010,"line_start":801,"line_end":801,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89111,"byte_end":89125,"line_start":844,"line_end":844,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89454,"byte_end":89468,"line_start":857,"line_end":857,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89615,"byte_end":89629,"line_start":867,"line_end":867,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89954,"byte_end":89968,"line_start":884,"line_end":884,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":90314,"byte_end":90328,"line_start":903,"line_end":903,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91215,"byte_end":91233,"line_start":941,"line_end":941,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91380,"byte_end":91398,"line_start":951,"line_end":951,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91723,"byte_end":91741,"line_start":968,"line_end":968,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":92088,"byte_end":92106,"line_start":987,"line_end":987,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":93076,"byte_end":93087,"line_start":1026,"line_end":1026,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":93205,"byte_end":93216,"line_start":1032,"line_end":1032,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":93401,"byte_end":93412,"line_start":1042,"line_end":1042,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":94703,"byte_end":94714,"line_start":1105,"line_end":1105,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96147,"byte_end":96161,"line_start":1160,"line_end":1160,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96648,"byte_end":96662,"line_start":1176,"line_end":1176,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96844,"byte_end":96858,"line_start":1186,"line_end":1186,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97403,"byte_end":97416,"line_start":1207,"line_end":1207,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97521,"byte_end":97534,"line_start":1213,"line_end":1213,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97570,"byte_end":97583,"line_start":1215,"line_end":1215,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97685,"byte_end":97698,"line_start":1221,"line_end":1221,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97803,"byte_end":97816,"line_start":1227,"line_end":1227,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97855,"byte_end":97868,"line_start":1229,"line_end":1229,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98006,"byte_end":98019,"line_start":1235,"line_end":1235,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98132,"byte_end":98145,"line_start":1241,"line_end":1241,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98299,"byte_end":98312,"line_start":1250,"line_end":1250,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98481,"byte_end":98494,"line_start":1259,"line_end":1259,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":291445,"byte_end":291451,"line_start":356,"line_end":356,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":6676},{"krate":0,"index":6677},{"krate":0,"index":1685},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":298246,"byte_end":298248,"line_start":562,"line_end":562,"column_start":42,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":6690},{"krate":0,"index":6691},{"krate":0,"index":1714},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300402,"byte_end":300410,"line_start":635,"line_end":635,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":6701},{"krate":0,"index":6702},{"krate":0,"index":1726},{"krate":0,"index":6703},{"krate":0,"index":6704}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":307806,"byte_end":307819,"line_start":17,"line_end":17,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309652,"byte_end":309655,"line_start":85,"line_end":85,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":6726},{"krate":0,"index":6727},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6730}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311644,"byte_end":311653,"line_start":164,"line_end":164,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":6740},{"krate":0,"index":6741},{"krate":0,"index":6742}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312791,"byte_end":312794,"line_start":210,"line_end":210,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":1805},{"krate":0,"index":6758},{"krate":0,"index":6759},{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":313892,"byte_end":313900,"line_start":255,"line_end":255,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":1820},{"krate":0,"index":6776},{"krate":0,"index":6777},{"krate":0,"index":6778}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":315069,"byte_end":315076,"line_start":300,"line_end":300,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":1835},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":316454,"byte_end":316461,"line_start":351,"line_end":351,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":6810},{"krate":0,"index":6811},{"krate":0,"index":1850},{"krate":0,"index":6812},{"krate":0,"index":6813},{"krate":0,"index":6814}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":318831,"byte_end":318840,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":321374,"byte_end":321383,"line_start":494,"line_end":494,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":6828},{"krate":0,"index":6829},{"krate":0,"index":1869},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":323005,"byte_end":323011,"line_start":551,"line_end":551,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":1892},{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":325295,"byte_end":325304,"line_start":629,"line_end":629,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":6832},{"krate":0,"index":6833},{"krate":0,"index":1905},{"krate":0,"index":6834},{"krate":0,"index":6835},{"krate":0,"index":6836}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":326220,"byte_end":326226,"line_start":672,"line_end":672,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":6846},{"krate":0,"index":6847},{"krate":0,"index":1917},{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6850}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":327408,"byte_end":327429,"line_start":724,"line_end":724,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":6856},{"krate":0,"index":6857},{"krate":0,"index":1933},{"krate":0,"index":6858},{"krate":0,"index":6859},{"krate":0,"index":6860}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":330114,"byte_end":330139,"line_start":827,"line_end":827,"column_start":34,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":6866},{"krate":0,"index":6867},{"krate":0,"index":1948},{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332888,"byte_end":332917,"line_start":930,"line_end":930,"column_start":34,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":6876},{"krate":0,"index":6877},{"krate":0,"index":1963},{"krate":0,"index":6878},{"krate":0,"index":6879},{"krate":0,"index":6880}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335503,"byte_end":335507,"line_start":1024,"line_end":1024,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":6890},{"krate":0,"index":6891},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337486,"byte_end":337493,"line_start":1096,"line_end":1096,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337809,"byte_end":337816,"line_start":1109,"line_end":1109,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":6905},{"krate":0,"index":6906},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339986,"byte_end":339992,"line_start":1186,"line_end":1186,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":340037,"byte_end":340043,"line_start":1188,"line_end":1188,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":340411,"byte_end":340414,"line_start":1209,"line_end":1209,"column_start":17,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":340463,"byte_end":340466,"line_start":1211,"line_end":1211,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":342681,"byte_end":342687,"line_start":1286,"line_end":1286,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":6957},{"krate":0,"index":6958},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":347066,"byte_end":347080,"line_start":1429,"line_end":1429,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":6959},{"krate":0,"index":6960},{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":349164,"byte_end":349171,"line_start":1510,"line_end":1510,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":6968},{"krate":0,"index":6969},{"krate":0,"index":2106},{"krate":0,"index":6970},{"krate":0,"index":6971}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":350935,"byte_end":350945,"line_start":18,"line_end":18,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":353142,"byte_end":353149,"line_start":97,"line_end":97,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":6994},{"krate":0,"index":6995},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":6996},{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":354695,"byte_end":354703,"line_start":154,"line_end":154,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":7008},{"krate":0,"index":7009},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":7010},{"krate":0,"index":7011}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":355887,"byte_end":355893,"line_start":200,"line_end":200,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":7021}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358822,"byte_end":358830,"line_start":69,"line_end":69,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":359572,"byte_end":359581,"line_start":105,"line_end":105,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":359809,"byte_end":359818,"line_start":118,"line_end":118,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":362454,"byte_end":362459,"line_start":35,"line_end":35,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":366055,"byte_end":366073,"line_start":153,"line_end":153,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":2286},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369398,"byte_end":369402,"line_start":261,"line_end":261,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370508,"byte_end":370517,"line_start":305,"line_end":305,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":7080},{"krate":0,"index":7081},{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372073,"byte_end":372083,"line_start":363,"line_end":363,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":7082},{"krate":0,"index":7083},{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373642,"byte_end":373656,"line_start":423,"line_end":423,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378191,"byte_end":378200,"line_start":543,"line_end":543,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378500,"byte_end":378506,"line_start":557,"line_end":557,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":386968,"byte_end":386983,"line_start":89,"line_end":89,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":387654,"byte_end":387665,"line_start":119,"line_end":119,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":7184},{"krate":0,"index":7185},{"krate":0,"index":2432},{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":391053,"byte_end":391057,"line_start":252,"line_end":252,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":393632,"byte_end":393636,"line_start":338,"line_end":338,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":394746,"byte_end":394750,"line_start":380,"line_end":380,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":7223},{"krate":0,"index":7224},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396781,"byte_end":396786,"line_start":452,"line_end":452,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":7238},{"krate":0,"index":7239},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":7240},{"krate":0,"index":7241}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399289,"byte_end":399293,"line_start":543,"line_end":543,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399367,"byte_end":399371,"line_start":549,"line_end":549,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":401094,"byte_end":401099,"line_start":618,"line_end":618,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":7300},{"krate":0,"index":7301},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":7302},{"krate":0,"index":7303}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":403195,"byte_end":403201,"line_start":693,"line_end":693,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":7320},{"krate":0,"index":7321},{"krate":0,"index":2544},{"krate":0,"index":2548},{"krate":0,"index":7322},{"krate":0,"index":7323}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":406309,"byte_end":406317,"line_start":801,"line_end":801,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":7340},{"krate":0,"index":7341},{"krate":0,"index":2561},{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":408395,"byte_end":408404,"line_start":875,"line_end":875,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":2577},{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411627,"byte_end":411634,"line_start":982,"line_end":982,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":2594},{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":414251,"byte_end":414258,"line_start":1072,"line_end":1072,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416677,"byte_end":416686,"line_start":1147,"line_end":1147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":7400},{"krate":0,"index":7401},{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":420948,"byte_end":420959,"line_start":1270,"line_end":1270,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":7437},{"krate":0,"index":7438},{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":424766,"byte_end":424773,"line_start":1384,"line_end":1384,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428683,"byte_end":428690,"line_start":1495,"line_end":1495,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":7471},{"krate":0,"index":7472},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":432944,"byte_end":432957,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433105,"byte_end":433118,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":450193,"byte_end":450197,"line_start":496,"line_end":496,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":2738},{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9169}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":451373,"byte_end":451377,"line_start":544,"line_end":544,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":9182},{"krate":0,"index":9183},{"krate":0,"index":2751},{"krate":0,"index":9184},{"krate":0,"index":9185},{"krate":0,"index":9186}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":453105,"byte_end":453109,"line_start":614,"line_end":614,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":9250},{"krate":0,"index":9251},{"krate":0,"index":2765},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":455629,"byte_end":455640,"line_start":704,"line_end":704,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":2780},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":458326,"byte_end":458333,"line_start":801,"line_end":801,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":9280},{"krate":0,"index":9281},{"krate":0,"index":2795},{"krate":0,"index":2797}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461334,"byte_end":461337,"line_start":17,"line_end":17,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":462696,"byte_end":462703,"line_start":73,"line_end":73,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463804,"byte_end":463814,"line_start":121,"line_end":121,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465201,"byte_end":465206,"line_start":179,"line_end":179,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":466320,"byte_end":466326,"line_start":230,"line_end":230,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":469557,"byte_end":469566,"line_start":334,"line_end":334,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472410,"byte_end":472418,"line_start":431,"line_end":431,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":473465,"byte_end":473470,"line_start":477,"line_end":477,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474717,"byte_end":474723,"line_start":530,"line_end":530,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476165,"byte_end":476170,"line_start":581,"line_end":581,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476916,"byte_end":476923,"line_start":616,"line_end":616,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477779,"byte_end":477782,"line_start":652,"line_end":652,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":244092,"byte_end":244093,"line_start":1029,"line_end":1029,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":245592,"byte_end":245595,"line_start":1090,"line_end":1090,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9425},{"krate":0,"index":9426},{"krate":0,"index":9427},{"krate":0,"index":9428},{"krate":0,"index":9429},{"krate":0,"index":9430},{"krate":0,"index":9431}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247317,"byte_end":247326,"line_start":1149,"line_end":1149,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247906,"byte_end":247917,"line_start":1177,"line_end":1177,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22856,"byte_end":22861,"line_start":613,"line_end":613,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":63}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22884,"byte_end":22890,"line_start":615,"line_end":615,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":444}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":67946,"byte_end":67956,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":463}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68142,"byte_end":68150,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":517}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68231,"byte_end":68235,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":546}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68315,"byte_end":68323,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":771}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68459,"byte_end":68463,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":914}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68473,"byte_end":68477,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":979}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68540,"byte_end":68545,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1034}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68627,"byte_end":68634,"line_start":73,"line_end":73,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1072}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/lib.rs","byte_start":22913,"byte_end":22919,"line_start":617,"line_end":617,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1443}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211339,"byte_end":211343,"line_start":55,"line_end":55,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1498}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211353,"byte_end":211357,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1572}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211367,"byte_end":211373,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1640}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211383,"byte_end":211393,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1735}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211403,"byte_end":211408,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2112}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211418,"byte_end":211426,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2189}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211436,"byte_end":211441,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2237}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211541,"byte_end":211547,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2374}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211557,"byte_end":211565,"line_start":66,"line_end":66,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2687}},{"kind":"Mod","span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":211575,"byte_end":211580,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2803}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":35862,"byte_end":35868,"line_start":14,"line_end":14,"column_start":32,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":30399},"to":{"krate":0,"index":70}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37361,"byte_end":37365,"line_start":67,"line_end":67,"column_start":43,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3052},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":37815,"byte_end":37819,"line_start":84,"line_end":84,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38105,"byte_end":38109,"line_start":97,"line_end":97,"column_start":38,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38394,"byte_end":38398,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38762,"byte_end":38766,"line_start":126,"line_end":126,"column_start":31,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":38897,"byte_end":38902,"line_start":132,"line_end":132,"column_start":40,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":128},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39187,"byte_end":39191,"line_start":145,"line_end":145,"column_start":31,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39322,"byte_end":39327,"line_start":151,"line_end":151,"column_start":40,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":142},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39693,"byte_end":39697,"line_start":165,"line_end":165,"column_start":32,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":39843,"byte_end":39849,"line_start":174,"line_end":174,"column_start":40,"column_end":46},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":156},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40136,"byte_end":40140,"line_start":186,"line_end":186,"column_start":35,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":40292,"byte_end":40298,"line_start":195,"line_end":195,"column_start":43,"column_end":49},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":170},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41292,"byte_end":41298,"line_start":220,"line_end":220,"column_start":22,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3078},"to":{"krate":2,"index":1878}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41473,"byte_end":41479,"line_start":228,"line_end":228,"column_start":22,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3078},"to":{"krate":2,"index":1875}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":41625,"byte_end":41631,"line_start":236,"line_end":236,"column_start":9,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":45964,"byte_end":45969,"line_start":365,"line_end":365,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":217}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48850,"byte_end":48855,"line_start":454,"line_end":454,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":250}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":48858,"byte_end":48867,"line_start":454,"line_end":454,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1692},"to":{"krate":0,"index":250}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51435,"byte_end":51440,"line_start":531,"line_end":531,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":276}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":51908,"byte_end":51913,"line_start":544,"line_end":544,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":285}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52195,"byte_end":52210,"line_start":558,"line_end":558,"column_start":23,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3100},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52366,"byte_end":52381,"line_start":565,"line_end":565,"column_start":19,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3100},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52456,"byte_end":52471,"line_start":571,"line_end":571,"column_start":6,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":52723,"byte_end":52738,"line_start":581,"line_end":581,"column_start":48,"column_end":63},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3100},"to":{"krate":0,"index":217}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":54276,"byte_end":54291,"line_start":651,"line_end":651,"column_start":67,"column_end":82},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3100},"to":{"krate":0,"index":250}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":55462,"byte_end":55477,"line_start":703,"line_end":703,"column_start":71,"column_end":86},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3100},"to":{"krate":0,"index":276}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":55930,"byte_end":55945,"line_start":721,"line_end":721,"column_start":52,"column_end":67},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3100},"to":{"krate":0,"index":285}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56403,"byte_end":56420,"line_start":741,"line_end":741,"column_start":23,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3113},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56576,"byte_end":56593,"line_start":748,"line_end":748,"column_start":19,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3113},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":56668,"byte_end":56685,"line_start":754,"line_end":754,"column_start":6,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":57006,"byte_end":57023,"line_start":765,"line_end":765,"column_start":48,"column_end":65},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3113},"to":{"krate":0,"index":217}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":58983,"byte_end":59000,"line_start":840,"line_end":840,"column_start":67,"column_end":84},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3113},"to":{"krate":0,"index":250}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":60183,"byte_end":60200,"line_start":891,"line_end":891,"column_start":71,"column_end":88},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3113},"to":{"krate":0,"index":276}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":60653,"byte_end":60670,"line_start":909,"line_end":909,"column_start":52,"column_end":69},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3113},"to":{"krate":0,"index":285}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":61282,"byte_end":61289,"line_start":931,"line_end":931,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3128},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":62279,"byte_end":62290,"line_start":957,"line_end":957,"column_start":12,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":64097,"byte_end":64108,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":64261,"byte_end":64272,"line_start":1033,"line_end":1033,"column_start":60,"column_end":71},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3146},"to":{"krate":2,"index":1881}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":64642,"byte_end":64653,"line_start":1045,"line_end":1045,"column_start":44,"column_end":55},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3146},"to":{"krate":2,"index":1881}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/error.rs","byte_start":65054,"byte_end":65065,"line_start":1059,"line_end":1059,"column_start":44,"column_end":55},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3146},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":123279,"byte_end":123288,"line_start":54,"line_end":54,"column_start":9,"column_end":18},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":125187,"byte_end":125193,"line_start":118,"line_end":118,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":481},"to":{"krate":0,"index":482}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":125456,"byte_end":125469,"line_start":128,"line_end":128,"column_start":31,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":482},"to":{"krate":0,"index":487}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":126830,"byte_end":126836,"line_start":182,"line_end":182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3187},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":126870,"byte_end":126876,"line_start":184,"line_end":184,"column_start":30,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3187},"to":{"krate":0,"index":482}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":127223,"byte_end":127229,"line_start":199,"line_end":199,"column_start":32,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3187},"to":{"krate":0,"index":487}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":131452,"byte_end":131462,"line_start":358,"line_end":358,"column_start":25,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3192},"to":{"krate":0,"index":481}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":131507,"byte_end":131517,"line_start":360,"line_end":360,"column_start":41,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3192},"to":{"krate":0,"index":482}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":131921,"byte_end":131931,"line_start":375,"line_end":375,"column_start":43,"column_end":53},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3192},"to":{"krate":0,"index":487}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":143292,"byte_end":143301,"line_start":749,"line_end":749,"column_start":24,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3180},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buf_reader.rs","byte_start":143902,"byte_end":143911,"line_start":768,"line_end":768,"column_start":27,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3180},"to":{"krate":1,"index":3076}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":150910,"byte_end":150916,"line_start":38,"line_end":38,"column_start":29,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3196},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":151529,"byte_end":151535,"line_start":62,"line_end":62,"column_start":13,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":152046,"byte_end":152052,"line_start":80,"line_end":80,"column_start":28,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3196},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/buffered.rs","byte_start":152654,"byte_end":152660,"line_start":102,"line_end":102,"column_start":28,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3196},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":157820,"byte_end":157824,"line_start":105,"line_end":105,"column_start":48,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":158198,"byte_end":158202,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":158866,"byte_end":158870,"line_start":149,"line_end":149,"column_start":48,"column_end":52},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":1692}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":159438,"byte_end":159442,"line_start":162,"line_end":162,"column_start":57,"column_end":61},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":159791,"byte_end":159795,"line_start":173,"line_end":173,"column_start":24,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":159906,"byte_end":159910,"line_start":178,"line_end":178,"column_start":29,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160024,"byte_end":160028,"line_start":184,"line_end":184,"column_start":35,"column_end":39},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160136,"byte_end":160140,"line_start":190,"line_end":190,"column_start":22,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":160737,"byte_end":160742,"line_start":209,"line_end":209,"column_start":48,"column_end":53},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3234},"to":{"krate":0,"index":217}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":163729,"byte_end":163734,"line_start":315,"line_end":315,"column_start":81,"column_end":86},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3234},"to":{"krate":0,"index":250}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":164884,"byte_end":164890,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3253},"to":{"krate":0,"index":276}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":165429,"byte_end":165434,"line_start":384,"line_end":384,"column_start":66,"column_end":71},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3234},"to":{"krate":0,"index":285}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":166760,"byte_end":166766,"line_start":416,"line_end":416,"column_start":9,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3253},"to":{"krate":0,"index":250}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":168827,"byte_end":168832,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":169608,"byte_end":169613,"line_start":531,"line_end":531,"column_start":48,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3234},"to":{"krate":2,"index":1692}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":169975,"byte_end":169980,"line_start":542,"line_end":542,"column_start":27,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3234},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":170125,"byte_end":170130,"line_start":551,"line_end":551,"column_start":12,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":173665,"byte_end":173671,"line_start":647,"line_end":647,"column_start":15,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177408,"byte_end":177414,"line_start":769,"line_end":769,"column_start":28,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3253},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177632,"byte_end":177638,"line_start":780,"line_end":780,"column_start":32,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3253},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":177948,"byte_end":177953,"line_start":792,"line_end":792,"column_start":57,"column_end":62},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3234},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":178403,"byte_end":178409,"line_start":806,"line_end":806,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3274},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":178504,"byte_end":178510,"line_start":812,"line_end":812,"column_start":25,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3274},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":178944,"byte_end":178950,"line_start":830,"line_end":830,"column_start":24,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3274},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":179414,"byte_end":179420,"line_start":851,"line_end":851,"column_start":29,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3274},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/easy.rs","byte_start":180338,"byte_end":180344,"line_start":888,"line_end":888,"column_start":24,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3274},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181389,"byte_end":181399,"line_start":30,"line_end":30,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":787},"to":{"krate":0,"index":795}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181874,"byte_end":181885,"line_start":48,"line_end":48,"column_start":35,"column_end":46},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3639},"to":{"krate":0,"index":799}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":181967,"byte_end":181981,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3678},"to":{"krate":0,"index":799}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":182089,"byte_end":182095,"line_start":57,"line_end":57,"column_start":37,"column_end":43},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":799}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183137,"byte_end":183143,"line_start":92,"line_end":92,"column_start":16,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183434,"byte_end":183440,"line_start":103,"line_end":103,"column_start":13,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":183835,"byte_end":183841,"line_start":114,"line_end":114,"column_start":34,"column_end":40},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":184278,"byte_end":184284,"line_start":128,"line_end":128,"column_start":34,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186181,"byte_end":186196,"line_start":200,"line_end":200,"column_start":33,"column_end":48},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3318},"to":{"krate":0,"index":787}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186631,"byte_end":186646,"line_start":228,"line_end":228,"column_start":6,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":186901,"byte_end":186916,"line_start":238,"line_end":238,"column_start":52,"column_end":67},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3318},"to":{"krate":0,"index":795}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187347,"byte_end":187361,"line_start":257,"line_end":257,"column_start":18,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3331},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187468,"byte_end":187482,"line_start":263,"line_end":263,"column_start":23,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3331},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187628,"byte_end":187642,"line_start":269,"line_end":269,"column_start":6,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":187741,"byte_end":187755,"line_start":275,"line_end":275,"column_start":27,"column_end":41},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3331},"to":{"krate":0,"index":787}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":188297,"byte_end":188311,"line_start":304,"line_end":304,"column_start":25,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3331},"to":{"krate":0,"index":787}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":188872,"byte_end":188886,"line_start":333,"line_end":333,"column_start":45,"column_end":59},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3331},"to":{"krate":0,"index":795}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":189058,"byte_end":189064,"line_start":341,"line_end":341,"column_start":39,"column_end":45},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/position.rs","byte_start":190775,"byte_end":190781,"line_start":403,"line_end":403,"column_start":35,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3297},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":192915,"byte_end":192920,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3358},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":193232,"byte_end":193237,"line_start":28,"line_end":28,"column_start":20,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3358},"to":{"krate":2,"index":1692}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":193521,"byte_end":193526,"line_start":38,"line_end":38,"column_start":48,"column_end":53},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3358},"to":{"krate":0,"index":217}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":195000,"byte_end":195005,"line_start":109,"line_end":109,"column_start":67,"column_end":72},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3358},"to":{"krate":0,"index":250}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196092,"byte_end":196098,"line_start":161,"line_end":161,"column_start":30,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/read.rs","byte_start":196476,"byte_end":196482,"line_start":177,"line_end":177,"column_start":9,"column_end":15},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":197906,"byte_end":197910,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3368},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198070,"byte_end":198074,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198368,"byte_end":198374,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3408},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":198488,"byte_end":198494,"line_start":46,"line_end":46,"column_start":28,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":199229,"byte_end":199235,"line_start":71,"line_end":71,"column_start":27,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":199993,"byte_end":199999,"line_start":97,"line_end":97,"column_start":32,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/span.rs","byte_start":201301,"byte_end":201307,"line_start":144,"line_end":144,"column_start":27,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3408},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202046,"byte_end":202052,"line_start":12,"line_end":12,"column_start":27,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3440},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202210,"byte_end":202216,"line_start":22,"line_end":22,"column_start":28,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3440},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202560,"byte_end":202566,"line_start":39,"line_end":39,"column_start":27,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3440},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/state.rs","byte_start":202942,"byte_end":202948,"line_start":58,"line_end":58,"column_start":32,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3440},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":204115,"byte_end":204121,"line_start":21,"line_end":21,"column_start":22,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3253},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":204504,"byte_end":204509,"line_start":35,"line_end":35,"column_start":34,"column_end":39},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3487},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":204643,"byte_end":204648,"line_start":42,"line_end":42,"column_start":57,"column_end":62},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205048,"byte_end":205055,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":205734,"byte_end":205741,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206098,"byte_end":206105,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":206196,"byte_end":206203,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/decoder.rs","byte_start":207193,"byte_end":207200,"line_start":137,"line_end":137,"column_start":15,"column_end":22},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":68692,"byte_end":68702,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1126},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":70990,"byte_end":71000,"line_start":143,"line_end":143,"column_start":24,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":1126},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71807,"byte_end":71817,"line_start":163,"line_end":163,"column_start":19,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":1126},"to":{"krate":0,"index":1137}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71820,"byte_end":71831,"line_start":163,"line_end":163,"column_start":32,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":1133},"to":{"krate":0,"index":1137}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71834,"byte_end":71844,"line_start":163,"line_end":163,"column_start":46,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":1122},"to":{"krate":0,"index":1137}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":71872,"byte_end":71877,"line_start":165,"line_end":165,"column_start":24,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1139},"to":{"krate":0,"index":1137}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72375,"byte_end":72385,"line_start":184,"line_end":184,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1126},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":72388,"byte_end":72399,"line_start":184,"line_end":184,"column_start":41,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":1133},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74424,"byte_end":74430,"line_start":242,"line_end":242,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":1137},"to":{"krate":0,"index":1151}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74433,"byte_end":74448,"line_start":242,"line_end":242,"column_start":33,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":1142},"to":{"krate":0,"index":1151}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":74481,"byte_end":74486,"line_start":244,"line_end":244,"column_start":29,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1153},"to":{"krate":0,"index":1151}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87037,"byte_end":87050,"line_start":749,"line_end":749,"column_start":21,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87141,"byte_end":87154,"line_start":755,"line_end":755,"column_start":24,"column_end":37},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3535},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87301,"byte_end":87314,"line_start":765,"line_end":765,"column_start":25,"column_end":38},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3535},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87639,"byte_end":87652,"line_start":782,"line_end":782,"column_start":24,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3535},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":87997,"byte_end":88010,"line_start":801,"line_end":801,"column_start":29,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3535},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89111,"byte_end":89125,"line_start":844,"line_end":844,"column_start":21,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89454,"byte_end":89468,"line_start":857,"line_end":857,"column_start":24,"column_end":38},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89615,"byte_end":89629,"line_start":867,"line_end":867,"column_start":25,"column_end":39},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":89954,"byte_end":89968,"line_start":884,"line_end":884,"column_start":24,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":90314,"byte_end":90328,"line_start":903,"line_end":903,"column_start":29,"column_end":43},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91215,"byte_end":91233,"line_start":941,"line_end":941,"column_start":24,"column_end":42},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3601},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91380,"byte_end":91398,"line_start":951,"line_end":951,"column_start":25,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3601},"to":{"krate":0,"index":1133}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":91723,"byte_end":91741,"line_start":968,"line_end":968,"column_start":24,"column_end":42},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3601},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":92088,"byte_end":92106,"line_start":987,"line_end":987,"column_start":29,"column_end":47},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3601},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":93076,"byte_end":93087,"line_start":1026,"line_end":1026,"column_start":23,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3639},"to":{"krate":2,"index":1664}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":93205,"byte_end":93216,"line_start":1032,"line_end":1032,"column_start":28,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3639},"to":{"krate":0,"index":1122}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":93401,"byte_end":93412,"line_start":1042,"line_end":1042,"column_start":28,"column_end":39},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3639},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":94703,"byte_end":94714,"line_start":1105,"line_end":1105,"column_start":33,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3639},"to":{"krate":0,"index":1142}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96147,"byte_end":96161,"line_start":1160,"line_end":1160,"column_start":13,"column_end":27},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96648,"byte_end":96662,"line_start":1176,"line_end":1176,"column_start":26,"column_end":40},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":5035}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":96844,"byte_end":96858,"line_start":1186,"line_end":1186,"column_start":38,"column_end":52},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3678},"to":{"krate":0,"index":1126}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97403,"byte_end":97416,"line_start":1207,"line_end":1207,"column_start":27,"column_end":40},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":1664}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97521,"byte_end":97534,"line_start":1213,"line_end":1213,"column_start":26,"column_end":39},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":1976}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97570,"byte_end":97583,"line_start":1215,"line_end":1215,"column_start":29,"column_end":42},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97685,"byte_end":97698,"line_start":1221,"line_end":1221,"column_start":31,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":1692}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97803,"byte_end":97816,"line_start":1227,"line_end":1227,"column_start":24,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":97855,"byte_end":97868,"line_start":1229,"line_end":1229,"column_start":32,"column_end":45},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":1729}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98006,"byte_end":98019,"line_start":1235,"line_end":1235,"column_start":25,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":1718}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98132,"byte_end":98145,"line_start":1241,"line_end":1241,"column_start":24,"column_end":37},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":6310}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98299,"byte_end":98312,"line_start":1250,"line_end":1250,"column_start":26,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/stream/mod.rs","byte_start":98481,"byte_end":98494,"line_start":1259,"line_end":1259,"column_start":9,"column_end":22},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":291445,"byte_end":291451,"line_start":356,"line_end":356,"column_start":34,"column_end":40},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6667},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":298246,"byte_end":298248,"line_start":562,"line_end":562,"column_start":42,"column_end":44},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6678},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/choice.rs","byte_start":300402,"byte_end":300410,"line_start":635,"line_end":635,"column_start":34,"column_end":42},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6692},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":307806,"byte_end":307819,"line_start":17,"line_end":17,"column_start":37,"column_end":50},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6705},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":309652,"byte_end":309655,"line_start":85,"line_end":85,"column_start":37,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6717},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":311644,"byte_end":311653,"line_start":164,"line_end":164,"column_start":37,"column_end":46},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6731},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":312791,"byte_end":312794,"line_start":210,"line_end":210,"column_start":43,"column_end":46},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6743},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":313892,"byte_end":313900,"line_start":255,"line_end":255,"column_start":43,"column_end":51},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6761},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":315069,"byte_end":315076,"line_start":300,"line_end":300,"column_start":43,"column_end":50},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6779},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":316454,"byte_end":316461,"line_start":351,"line_end":351,"column_start":43,"column_end":50},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6797},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":318831,"byte_end":318840,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":321374,"byte_end":321383,"line_start":494,"line_end":494,"column_start":37,"column_end":46},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6815},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":323005,"byte_end":323011,"line_start":551,"line_end":551,"column_start":37,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1876},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":325295,"byte_end":325304,"line_start":629,"line_end":629,"column_start":34,"column_end":43},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1895},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":326220,"byte_end":326226,"line_start":672,"line_end":672,"column_start":34,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6837},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":327408,"byte_end":327429,"line_start":724,"line_end":724,"column_start":34,"column_end":55},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1923},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":330114,"byte_end":330139,"line_start":827,"line_end":827,"column_start":34,"column_end":59},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":332888,"byte_end":332917,"line_start":930,"line_end":930,"column_start":34,"column_end":63},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1953},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":335503,"byte_end":335507,"line_start":1024,"line_end":1024,"column_start":40,"column_end":44},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6881},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337486,"byte_end":337493,"line_start":1096,"line_end":1096,"column_start":12,"column_end":19},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6892},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":337809,"byte_end":337816,"line_start":1109,"line_end":1109,"column_start":40,"column_end":47},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6892},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339889,"byte_end":339895,"line_start":1181,"line_end":1181,"column_start":20,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":2008},"to":{"krate":0,"index":2010}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":339986,"byte_end":339992,"line_start":1186,"line_end":1186,"column_start":17,"column_end":23},"kind":{"Impl":{"id":176}},"from":{"krate":5,"index":5077},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":340037,"byte_end":340043,"line_start":1188,"line_end":1188,"column_start":18,"column_end":24},"kind":{"Impl":{"id":177}},"from":{"krate":5,"index":5077},"to":{"krate":0,"index":2010}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":340411,"byte_end":340414,"line_start":1209,"line_end":1209,"column_start":17,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":5,"index":4364},"to":{"krate":0,"index":2008}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":340463,"byte_end":340466,"line_start":1211,"line_end":1211,"column_start":18,"column_end":21},"kind":{"Impl":{"id":181}},"from":{"krate":5,"index":4364},"to":{"krate":0,"index":2010}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":342681,"byte_end":342687,"line_start":1286,"line_end":1286,"column_start":40,"column_end":46},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6938},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":347066,"byte_end":347080,"line_start":1429,"line_end":1429,"column_start":49,"column_end":63},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2063},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/combinator.rs","byte_start":349164,"byte_end":349171,"line_start":1510,"line_end":1510,"column_start":37,"column_end":44},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6961},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":350935,"byte_end":350945,"line_start":18,"line_end":18,"column_start":37,"column_end":47},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6972},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":353142,"byte_end":353149,"line_start":97,"line_end":97,"column_start":37,"column_end":44},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6984},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":354695,"byte_end":354703,"line_start":154,"line_end":154,"column_start":37,"column_end":45},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6998},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/error.rs","byte_start":355887,"byte_end":355893,"line_start":200,"line_end":200,"column_start":34,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7012},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":358822,"byte_end":358830,"line_start":69,"line_end":69,"column_start":37,"column_end":45},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7022},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":359572,"byte_end":359581,"line_start":105,"line_end":105,"column_start":29,"column_end":38},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7035},"to":{"krate":2,"index":1664}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/function.rs","byte_start":359809,"byte_end":359818,"line_start":118,"line_end":118,"column_start":37,"column_end":46},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7035},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":362454,"byte_end":362459,"line_start":35,"line_end":35,"column_start":31,"column_end":36},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2263},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":366055,"byte_end":366073,"line_start":153,"line_end":153,"column_start":34,"column_end":52},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7071},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":369398,"byte_end":369402,"line_start":261,"line_end":261,"column_start":31,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2295},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":370508,"byte_end":370517,"line_start":305,"line_end":305,"column_start":34,"column_end":43},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2307},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":372073,"byte_end":372083,"line_start":363,"line_end":363,"column_start":34,"column_end":44},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2325},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":373642,"byte_end":373656,"line_start":423,"line_end":423,"column_start":31,"column_end":45},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2343},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378191,"byte_end":378200,"line_start":543,"line_end":543,"column_start":30,"column_end":39},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7084},"to":{"krate":2,"index":1884}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/range.rs","byte_start":378500,"byte_end":378506,"line_start":557,"line_end":557,"column_start":37,"column_end":43},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2357},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":386968,"byte_end":386983,"line_start":89,"line_end":89,"column_start":22,"column_end":37},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2414},"to":{"krate":2,"index":5035}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":387654,"byte_end":387665,"line_start":119,"line_end":119,"column_start":37,"column_end":48},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7170},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":391053,"byte_end":391057,"line_start":252,"line_end":252,"column_start":26,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":393632,"byte_end":393636,"line_start":338,"line_end":338,"column_start":39,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2441},"to":{"krate":2,"index":5035}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":394746,"byte_end":394750,"line_start":380,"line_end":380,"column_start":37,"column_end":41},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7210},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":396781,"byte_end":396786,"line_start":452,"line_end":452,"column_start":37,"column_end":42},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":7225},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399289,"byte_end":399293,"line_start":543,"line_end":543,"column_start":18,"column_end":22},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":7242},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":399367,"byte_end":399371,"line_start":549,"line_end":549,"column_start":23,"column_end":27},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7242},"to":{"krate":2,"index":4953}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":401094,"byte_end":401099,"line_start":618,"line_end":618,"column_start":40,"column_end":45},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7284},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":403195,"byte_end":403201,"line_start":693,"line_end":693,"column_start":40,"column_end":46},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7304},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":406309,"byte_end":406317,"line_start":801,"line_end":801,"column_start":40,"column_end":48},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":7324},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":408395,"byte_end":408404,"line_start":875,"line_end":875,"column_start":40,"column_end":49},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":7342},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":411627,"byte_end":411634,"line_start":982,"line_end":982,"column_start":38,"column_end":45},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":7360},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":414251,"byte_end":414258,"line_start":1072,"line_end":1072,"column_start":38,"column_end":45},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":7375},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":416677,"byte_end":416686,"line_start":1147,"line_end":1147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7388},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":420948,"byte_end":420959,"line_start":1270,"line_end":1270,"column_start":40,"column_end":51},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7421},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":424766,"byte_end":424773,"line_start":1384,"line_end":1384,"column_start":37,"column_end":44},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2639},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/repeat.rs","byte_start":428683,"byte_end":428690,"line_start":1495,"line_end":1495,"column_start":43,"column_end":50},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2659},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":432944,"byte_end":432957,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":433105,"byte_end":433118,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":450193,"byte_end":450197,"line_start":496,"line_end":496,"column_start":39,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":9153},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":451373,"byte_end":451377,"line_start":544,"line_end":544,"column_start":39,"column_end":43},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":9170},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":453105,"byte_end":453109,"line_start":614,"line_end":614,"column_start":40,"column_end":44},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":9237},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":455629,"byte_end":455640,"line_start":704,"line_end":704,"column_start":40,"column_end":51},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":9252},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/sequence.rs","byte_start":458326,"byte_end":458333,"line_start":801,"line_end":801,"column_start":40,"column_end":47},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":9267},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":461334,"byte_end":461337,"line_start":17,"line_end":17,"column_start":31,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":9282},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":462696,"byte_end":462703,"line_start":73,"line_end":73,"column_start":34,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":9291},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":463804,"byte_end":463814,"line_start":121,"line_end":121,"column_start":37,"column_end":47},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":9303},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":465201,"byte_end":465206,"line_start":179,"line_end":179,"column_start":31,"column_end":36},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":9315},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":466320,"byte_end":466326,"line_start":230,"line_end":230,"column_start":40,"column_end":46},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":9324},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":469557,"byte_end":469566,"line_start":334,"line_end":334,"column_start":37,"column_end":46},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":9339},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":472410,"byte_end":472418,"line_start":431,"line_end":431,"column_start":31,"column_end":39},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":9351},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":473465,"byte_end":473470,"line_start":477,"line_end":477,"column_start":34,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":9359},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":474717,"byte_end":474723,"line_start":530,"line_end":530,"column_start":34,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":9371},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476165,"byte_end":476170,"line_start":581,"line_end":581,"column_start":34,"column_end":39},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":9383},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":476916,"byte_end":476923,"line_start":616,"line_end":616,"column_start":37,"column_end":44},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":9396},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/token.rs","byte_start":477779,"byte_end":477782,"line_start":652,"line_end":652,"column_start":31,"column_end":34},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":9409},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":241799,"byte_end":241805,"line_start":958,"line_end":958,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":2946},"to":{"krate":0,"index":3016}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":244092,"byte_end":244093,"line_start":1029,"line_end":1029,"column_start":38,"column_end":39},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3022},"to":{"krate":0,"index":3016}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":245592,"byte_end":245595,"line_start":1090,"line_end":1090,"column_start":34,"column_end":37},"kind":{"Impl":{"id":238}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":2946}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":245856,"byte_end":245860,"line_start":1101,"line_end":1101,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":3031}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247317,"byte_end":247326,"line_start":1149,"line_end":1149,"column_start":20,"column_end":29},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":9432},"to":{"krate":0,"index":3031}},{"span":{"file_name":"/home/check0ut/.cargo/registry/src/github.com-1ecc6299db9ec823/combine-4.6.0/src/parser/mod.rs","byte_start":247906,"byte_end":247917,"line_start":1177,"line_end":1177,"column_start":20,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":9437},"to":{"krate":0,"index":3031}}]}